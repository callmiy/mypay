{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/immediate/lib/browser.js","webpack:///./node_modules/argsarray/index.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/utils.js","webpack:///./node_modules/spark-md5/spark-md5.js","webpack:///./node_modules/pouchdb-md5/lib/index-browser.es.js","webpack:///./node_modules/graphql-tag/src/index.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/exception.js","webpack:///./node_modules/pouchdb-binary-utils/lib/index-browser.es.js","webpack:///./src/graphql/helpers.ts","webpack:///./src/utils/utils.ts","webpack:///(webpack)/buildin/global.js","webpack:///./src/graphql/gen.types.ts","webpack:///./src/graphql/shifts.query.ts","webpack:///./src/socket.ts","webpack:///./src/service-worker/register-service-worker1.ts","webpack:///./src/service-worker/show-refresh-ui.ts","webpack:///./src/app.ts","webpack:///./node_modules/pouchdb-browser/lib/index.es.js","webpack:///./node_modules/pouchdb-browser/node_modules/uuid/index.js","webpack:///./node_modules/vuvuzela/index.js","webpack:///./node_modules/pouchdb-utils/node_modules/uuid/index.js","webpack:///./src/graphql/shift.fragment.ts","webpack:///./node_modules/pouchdb-collections/lib/index.es.js","webpack:///./node_modules/pouchdb-errors/lib/index.es.js","webpack:///./node_modules/pouchdb-utils/lib/index-browser.es.js","webpack:///./node_modules/pouchdb-fetch/lib/index-browser.es.js","webpack:///./node_modules/pouchdb-collate/lib/index.es.js","webpack:///./node_modules/pouchdb-selector-core/lib/index.es.js","webpack:///./node_modules/pouchdb-mapreduce-utils/lib/index.es.js","webpack:///./node_modules/pouchdb-abstract-mapreduce/lib/index.es.js","webpack:///./node_modules/pouchdb-find/lib/index-browser.es.js","webpack:///./src/database/index.ts","webpack:///./node_modules/pouchdb-browser/node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/pouchdb-browser/node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/pouchdb-utils/node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/pouchdb-utils/node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/base.js","webpack:///./node_modules/phoenix/priv/static/phoenix.js","webpack:///./src/service-worker/show-refresh-ui.handlebars","webpack:///./node_modules/handlebars/runtime.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/pouchdb-browser/node_modules/uuid/v1.js","webpack:///./node_modules/pouchdb-browser/node_modules/uuid/v4.js","webpack:///./node_modules/pouchdb-utils/node_modules/uuid/v1.js","webpack:///./node_modules/pouchdb-utils/node_modules/uuid/v4.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars.runtime.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/helpers.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/helpers/each.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/helpers/if.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/helpers/log.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/helpers/with.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/decorators.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/logger.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/safe-string.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/runtime.js","webpack:///./node_modules/handlebars/dist/cjs/handlebars/no-conflict.js","webpack:///./node_modules/graphql/jsutils/invariant.mjs","webpack:///./node_modules/graphql/language/source.mjs","webpack:///./node_modules/graphql/language/location.mjs","webpack:///./node_modules/graphql/error/printError.mjs","webpack:///./node_modules/graphql/error/GraphQLError.mjs","webpack:///./node_modules/graphql/error/syntaxError.mjs","webpack:///./node_modules/graphql/error/formatError.mjs","webpack:///./node_modules/graphql/language/blockStringValue.mjs","webpack:///./node_modules/graphql/language/lexer.mjs","webpack:///./node_modules/graphql/language/kinds.mjs","webpack:///./node_modules/graphql/language/directiveLocation.mjs","webpack:///./node_modules/graphql/language/parser.mjs"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ctor","superCtor","super_","constructor","writable","configurable","TempCtor","EventEmitter","this","_events","_maxListeners","undefined","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNumber","isNaN","TypeError","emit","type","er","handler","len","args","listeners","error","length","arguments","Error","err","context","Array","slice","apply","addListener","listener","newListener","push","warned","console","trace","on","once","fired","g","removeListener","list","position","splice","removeAllListeners","listenerCount","evlistener","emitter","scheduleDrain","draining","Mutation","global","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","task","fun","__assign","assign","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","_","label","sent","trys","ops","verb","throw","return","iterator","v","op","pop","__makeTemplateObject","cooked","raw","extend","indexOf","array","escapeExpression","string","toHTML","possible","test","replace","badChars","escapeChar","isEmpty","isArray","createFrame","frame","_parent","blockParams","params","ids","path","appendContextPath","contextPath","id","escape","&","<",">","\"","'","`","=","chr","obj","toString","hex_chr","md5cycle","x","k","a","b","md5blk","md5blks","charCodeAt","md5blk_array","md51","tail","tmp","lo","hi","state","substring","match","parseInt","rhex","j","hex","join","toUtf8","str","unescape","encodeURIComponent","hexToBinaryString","bytes","substr","String","fromCharCode","SparkMD5","reset","ArrayBuffer","clamp","val","Math","max","min","from","to","num","target","targetArray","sourceArray","byteLength","begin","end","Uint8Array","set","append","appendBinary","contents","_buff","_length","_hash","ret","buff","_finish","getState","hash","setState","destroy","hashBinary","content","arr","first","second","returnUInt8Array","buffer","concatenateArrayBuffers","subarray","arrayBuffer2Utf8Str","utf8Str2ArrayBuffer","md51_array","factory","stringMd5","spark_md5__WEBPACK_IMPORTED_MODULE_1___default","parse","normalize","trim","docCache","fragmentSourceMap","cacheKeyFromLoc","loc","source","start","printFragmentWarnings","experimentalFragmentVariables","parseDocument","doc","cacheKey","parsed","kind","stripLoc","removeLocAtThisLevel","docType","map","startToken","endToken","valueType","keys","ast","astFragmentMap","definitions","fragmentDefinition","fragmentName","sourceKey","warn","processFragments","gql","literals","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","errorProps","Exception","message","node","line","column","idx","captureStackTrace","lineNumber","nop","thisAtob","atob","thisBtoa","btoa","binStringToBluffer","binString","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","getBlob","createBlob","bin","buf","binaryStringToArrayBuffer","b64ToBluffer","b64","readAsArrayBuffer","blob","callback","reader","FileReader","onloadend","toRunableDocument","variables","query","stringifyGraphQlErrors","_a","errors","reduce","prev","concat","htmlfyGraphQlErrors","msg_1","JSON","html","charAt","toUpperCase","capitalize","Function","eval","window","SortingDirective","shifts_query","src_default","templateObject_1","tslib_es6","shift_fragment","socket_database","database","socket_AppSocket","_this","dataChannelName","dataChannelJoined","joinDataChannel","dataChannel","socket","channelJoin","getAllShiftsForMonth","today","Date","shift","where","year","getFullYear","month","getMonth","orderBy","date","DESC","shiftQuery","helpers","sendChannelMsg","topic","ok","allShifts","shifts","db","find","selector","typename__","$eq","foundShifts","docs","ids_1","filteredAllShifts","filter","includes","bulkDocs","channelName","receive","messages","log","getTime","reason","appInterface","serverOnlineStatus","reasons","phoenix","connect","onOpen","onError","updateReady","worker","ui","getElementById","innerHTML","show_refresh_ui_handlebars","container","addEventListener","action","location","reload","show_refresh_ui","register_service_worker1","navigator","serviceWorker","register","scope","reg","controller","waiting","installing","worker_1","worker1","app_socket","getSocket","docReady","fn","sidebarEl","sidebar","containerEl","sidebarTriggerEl","evt","stopPropagation","classList","remove","preventDefault","contains","sidebarAction","cloneBinaryObject","cloneArrayBuffer","size","webkitSlice","ExportedSet","ExportedMap","funcToString","objectCtorString","clone","newObject","toISOString","isBinaryObject","proto","getPrototypeOf","Ctor","isPlainObject","argsarray__WEBPACK_IMPORTED_MODULE_0___default","toPromise","func","self","usedCB","promise","fulfill","resp","mesg","adapterFun","_closed","_destroyed","logArgs","origCallback","res","responseArgs","logApiCall","taskqueue","isReady","addTask","failed","mangle","unmangle","Map$1","_store","Set$1","add","pick","prop","mangled","has","delete","forEach","cb","Map","Set","getOwnPropertyDescriptor","species","supportsMapAndSet","hasLocal","MAX_NUM_CONCURRENT_REQUESTS","identityFunction","formatResultForOpenRevsGet","bulkGet","opts","requests","requestsById","request","numDocs","numDone","perDocResults","checkDone","results","info","collapseResultsAndFinish","allRequests","nextBatch","upTo","batch","offset","docId","docIdx","docRequests","docOpts","open_revs","rev","formatResult","param","docIndex","gotResult","processBatch","localStorage","setItem","getItem","hasLocalStorage","Changes","events__WEBPACK_IMPORTED_MODULE_2__","_listeners","attachBrowserEvents","guardedConsole","method","defaultBackOff","maxTimeout","random","randomNumber","explainError","status","inherits__WEBPACK_IMPORTED_MODULE_3___default","dbName","inprogress","eventFunction","changesOpts","changes","seq","since","cancelled","onChange","immediate__WEBPACK_IMPORTED_MODULE_1___default","notifyLocalWindows","notify","$inject_Object_assign","index","nextSource","nextKey","PouchError","stringify","MISSING_BULK_DOCS","MISSING_DOC","REV_CONFLICT","INVALID_ID","MISSING_ID","RESERVED_ID","UNKNOWN_ERROR","BAD_ARG","QUERY_PARSE_ERROR","DOC_VALIDATION","BAD_REQUEST","NOT_AN_OBJECT","IDB_ERROR","INVALID_REV","MISSING_STUB","createError","CustomPouchError","generateErrorFromResponse","filterChange","req","hasFilter","query_params","change","filterReturn","msg","tryFilter","include_docs","attachments","att","_attachments","stub","flatten","arrs","invalidIdError","isRemote","_remote","parseDesignDocFunctionName","split","normalizeDesignDocFunctionName","normalized","qName","qParser","parser","parseUri","exec","uri","encoded","decodeURIComponent","$0","$1","$2","scopeEval","values","upsert","diffFun","docRev","_rev","newDoc","updated","_id","put","tryAndPut","readAsBinaryString","hasBinaryString","binary","arrayBufferToBinaryString","blobToBinaryString","blobOrBuffer","blobToBase64","base64","setImmediateShim","MD5_CHUNK_SIZE","appendBlob","sliceBlob","arrayBuffer","appendString","binaryMd5","inputIsString","chunkSize","chunks","ceil","currentChunk","spark_md5__WEBPACK_IMPORTED_MODULE_4___default","loadNextChunk","rawToBase64","rev$$1","deterministic_revs","clonedDoc","_rev_tree","uuid__WEBPACK_IMPORTED_MODULE_5___default","v4","toLowerCase","uuid","winningRev","metadata","winningId","winningPos","winningDeleted","toVisit","rev_tree","tree","branches","pos","deleted","traverseRevTree","revs","newCtx","ctx","sortByPos","collectLeaves","leaves","isLeaf","acc","sort","reverse","collectConflicts","win","conflicts","leaf","rootToLeaf","paths","history","sortByPos$1","insertSorted","item","comparator","mid","low","high","binarySearch","pathToTree","numStemmed","root","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","diff","candidateParents","trees","parent","parentIdx","elements","elementsLen","el","merge","depth","newTree","stemmed","stemmedRevs","revHash","stem","getTrees","isDeleted","isLocalId","Changes$1","complete","ee","onDestroy","cancel","pending","lastSeq","isCancelled","tryCatchInChangeListener","validateChanges","processChange","changeList","style","_conflicts","compare","left","right","yankError","compareByIdThenRev","idCompare","_revisions","AbstractPouchDB","TaskQueue","PouchDB","__opts","auto_compaction","prefix","backend","adapter","adapters","preferredAdapters","adapterName","use_prefix","parseAdapter","_adapter","valid","fail","onDestroyed","from_constructor","onClosed","prepareForDestruction","ready","_changesFilterPlugin","validate","doChanges","continuous","live","shouldFilter","descending","limit","newPromise","_changes","update_seq","post","_putLocal","_deleted","_removeLocal","putDoc","_put","new_edits","force","oldRevId","newRevNum","newRevId","transformForceOptionToNewEditsOption","putAttachment","attachmentId","api","createAttachment","prevrevpos","content_type","revpos","removeAttachment","docOrId","optsOrRev","was_delete","revsDiff","count","missing","addToMissing","revId","_getRevisionTree","missingForId","processDoc","missingObj","compactDocument","maxHeight","revTree","height","edges","prnt","edge","computeHeight","candidates","_doCompaction","compact","_compactionQueue","doNextCompaction","catch","last_seq","_compact","return_docs","promises","row","all","_getLocal","finishOpenRevs","latest","existing","_get","revs_info","splittedRev","revNo","currentPath","hashIndex","indexOfRev","howMany","_revs_info","_getAttachment","getAttachment","allDocs","skip","start_key","startkey","end_key","endkey","incompatibleOpt","allDocsKeysParse","_allDocs","close","_close","_info","db_name","_type","attachmentError","attachmentNameError","atts","cleanDocs","_bulkDocs","registerDependentDatabase","dependentDb","depDB","dependentDbs","usePrefix","destroyDb","_destroy","localDoc","deletedMap","trueName","RegExp","execute","AbortController","abort","f$1","fetch","h","Headers","eventEmitter","Pouch","destructListeners","_destructionListeners","dbList","setUpEventEmitter","addToPreferredAdapters","plugin","__defaults","defaults","defaultOpts","PouchAlt","url","getFieldFromDoc","parsedField","parseField","fieldName","fields","current","ch","combinationFields","isCombinationalField","field","getKey","mergeAndedSelectors","selectors","matcher","fieldMatchers","operator","$gte","$gt","mergeGtGte","$lte","$lt","mergeLtLte","$ne","mergeNe","mergeEq","MIN_MAGNITUDE","MAGNITUDE_DIGITS","SEP","collate","normalizeKey","ai","collationIndex","bi","stringCollate","arrayCollate","ak","bk","objectCollate","Infinity","origKey","toJSON","indexify","expFormat","toExponential","magnitude","neg","magString","padWith","upToLength","padding","targetLength","pad","padLeft","factor","abs","parseFloat","factorStr","toFixed","numToIndexableString","toIndexableString","objKey","parseNumber","originalIdx","numAsString","magAsString","stack","metaStack","lastMetaElement","lastElementIndex","filterInMemoryFields","rows","requestDef","inMemoryFields","rowFilter","fieldSorter","getFieldValuesAsArray","sorting","aRow","bRow","collation","compare$1","createFieldSorter","getValue","every","docFieldValue","some","orMatchers","matchCominationalSelector","matchSelector","userOperator","userValue","matchers","fieldExists","fieldIsNotUndefined","arrayContainsValue","$elemMatch","$allMatch","$exists","$mod","divisor","mod","modField","neValue","$in","$nin","$size","arraySize","$all","arrayContainsAllValues","$regex","regexMatch","$type","typeMatch","matchesSelector","rowsMatched","input","wasAnded","orOrNor","subSelector","massageSelector","filterName","view","changesHandler","doc_ids","viewName","ddoc","mapFun","views","evalView","filterFun","filters","evalFilter","toObject","version","reservedWords","dataWords","parseRevisionInfo","parseDoc","newEdits","dbOpts","nRevNum","revInfo","revisions","revisionIds","makeRevTreeFromRevisions","specialKey","preprocessString","blobType","asBinary","parseBase64","digest","preprocessAttachment","md5","preprocessBlob","updateDoc","revLimit","docInfo","writeDoc","splitRev","targetPos","targetId","revExists","previousWinningRev","previouslyDeleted","isRoot","newRev","rev_map","winningRev$$1","winningRevIsDeleted","delta","processDocs","docInfos","fetchedDocs","tx","overallCallback","idsToDocs","docsDone","docsToDo","checkAllDocsDone","currentDoc","resultsIdx","docWritten","nextDoc","rootIsMissing","insertDoc","ADAPTER_VERSION","DOC_STORE","BY_SEQ_STORE","ATTACH_STORE","ATTACH_AND_SEQ_STORE","META_STORE","LOCAL_STORE","DETECT_BLOB_SUPPORT_STORE","idbError","encodeMetadata","json","vuvuzela__WEBPACK_IMPORTED_MODULE_6___default","safeJsonStringify","deletedOrLocal","decodeMetadata","storedObject","safeJsonParse","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","asBlob","fetchAttachmentsIfNecessary","txn","attObj","objectStore","onsuccess","fetchAttachment","postProcessAttachments","attNames","compactRevs","possiblyOrphanedDigests","seqStore","attStore","attAndSeqStore","countReq","IDBKeyRange","bound","deleteOrphanedAttachments","openCursor","only","event","cursor","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","transaction","idbBulkDocs","docStore","bySeqStore","attachStore","attachAndSeqStore","metaStore","docInfoError","metaDoc","allDocsProcessed","docCountDelta","preconditionErrored","_meta","blobSupport","onAllDocsProcessed","updateDocCountIfReady","docCount","newRevIsDeleted","isUpdate","collectResults","finishDoc","attachmentSaved","newAtt","putReq","saveAttachment","writeAttachments","afterPutDoc","revsToDelete","compactTree","metadataToStore","afterPutMetadata","attsAdded","attsToAdd","onerror","insertAttachmentMappings","overallErr","docv","recv","processedAttachment","preprocessAttachments","txnResult","onabort","ontimeout","oncomplete","finish","digests","filename","verifyAttachment","attErr","verifyAttachments","numFetched","revs_limit","readMetadata","fetchExistingDocs","startTransaction","runBatchedCursor","keyRange","batchSize","onBatch","keysBatch","valuesBatch","pseudoCursor","onGetAll","onGetAllKeys","onCursor","getAll","getAllKeys","newKeyRange","lastKey","upper","upperOpen","code","lowerBound","idbAllDocs","keyRangeError","inclusiveEnd","inclusive_end","upperBound","createKeyRange","onResultsReady","updateSeq","docIdRevIndex","allDocsInner","fetchDocAsynchronously","batchValues","batchValue","batchKeys","returnVal","total_rows","onSuccess","maxKey","getMaxUpdateSeq","allDocsKeys","running","applyNext","docIds","numResults","docIdsToMetadata","onGetMetadata","docIdRev","objectStores","winningDocs","metadatas","fetchWinningDocAndMetadata","winningDoc","processMetadataAndWinningDoc","onBatchDone","filtered","blobSupportPromise","cachedDBs","openReqList","IdbPouch","tryCode","enqueueTask","thisCallback","addDeletedOrLocalIndex","createIndex","unique","migrateLocalStore","localStore","local","range","seqCursor","migrateAttsAndSeqs","digestMap","migrateMetadata","decodeMetadataCompat","onGetMetadataSeq","metadataSeq","fetchMetadataSeq","instanceId","reqOpts","historyNode","attachId","attachment","blobData","doc_count","idb_attachment_format","oldRev","oStore","oldDoc","openReq","indexedDB","deleteDatabase","cached","open","onupgradeneeded","oldVersion","createObjectStore","keyPath","autoIncrement","createSchema","currentTarget","createLocalStoreSchema","addAttachAndSeqStore","migrations","migration","onversionchange","storedMetaDoc","completeSetup","storeMetaDocIfReady","instanceKey","countDocs","blob$$1","matchedChrome","userAgent","matchedEdge","checkBlobSupport","init","CHANGES_BATCH_SIZE","MAX_SIMULTANEOUS_REVS","CHANGES_TIMEOUT_BUFFER","DEFAULT_HEARTBEAT","supportsBulkGetMap","readAttachmentsAsBlobOrBuffer","encodeDocId","preprocessAttachments$1","getHost","protocol","hasUrlPrefix","user","password","auth","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","HttpPouch","dbUrl","setupPromise","ourFetch","options","headers","nAuth","token","ua","isIE","isTrident","isEdge","isGET","shouldCacheBust","now","adapterFun$$1","setup","fetchJSON","response","skip_setup","encodeAttachmentId","uuid$$1","ping","compact_running","interval","doBulkGet","doBulkGetShim","numBatches","onResult","batchNum","subOpts","supportsBulkGet","fetchAttachments","filenames","promiseFactories","doNext","runNextBatch","thisErr","pool","process","browser","fetchData","docOrDocs","fetchAllAttachments","contentType","Content-Type","paramStr","batch_size","heartbeat","requestTimeout","timeout","leftToFetch","feed","seq_interval","param_name","lastFetchedSeq","aborted","fetchOpts","signal","fetched","raw_results_length","finished","QueryParseError","NotFoundError","BuiltInError","promisedCallback","sequentialize","promiseFactory","that","uniq","theSet","mapToKeysArray","createBuiltInError","sum","jLen","jNum","evalFunctionWithEval","TaskQueue$1","createView","sourceDB","reduceFun","temporary","localDocName","cachedViews","viewSignature","createViewSignature","_cachedViews","promiseForView","depDbName","fullViewName","depDbs","lastSeqDoc","persistentQueues","tempViewQueue","CHANGES_BATCH_SIZE$1","parseViewName","emitError","builtInReduce","_sum","_count","_stats","sumsqr","_sumsqr","abstract","mapper","reducer","ddocValidator","tryMap","tryReduce","rereduce","output","sortByKeyThenValue","keyCompare","rowToDocId","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","Number","checkQueryParseError","startkeyName","endkeyName","group","group_level","optionName","number","checkPositiveInteger","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","metaDocId","defaultMetaDoc","docData","indexableKeysToKeyValues","isGenOne","getKeyValueDocs","kvDocsRes","kvDocs","oldKeys","keyValue","newKeys","kvDoc","processKeyValueDocs","getQueue","updateView","mapResults","currentSeq","listOfDocsToPersist","docsToPersist","saveKeyValues","processNextBatch","createIndexableKeysToKeyValues","createDocIdsToChangesAndEmits","emittedKeyValue","complexKey","updateViewInQueue","queryView","totalRows","shouldReduce","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","parsedNum","parsedStr","arrayElement","objElement","parseIndexableString","onMapResultsReady","finalResults","shouldGroup","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","sliceResults","reduceView","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","queryViewInQueue","queryPromised","_query","customQuery","keysAsString","httpQuery","finalPromiseFactory","fin","designDocName","stale","coerceOptions","viewCleanup","callbackify","_viewCleanup","customViewCleanup","httpViewCleanup","docsToViews","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","destroyPromises","localViewCleanup","createAbstractMapReduce","origMap","reduceFunString","builtIn","getBuiltIn","mapreduce","isGenOne$1","getDocAttachments","getDocs","src","diffs","resultDocs","fetchRevisionOneDocs","hasAttachments","hasConflicts","bulkGetOpts","missingRev","createBulkGetOpts","bulkGetResponse","bulkGetInfo","remoteDoc","doCheckForLocalAttachments","fileHasChanged","getDocAttachmentsFromTargetOrSource","Boolean","CHECKPOINT_VERSION","REPLICATOR","CHECKPOINT_HISTORY_SIZE","LOWEST_SEQ","updateCheckpoint","checkpoint","session","returnValue","session_id","replicator","unshift","Checkpointer","writeCheckpoint","updateTarget","updateSource","writeTargetCheckpoint","writeSourceCheckpoint","isForbiddenError","comparisons","targetDoc","sourceDoc","1","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","sourceId","hasSessionId","compareReplicationLogs","sessionId","props","rest","floor","getCheckpoint","STARTING_BACK_OFF","generateReplicationId","queryParams","filterViewName","sortObjectPropertiesByKey","queryData","md5sum","replicate","currentBatch","repId","checkpointer","batches","pendingBatch","writingCheckpoint","changesCompleted","replicationCompleted","batches_limit","changesPending","changedDocs","start_time","docs_read","docs_written","doc_write_failures","initCheckpointer","checkpointOpts","writeDocs","bulkOpts","completeReplication","errorsById","errorsNo","errorName","finishBatch","outResult","getChanges","onCheckpointError","getBatchDocs","got","startNextBatch","getDiffs","abortReplication","processPendingBatch","immediate","fatalError","end_time","retry","back_off_function","backOffSet","current_back_off","backOff","onChangesComplete","onChangesError","_abortChanges","abortChanges","startChanges","_addedListeners","Replication","toPouch","PouchConstructor","replicateWrapper","replicateRet","sync","Sync","canceled","optsPush","optsPull","pull","pullChange","direction","pushChange","pushDenied","pullDenied","pushPaused","pullPaused","pushActive","pullActive","removed","removeAll","addOneListener","out","success","_readyCalled","replicateMethods","other","__webpack_exports__","v1","arrayPrefix","objPrefix","numChar","parsedString","lastCh","numConsecutiveSlashes","shiftFragment","graphql_tag__WEBPACK_IMPORTED_MODULE_1___default","tslib__WEBPACK_IMPORTED_MODULE_0__","inherits_browser_default","clone$1","argsarray_default","events","browser_default","assign$1","uuid_default","setFieldInDoc","index_browser_es","lib_index_es","lib_index_browser_es","massageCreateIndexRequest","dbFetch","Content-type","index_browser_es_explain","getIndexes","deleteIndex","indexDef","getArguments","index_browser_es_callbackify","index_browser_es_promisedCallback","index_browser_es_flatten","subArr","mergeObjects","oneArrayIsSubArrayOfOther","arrayEquals","arr1","arr2","createMapper","isShallow","checkShallow","isSingle","createShallowSingleMapper","toEmit","createShallowMultiMapper","createDeepSingleMapper","iLen","createDeepMultiMapper","abstractMapper","mapFunDef","massageIndexDef","getKeyFromDoc","def","getIndexes$1","indexes","language","COLLATE_LO","COLLATE_HI","￿","checkFieldInIndex","indexFields","userOperatorLosesPrecision","sortFieldsByIndex","userFields","aIdx","bIdx","MAX_VALUE","getInMemoryFields","coreInMemoryFields","index_browser_es_uniq","needToFilterInMemory","getBasicInMemoryFields","getInMemoryFieldsFromNe","checkIndexFieldsMatch","sortOrder","sortMatches","oneArrayIsStrictSubArrayOfOther","selectorMatches","leftIdx","oneSetIsSubArrayOfOther","logicalMatchers","isNonLogicalMatcher","checkIndexMatches","matcherKey","checkFieldsLogicallySound","findBestMatchingIndex","useIndex","matchingIndexes","findMatchingIndexes","defaultIndex","defaultUsed","userFieldsMap","arrayToObject","useIndexDdoc","useIndexName","maxScore","score","indexField","getMultiFieldCoreQueryPlan","inclusive_start","getCoreQueryPlan","queryOpts","getDefaultQueryPlan","combinedOpts","newQueryOpts","getSingleFieldQueryOptsFor","getSingleFieldCoreQueryPlan","inclusiveStart","usingGtlt","previousKeys","previousWasEq","previousWasSame","userOperators","newOpts","getMultiFieldQueryOpts","planQuery","userFieldsRes","selectorFields","sortFields","rightIdx","getUserFields","use_index","coreQueryPlan","find$1","explain","massageSort","cleanedUseIndex","massageUseIndex","validateFindRequest","getIndexesRes","queryPlan","indexToUse","noneIdSorts","sortItem","validateSort","reverseOptions","originalOpts","doAllDocs","signature","indexToSignature","targetValue","docKey","filterInclusiveStart","index_browser_es_pick","warning","createIndexAsCallback","originalIndexDef","getMd5","ascFields","validateIndex","ddocId","hasInvalidLanguage","viewExists","findAsCallback","explainAsCallback","dbname","bookmark","getIndexesAsCallback","deleteIndexAsCallback","index_browser_es_plugin","pouchdb_find_lib_index_browser_es","index_es","database_db","genId","getDb","getRandomValues","crypto","msCrypto","rnds8","rnds","byteToHex","bth","_interopRequireDefault","HandlebarsEnvironment","_utils","_exception2","_helpers","_decorators","_logger2","VERSION","COMPILER_REVISION","REVISION_CHANGES","2","3","4","5","6","7","partials","decorators","registerDefaultHelpers","registerDefaultDecorators","logger","registerHelper","unregisterHelper","registerPartial","partial","unregisterPartial","registerDecorator","unregisterDecorator","_typeof","_slicedToArray","_arr","_n","_d","_e","_s","_i","sliceIterator","_createClass","defineProperties","descriptor","Constructor","protoProps","staticProps","_classCallCheck","instance","SOCKET_STATES","connecting","closing","closed","DEFAULT_TIMEOUT","CHANNEL_STATES","errored","joined","joining","leaving","CHANNEL_EVENTS","reply","leave","CHANNEL_LIFECYCLE_EVENTS","TRANSPORTS","longpoll","websocket","Push","payload","receivedResp","timeoutTimer","recHooks","send","hasReceived","startTimeout","ref","join_ref","joinRef","cancelRefEvent","refEvent","_ref","off","clearTimeout","cancelTimeout","makeRef","replyEventName","matchReceive","trigger","Channel","_this2","bindings","joinedOnce","joinPush","pushBuffer","rejoinTimer","Timer","rejoinUntilConnected","reconnectAfterMs","pushEvent","onClose","isLeaving","isClosed","scheduleTimeout","isJoining","leavePush","isConnected","rejoin","isJoined","canPush","_this3","isLifecycleEvent","resend","sendJoin","_this4","handledPayload","onMessage","Serializer","encode","decode","rawPayload","_JSON$parse","_JSON$parse2","LongPoll","Socket","endPoint","_this5","stateChangeCallbacks","channels","sendBuffer","transport","WebSocket","defaultEncoder","defaultDecoder","heartbeatIntervalMs","tries","longpollerTimeout","heartbeatTimer","pendingHeartbeatRef","reconnectTimer","disconnect","Ajax","appendParams","vsn","conn","onclose","_this6","endPointURL","onopen","onConnOpen","onConnError","onConnMessage","onConnClose","_this7","flushSendBuffer","skipHeartbeat","clearInterval","setInterval","sendHeartbeat","triggerChanError","readyState","connectionState","chanParams","chan","_this8","newRef","rawMessage","_this9","isMember","pollEndpoint","normalizeEndpoint","poll","closeAndRetry","_this10","endpointURL","_this11","accept","XDomainRequest","xdomainRequest","_req","XMLHttpRequest","ActiveXObject","xhrRequest","_this12","onload","parseJSON","responseText","onprogress","_this13","setRequestHeader","states","parentKey","queryStr","paramKey","paramVal","serialize","Presence","syncState","currentState","newState","onJoin","onLeave","_this14","joins","presence","newPresence","currentPresence","newRefs","metas","phx_ref","curRefs","joinedMetas","leftMetas","syncDiff","_ref2","_state$key$metas","_toConsumableArray","leftPresence","refsToRemove","presences","chooser","pres","getOwnPropertyNames","timerCalc","timer","_this15","Handlebars","template","compiler","main","depth0","useData","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","currentQueue","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","title","env","argv","versions","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","ii","_interopRequireWildcard","newObj","base","_handlebarsSafeString2","_handlebarsException2","Utils","runtime","_handlebarsNoConflict2","hb","SafeString","VM","spec","inst","_helpersBlockHelperMissing2","_helpersEach2","_helpersHelperMissing2","_helpersIf2","_helpersLog2","_helpersLookup2","_helpersWith2","inverse","each","execIteration","priorKey","conditional","includeZero","level","_decoratorsInline2","original","methodMap","lookupLevel","levelMap","_len","_key","checkRevision","compilerInfo","compilerRevision","currentRevision","_base","runtimeVersions","compilerVersions","templateSpec","decorator","main_d","strict","lookup","depths","lambda","invokePartial","resolvePartial","compile","compilerOptions","indent","lines","programs","program","declaredBlockParams","programWrapper","wrapProgram","common","nullContext","seal","_setup","initData","useBlockParams","useDepths","executeDecorators","isTop","usePartial","useDecorators","_child","currentPartialBlock","partialBlock","prog","currentDepths","$Handlebars","noConflict","invariant","condition","source_Source","Source","locationOffset","getLocation","lineRegexp","highlightSourceAtLocation","lineOffset","columnOffset","getColumnOffset","contextLine","contextColumn","prevLineNum","lineNum","nextLineNum","padLen","whitespace","lpad","GraphQLError","nodes","positions","originalError","extensions","_nodes","_source","_positions","_locations","locations","syntaxError","description","printedLocations","printError","blockStringValue","rawString","commonIndent","leadingWhitespace","isBlank","createLexer","startOfFileToken","Tok","TokenKind","SOF","lastToken","lineStart","advance","advanceLexer","lookahead","EOF","readToken","COMMENT","freeze","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","INT","FLOAT","STRING","BLOCK_STRING","getTokenDesc","printCharCode","lexer","bodyLength","startPosition","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","readNumber","chunkStart","rawValue","readBlockString","charCode","uniCharCode","readString","unexpectedCharacterMessage","char2hex","inspect","Kind","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","VARIABLE","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","DIRECTIVE_DEFINITION","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","sourceObj","expect","parseDefinition","parseValue","parseValueLiteral","parseType","parseTypeReference","parseName","peek","parseExecutableDefinition","parseTypeSystemDefinition","peekDescription","unexpected","parseOperationDefinition","expectKeyword","parseFragmentName","variableDefinitions","parseVariableDefinitions","typeCondition","parseNamedType","directives","parseDirectives","selectionSet","parseSelectionSet","parseFragmentDefinition","operation","parseOperationType","operationToken","many","parseVariableDefinition","variable","parseVariable","defaultValue","selections","parseSelection","parseFragment","nameOrAlias","alias","parseArguments","isConst","parseConstArgument","parseArgument","parseConstValue","parseValueValue","openKind","parseFn","closeKind","any","parseList","parseObjectField","parseObject","parseStringLiteral","block","parseDirective","keywordToken","operationTypes","parseOperationTypeDefinition","parseSchemaDefinition","parseDescription","parseScalarTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","types","parseUnionMemberTypes","parseUnionTypeDefinition","parseEnumValuesDefinition","parseEnumTypeDefinition","parseInputFieldsDefinition","parseInputObjectTypeDefinition","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","parseTypeExtension","parseArgumentDefs","parseDirectiveLocation","parseDirectiveLocations","parseDirectiveDefinition","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","parseInputValueDef","parseEnumValueDefinition","noLocation","Loc","atToken"],"mappings":"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","file":"js/commons.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\n\nexports.__esModule = true;\nexports.extend = extend;\nexports.indexOf = indexOf;\nexports.escapeExpression = escapeExpression;\nexports.isEmpty = isEmpty;\nexports.createFrame = createFrame;\nexports.blockParams = blockParams;\nexports.appendContextPath = appendContextPath;\nvar escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nvar badChars = /[&<>\"'`=]/g,\n    possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nfunction extend(obj /* , ...source */) {\n  for (var i = 1; i < arguments.length; i++) {\n    for (var key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nvar toString = Object.prototype.toString;\n\nexports.toString = toString;\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  exports.isFunction = isFunction = function (value) {\n    return typeof value === 'function' && toString.call(value) === '[object Function]';\n  };\n}\nexports.isFunction = isFunction;\n\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nvar isArray = Array.isArray || function (value) {\n  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;\n};\n\nexports.isArray = isArray;\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\n\nfunction indexOf(array, value) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nfunction isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction createFrame(object) {\n  var frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nfunction blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nfunction appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFNLE1BQU0sR0FBRztBQUNiLEtBQUcsRUFBRSxPQUFPO0FBQ1osS0FBRyxFQUFFLE1BQU07QUFDWCxLQUFHLEVBQUUsTUFBTTtBQUNYLEtBQUcsRUFBRSxRQUFRO0FBQ2IsS0FBRyxFQUFFLFFBQVE7QUFDYixLQUFHLEVBQUUsUUFBUTtBQUNiLEtBQUcsRUFBRSxRQUFRO0NBQ2QsQ0FBQzs7QUFFRixJQUFNLFFBQVEsR0FBRyxZQUFZO0lBQ3ZCLFFBQVEsR0FBRyxXQUFXLENBQUM7O0FBRTdCLFNBQVMsVUFBVSxDQUFDLEdBQUcsRUFBRTtBQUN2QixTQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUNwQjs7QUFFTSxTQUFTLE1BQU0sQ0FBQyxHQUFHLG9CQUFtQjtBQUMzQyxPQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN6QyxTQUFLLElBQUksR0FBRyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM1QixVQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUU7QUFDM0QsV0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztPQUM5QjtLQUNGO0dBQ0Y7O0FBRUQsU0FBTyxHQUFHLENBQUM7Q0FDWjs7QUFFTSxJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQzs7Ozs7O0FBS2hELElBQUksVUFBVSxHQUFHLG9CQUFTLEtBQUssRUFBRTtBQUMvQixTQUFPLE9BQU8sS0FBSyxLQUFLLFVBQVUsQ0FBQztDQUNwQyxDQUFDOzs7QUFHRixJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUNuQixVQUlNLFVBQVUsR0FKaEIsVUFBVSxHQUFHLFVBQVMsS0FBSyxFQUFFO0FBQzNCLFdBQU8sT0FBTyxLQUFLLEtBQUssVUFBVSxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssbUJBQW1CLENBQUM7R0FDcEYsQ0FBQztDQUNIO1FBQ08sVUFBVSxHQUFWLFVBQVU7Ozs7O0FBSVgsSUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sSUFBSSxVQUFTLEtBQUssRUFBRTtBQUN0RCxTQUFPLEFBQUMsS0FBSyxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsR0FBSSxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLGdCQUFnQixHQUFHLEtBQUssQ0FBQztDQUNqRyxDQUFDOzs7OztBQUdLLFNBQVMsT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUU7QUFDcEMsT0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUNoRCxRQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLEVBQUU7QUFDdEIsYUFBTyxDQUFDLENBQUM7S0FDVjtHQUNGO0FBQ0QsU0FBTyxDQUFDLENBQUMsQ0FBQztDQUNYOztBQUdNLFNBQVMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO0FBQ3ZDLE1BQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFOztBQUU5QixRQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxFQUFFO0FBQzNCLGFBQU8sTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0tBQ3hCLE1BQU0sSUFBSSxNQUFNLElBQUksSUFBSSxFQUFFO0FBQ3pCLGFBQU8sRUFBRSxDQUFDO0tBQ1gsTUFBTSxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ2xCLGFBQU8sTUFBTSxHQUFHLEVBQUUsQ0FBQztLQUNwQjs7Ozs7QUFLRCxVQUFNLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQztHQUN0Qjs7QUFFRCxNQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtBQUFFLFdBQU8sTUFBTSxDQUFDO0dBQUU7QUFDOUMsU0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztDQUM3Qzs7QUFFTSxTQUFTLE9BQU8sQ0FBQyxLQUFLLEVBQUU7QUFDN0IsTUFBSSxDQUFDLEtBQUssSUFBSSxLQUFLLEtBQUssQ0FBQyxFQUFFO0FBQ3pCLFdBQU8sSUFBSSxDQUFDO0dBQ2IsTUFBTSxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtBQUMvQyxXQUFPLElBQUksQ0FBQztHQUNiLE1BQU07QUFDTCxXQUFPLEtBQUssQ0FBQztHQUNkO0NBQ0Y7O0FBRU0sU0FBUyxXQUFXLENBQUMsTUFBTSxFQUFFO0FBQ2xDLE1BQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDL0IsT0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7QUFDdkIsU0FBTyxLQUFLLENBQUM7Q0FDZDs7QUFFTSxTQUFTLFdBQVcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO0FBQ3ZDLFFBQU0sQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO0FBQ2xCLFNBQU8sTUFBTSxDQUFDO0NBQ2Y7O0FBRU0sU0FBUyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsRUFBRSxFQUFFO0FBQ2pELFNBQU8sQ0FBQyxXQUFXLEdBQUcsV0FBVyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUEsR0FBSSxFQUFFLENBQUM7Q0FDcEQiLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlc2NhcGUgPSB7XG4gICcmJzogJyZhbXA7JyxcbiAgJzwnOiAnJmx0OycsXG4gICc+JzogJyZndDsnLFxuICAnXCInOiAnJnF1b3Q7JyxcbiAgXCInXCI6ICcmI3gyNzsnLFxuICAnYCc6ICcmI3g2MDsnLFxuICAnPSc6ICcmI3gzRDsnXG59O1xuXG5jb25zdCBiYWRDaGFycyA9IC9bJjw+XCInYD1dL2csXG4gICAgICBwb3NzaWJsZSA9IC9bJjw+XCInYD1dLztcblxuZnVuY3Rpb24gZXNjYXBlQ2hhcihjaHIpIHtcbiAgcmV0dXJuIGVzY2FwZVtjaHJdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXh0ZW5kKG9iai8qICwgLi4uc291cmNlICovKSB7XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yIChsZXQga2V5IGluIGFyZ3VtZW50c1tpXSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcmd1bWVudHNbaV0sIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSBhcmd1bWVudHNbaV1ba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5leHBvcnQgbGV0IHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLy8gU291cmNlZCBmcm9tIGxvZGFzaFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Jlc3RpZWpzL2xvZGFzaC9ibG9iL21hc3Rlci9MSUNFTlNFLnR4dFxuLyogZXNsaW50LWRpc2FibGUgZnVuYy1zdHlsZSAqL1xubGV0IGlzRnVuY3Rpb24gPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nO1xufTtcbi8vIGZhbGxiYWNrIGZvciBvbGRlciB2ZXJzaW9ucyBvZiBDaHJvbWUgYW5kIFNhZmFyaVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmlmIChpc0Z1bmN0aW9uKC94LykpIHtcbiAgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbiAgfTtcbn1cbmV4cG9ydCB7aXNGdW5jdGlvbn07XG4vKiBlc2xpbnQtZW5hYmxlIGZ1bmMtc3R5bGUgKi9cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmV4cG9ydCBjb25zdCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gKHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpID8gdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IEFycmF5XScgOiBmYWxzZTtcbn07XG5cbi8vIE9sZGVyIElFIHZlcnNpb25zIGRvIG5vdCBkaXJlY3RseSBzdXBwb3J0IGluZGV4T2Ygc28gd2UgbXVzdCBpbXBsZW1lbnQgb3VyIG93biwgc2FkbHkuXG5leHBvcnQgZnVuY3Rpb24gaW5kZXhPZihhcnJheSwgdmFsdWUpIHtcbiAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IGFycmF5Lmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgaWYgKGFycmF5W2ldID09PSB2YWx1ZSkge1xuICAgICAgcmV0dXJuIGk7XG4gICAgfVxuICB9XG4gIHJldHVybiAtMTtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlRXhwcmVzc2lvbihzdHJpbmcpIHtcbiAgaWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgZXNjYXBlIFNhZmVTdHJpbmdzLCBzaW5jZSB0aGV5J3JlIGFscmVhZHkgc2FmZVxuICAgIGlmIChzdHJpbmcgJiYgc3RyaW5nLnRvSFRNTCkge1xuICAgICAgcmV0dXJuIHN0cmluZy50b0hUTUwoKTtcbiAgICB9IGVsc2UgaWYgKHN0cmluZyA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfSBlbHNlIGlmICghc3RyaW5nKSB7XG4gICAgICByZXR1cm4gc3RyaW5nICsgJyc7XG4gICAgfVxuXG4gICAgLy8gRm9yY2UgYSBzdHJpbmcgY29udmVyc2lvbiBhcyB0aGlzIHdpbGwgYmUgZG9uZSBieSB0aGUgYXBwZW5kIHJlZ2FyZGxlc3MgYW5kXG4gICAgLy8gdGhlIHJlZ2V4IHRlc3Qgd2lsbCBkbyB0aGlzIHRyYW5zcGFyZW50bHkgYmVoaW5kIHRoZSBzY2VuZXMsIGNhdXNpbmcgaXNzdWVzIGlmXG4gICAgLy8gYW4gb2JqZWN0J3MgdG8gc3RyaW5nIGhhcyBlc2NhcGVkIGNoYXJhY3RlcnMgaW4gaXQuXG4gICAgc3RyaW5nID0gJycgKyBzdHJpbmc7XG4gIH1cblxuICBpZiAoIXBvc3NpYmxlLnRlc3Qoc3RyaW5nKSkgeyByZXR1cm4gc3RyaW5nOyB9XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZShiYWRDaGFycywgZXNjYXBlQ2hhcik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0VtcHR5KHZhbHVlKSB7XG4gIGlmICghdmFsdWUgJiYgdmFsdWUgIT09IDApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChpc0FycmF5KHZhbHVlKSAmJiB2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUZyYW1lKG9iamVjdCkge1xuICBsZXQgZnJhbWUgPSBleHRlbmQoe30sIG9iamVjdCk7XG4gIGZyYW1lLl9wYXJlbnQgPSBvYmplY3Q7XG4gIHJldHVybiBmcmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJsb2NrUGFyYW1zKHBhcmFtcywgaWRzKSB7XG4gIHBhcmFtcy5wYXRoID0gaWRzO1xuICByZXR1cm4gcGFyYW1zO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kQ29udGV4dFBhdGgoY29udGV4dFBhdGgsIGlkKSB7XG4gIHJldHVybiAoY29udGV4dFBhdGggPyBjb250ZXh0UGF0aCArICcuJyA6ICcnKSArIGlkO1xufVxuIl19\n","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n","import { btoa, readAsArrayBuffer } from 'pouchdb-binary-utils';\nimport Md5 from 'spark-md5';\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return btoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nexport { binaryMd5, stringMd5 };\n","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","'use strict';\n\nexports.__esModule = true;\n\nvar errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n\nfunction Exception(message, node) {\n  var loc = node && node.loc,\n      line = undefined,\n      column = undefined;\n  if (loc) {\n    line = loc.start.line;\n    column = loc.start.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  var tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (var idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexports['default'] = Exception;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2V4Y2VwdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsSUFBTSxVQUFVLEdBQUcsQ0FBQyxhQUFhLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQzs7QUFFbkcsU0FBUyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRTtBQUNoQyxNQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLEdBQUc7TUFDdEIsSUFBSSxZQUFBO01BQ0osTUFBTSxZQUFBLENBQUM7QUFDWCxNQUFJLEdBQUcsRUFBRTtBQUNQLFFBQUksR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztBQUN0QixVQUFNLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7O0FBRTFCLFdBQU8sSUFBSSxLQUFLLEdBQUcsSUFBSSxHQUFHLEdBQUcsR0FBRyxNQUFNLENBQUM7R0FDeEM7O0FBRUQsTUFBSSxHQUFHLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQzs7O0FBRzFELE9BQUssSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFO0FBQ2hELFFBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7R0FDOUM7OztBQUdELE1BQUksS0FBSyxDQUFDLGlCQUFpQixFQUFFO0FBQzNCLFNBQUssQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7R0FDMUM7O0FBRUQsTUFBSTtBQUNGLFFBQUksR0FBRyxFQUFFO0FBQ1AsVUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7Ozs7QUFJdkIsVUFBSSxNQUFNLENBQUMsY0FBYyxFQUFFO0FBQ3pCLGNBQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRTtBQUNwQyxlQUFLLEVBQUUsTUFBTTtBQUNiLG9CQUFVLEVBQUUsSUFBSTtTQUNqQixDQUFDLENBQUM7T0FDSixNQUFNO0FBQ0wsWUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7T0FDdEI7S0FDRjtHQUNGLENBQUMsT0FBTyxHQUFHLEVBQUU7O0dBRWI7Q0FDRjs7QUFFRCxTQUFTLENBQUMsU0FBUyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7O3FCQUVuQixTQUFTIiwiZmlsZSI6ImV4Y2VwdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgZXJyb3JQcm9wcyA9IFsnZGVzY3JpcHRpb24nLCAnZmlsZU5hbWUnLCAnbGluZU51bWJlcicsICdtZXNzYWdlJywgJ25hbWUnLCAnbnVtYmVyJywgJ3N0YWNrJ107XG5cbmZ1bmN0aW9uIEV4Y2VwdGlvbihtZXNzYWdlLCBub2RlKSB7XG4gIGxldCBsb2MgPSBub2RlICYmIG5vZGUubG9jLFxuICAgICAgbGluZSxcbiAgICAgIGNvbHVtbjtcbiAgaWYgKGxvYykge1xuICAgIGxpbmUgPSBsb2Muc3RhcnQubGluZTtcbiAgICBjb2x1bW4gPSBsb2Muc3RhcnQuY29sdW1uO1xuXG4gICAgbWVzc2FnZSArPSAnIC0gJyArIGxpbmUgKyAnOicgKyBjb2x1bW47XG4gIH1cblxuICBsZXQgdG1wID0gRXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgbWVzc2FnZSk7XG5cbiAgLy8gVW5mb3J0dW5hdGVseSBlcnJvcnMgYXJlIG5vdCBlbnVtZXJhYmxlIGluIENocm9tZSAoYXQgbGVhc3QpLCBzbyBgZm9yIHByb3AgaW4gdG1wYCBkb2Vzbid0IHdvcmsuXG4gIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IGVycm9yUHJvcHMubGVuZ3RoOyBpZHgrKykge1xuICAgIHRoaXNbZXJyb3JQcm9wc1tpZHhdXSA9IHRtcFtlcnJvclByb3BzW2lkeF1dO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgRXhjZXB0aW9uKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgaWYgKGxvYykge1xuICAgICAgdGhpcy5saW5lTnVtYmVyID0gbGluZTtcblxuICAgICAgLy8gV29yayBhcm91bmQgaXNzdWUgdW5kZXIgc2FmYXJpIHdoZXJlIHdlIGNhbid0IGRpcmVjdGx5IHNldCB0aGUgY29sdW1uIHZhbHVlXG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ2NvbHVtbicsIHtcbiAgICAgICAgICB2YWx1ZTogY29sdW1uLFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvbHVtbiA9IGNvbHVtbjtcbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKG5vcCkge1xuICAgIC8qIElnbm9yZSBpZiB0aGUgYnJvd3NlciBpcyB2ZXJ5IHBhcnRpY3VsYXIgKi9cbiAgfVxufVxuXG5FeGNlcHRpb24ucHJvdG90eXBlID0gbmV3IEVycm9yKCk7XG5cbmV4cG9ydCBkZWZhdWx0IEV4Y2VwdGlvbjtcbiJdfQ==\n","var thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\nfunction typedBuffer() {\n}\n\nexport { thisAtob as atob, thisBtoa as btoa, b64ToBluffer as base64StringToBlobOrBuffer, binaryStringToArrayBuffer, binStringToBluffer as binaryStringToBlobOrBuffer, createBlob as blob, blobToBase64 as blobOrBufferToBase64, blobToBinaryString as blobOrBufferToBinaryString, readAsArrayBuffer, readAsBinaryString, typedBuffer };\n","import { DocumentNode } from \"graphql\";\nimport { GraphQLError } from \"graphql\";\n\nimport { capitalize } from \"../utils/utils\";\n\nexport const toRunableDocument = <TGraphQLVariables>(\n  document: DocumentNode,\n  variables?: TGraphQLVariables\n) => {\n  return {\n    query: document.loc && document.loc.source.body,\n    variables\n  };\n};\n\nexport const stringifyGraphQlErrors = (\n  path: string,\n  { errors }: { errors: GraphQLError[] }\n) => {\n  const prevVal = [] as string[];\n\n  return errors\n    .reduce((prev, e) => {\n      if (e.path && e.path[0] === path) {\n        return [...prev, e.message];\n      }\n\n      return prev;\n    }, prevVal)\n    .join(\" | \");\n};\n\nexport const htmlfyGraphQlErrors = (\n  path: string,\n  { errors }: { errors: GraphQLError[] }\n) => {\n  const prevVal = [] as string[];\n\n  return errors\n    .reduce((prev, e) => {\n      if (e.path && e.path[0] === path) {\n        const msg = JSON.parse(e.message);\n        const html = Object.keys(msg)\n          .map(\n            (m: string) => `\n          <div>\n            <span class=\"error-key\" >${capitalize(m)}</span>\n            <span class=\"error-value\" >${msg[m]}</span>\n          </div>\n        `\n          )\n          .join(\"\\n\");\n\n        return [...prev, html];\n      }\n\n      return prev;\n    }, prevVal)\n    .join(\"\\n\");\n};\n","export const capitalize = (val: string) => {\n  return val.charAt(0).toUpperCase() + val.slice(1);\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\n\n/* tslint:disable */\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: CreateMeta\n// ====================================================\n\nexport interface CreateMeta_meta {\n  id: string;\n  breakTimeSecs: number;\n  nightSupplPayPct: any;\n  payPerHr: any;\n  sundaySupplPayPct: any;\n}\n\nexport interface CreateMeta {\n  meta: CreateMeta_meta | null;  // Create a meta\n}\n\nexport interface CreateMetaVariables {\n  meta: CreateMetaInput;\n}\n\n\n/* tslint:disable */\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: CreateShift\n// ====================================================\n\nexport interface CreateShift_shift_meta {\n  id: string;\n}\n\nexport interface CreateShift_shift {\n  id: string;\n  _id: string;\n  date: any;\n  startTime: any;\n  endTime: any;\n  hoursGross: number;\n  normalHours: number;\n  normalPay: any;\n  nightHours: number;\n  nightSupplPay: any;\n  sundayHours: number;\n  sundaySupplPay: any;\n  totalPay: any;\n  meta: CreateShift_shift_meta | null;\n  __typename: \"Shift\";\n}\n\nexport interface CreateShift {\n  shift: CreateShift_shift | null;  // Create a shift\n}\n\nexport interface CreateShiftVariables {\n  shift: CreateShiftInput;\n}\n\n\n/* tslint:disable */\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: GetAllShifts\n// ====================================================\n\nexport interface GetAllShifts_shifts_meta {\n  id: string;\n}\n\nexport interface GetAllShifts_shifts {\n  id: string;\n  _id: string;\n  date: any;\n  startTime: any;\n  endTime: any;\n  hoursGross: number;\n  normalHours: number;\n  normalPay: any;\n  nightHours: number;\n  nightSupplPay: any;\n  sundayHours: number;\n  sundaySupplPay: any;\n  totalPay: any;\n  meta: GetAllShifts_shifts_meta | null;\n  __typename: \"Shift\";\n}\n\nexport interface GetAllShifts {\n  shifts: (GetAllShifts_shifts | null)[] | null;  // Get all shifts\n}\n\nexport interface GetAllShiftsVariables {\n  shift?: GetShiftInput | null;\n}\n\n\n/* tslint:disable */\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL fragment: ShiftFragment\n// ====================================================\n\nexport interface ShiftFragment_meta {\n  id: string;\n}\n\nexport interface ShiftFragment {\n  id: string;\n  _id: string;\n  date: any;\n  startTime: any;\n  endTime: any;\n  hoursGross: number;\n  normalHours: number;\n  normalPay: any;\n  nightHours: number;\n  nightSupplPay: any;\n  sundayHours: number;\n  sundaySupplPay: any;\n  totalPay: any;\n  meta: ShiftFragment_meta | null;\n  __typename: \"Shift\";\n}\n\n/* tslint:disable */\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\n// Sorting directive\nexport enum SortingDirective {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n// Inputs for creating a meta\nexport interface CreateMetaInput {\n  breakTimeSecs?: number | null;\n  nightSupplPayPct: any;\n  payPerHr: any;\n  sundaySupplPayPct: any;\n}\n\n// Inputs for creating shift\nexport interface CreateShiftInput {\n  date: any;\n  endTime: any;\n  metaId: string;\n  startTime: any;\n}\n\n// Inputs for getting shift\nexport interface GetShiftInput {\n  orderBy?: Sorting | null;\n  where?: WhereCondition | null;\n}\n\n// input for sorting\nexport interface Sorting {\n  date?: SortingDirective | null;\n  id?: SortingDirective | null;\n}\n\n// Where condition for retrieving a shift\nexport interface WhereCondition {\n  month?: number | null;\n  year?: number | null;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================","import gql from \"graphql-tag\";\n\nimport { shiftFragment } from \"./shift.fragment\";\n\nexport const getAllShifts = gql`\n  query GetAllShifts($shift: GetShiftInput) {\n    shifts(shift: $shift) {\n      ...ShiftFragment\n    }\n  }\n\n  ${shiftFragment}\n`;\n\nexport default getAllShifts;\n","import { Socket } from \"phoenix\";\nimport { Channel } from \"phoenix\";\nimport { toRunableDocument } from \"./graphql/helpers\";\nimport SHIFTS_GQL from \"./graphql/shifts.query\";\nimport { GetAllShiftsVariables } from \"./graphql/gen.types\";\nimport { SortingDirective } from \"./graphql/gen.types\";\nimport { GetAllShifts } from \"./graphql/gen.types\";\nimport { GetAllShifts_shifts } from \"./graphql/gen.types\";\nimport { getDb } from \"./database\";\n\nconst database = getDb();\n\n// tslint:disable-next-line:no-any\ntype OnChannelMessage = (msg: any) => void;\n\nexport interface ChannelMessage {\n  topic: string;\n  // tslint:disable-next-line:no-any\n  params?: any;\n\n  ok: OnChannelMessage;\n  // tslint:disable-next-line:no-any\n  error?: (reason: any) => void;\n}\n\nexport class AppSocket {\n  socket: Socket;\n  dataChannelName = \"data:data\";\n  dataChannel: Channel;\n  dataChannelJoined = false;\n\n  constructor() {\n    this.socket = new Socket(\"/socket\", {});\n    this.socket.connect();\n    this.socket.onOpen(() => {\n      window.appInterface.serverOnlineStatus = true;\n    });\n    this.socket.onError(() => (window.appInterface.serverOnlineStatus = false));\n    this.joinDataChannel();\n    this.getAllShiftsForMonth();\n  }\n\n  joinDataChannel = () => {\n    this.dataChannel = this.socket.channel(this.dataChannelName, {});\n    this.channelJoin(this.dataChannelName, this.dataChannel);\n  };\n\n  getAllShiftsForMonth = () => {\n    const today = new Date();\n    const variables: GetAllShiftsVariables = {\n      shift: {\n        where: {\n          year: today.getFullYear(),\n          month: today.getMonth() + 1\n        },\n\n        orderBy: {\n          date: SortingDirective.DESC\n        }\n      }\n    };\n\n    const shiftQuery = toRunableDocument<GetAllShiftsVariables>(\n      SHIFTS_GQL,\n      variables\n    );\n\n    this.sendChannelMsg(this.dataChannelName, this.dataChannel, {\n      topic: \"all-shifts\",\n\n      ok: ({ shifts }: GetAllShifts) => {\n        const allShifts = (shifts || []) as GetAllShifts_shifts[];\n\n        database.db\n          .find({\n            selector: {\n              typename__: { $eq: \"Shift\" }\n            }\n          })\n          // tslint:disable-next-line:no-any\n          .then((foundShifts: { docs: any }) => {\n            if (\n              foundShifts.docs &&\n              foundShifts.docs.map &&\n              foundShifts.docs.length\n            ) {\n              const ids = foundShifts.docs.map((s: GetAllShifts_shifts) => {\n                return s.id;\n              });\n\n              const filteredAllShifts = allShifts.filter(\n                s => !ids.includes(s.id)\n              );\n\n              if (filteredAllShifts.length) {\n                database.db.bulkDocs(filteredAllShifts);\n              }\n            } else {\n              database.db.bulkDocs(allShifts);\n            }\n          });\n      },\n      params: shiftQuery\n    });\n  };\n\n  channelJoin = (\n    channelName: string,\n    channel: Channel,\n    params?: { ok: OnChannelMessage }\n  ) => {\n    channel\n      .join()\n      .receive(\"ok\", messages => {\n        // tslint:disable-next-line:no-console\n        console.log(\n          `\\n\\n\\n\\nJoining channel: ${channelName} at ${new Date().getTime()}`,\n          messages\n        );\n\n        if (params && params.ok) {\n          params.ok(messages);\n        }\n      })\n      .receive(\"error\", ({ reason }) => {\n        // tslint:disable-next-line:no-console\n        console.log(\"failed join\", reason);\n      })\n      .receive(\"timeout\", () => {\n        window.appInterface.serverOnlineStatus = false;\n      });\n  };\n\n  sendChannelMsg = (\n    channelName: string,\n    channel: Channel,\n    { topic, ok, error, params }: ChannelMessage\n  ) => {\n    channel\n      .push(topic, params || {})\n      .receive(\"ok\", ok)\n      .receive(\"error\", reasons => {\n        if (error) {\n          error(reasons);\n        } else {\n          // tslint:disable-next-line:no-console\n          console.log(`Error on push to ${channelName}:${topic}`, reasons);\n        }\n      })\n      .receive(\"timeout\", () => {\n        // tslint:disable-next-line:no-console\n        console.log(\"Networking issue...\");\n      });\n  };\n}\nexport default AppSocket;\n","import showRefreshUI from \"./show-refresh-ui\";\n\nconst updateReady = (worker: ServiceWorker | null) => {\n  if (!worker) {\n    return;\n  }\n\n  showRefreshUI(worker);\n};\n\nexport const registerServiceWorker = async () => {\n  // || process.env.NODE_ENV !== \"development\"\n  if (!navigator.serviceWorker) {\n    return;\n  }\n\n  navigator.serviceWorker\n    .register(\"/offline/service-worker1.js\", {\n      scope: \"/\"\n    })\n    .then(reg => {\n      // Page is not been controlled by service worker = user is getting\n      // contents from network, which is a good thing\n      if (!navigator.serviceWorker.controller) {\n        return;\n      }\n\n      // Service worker has been registered and is now waiting - tell user\n      if (reg.waiting) {\n        return updateReady(reg.waiting);\n      }\n\n      // Service worker is still installing, so we track it's progress and\n      // when the installation succeeds, it means we have a service worker ready\n      // to take over so we tell user\n      if (reg.installing) {\n        const worker = reg.installing;\n        worker.addEventListener(\"statechange\", () => {\n          if (worker.state === \"installed\") {\n            return updateReady(worker);\n          }\n        });\n      }\n\n      // okay page is been controlled by service worker\n      // no service worker is waiting\n      // no service worker is installing\n      // this means a service worker will soon arrive. So we track it's motion\n      reg.addEventListener(\"updatefound\", () => {\n        const worker1 = reg.installing;\n        if (!worker1) {\n          return;\n        }\n        worker1.addEventListener(\"statechange\", () => {\n          if (worker1.state === \"installed\") {\n            return updateReady(worker1);\n          }\n        });\n      });\n    });\n\n  navigator.serviceWorker.addEventListener(\"controllerchange\", () =>\n    // window.location.reload()\n\n    // tslint:disable-next-line:no-console\n    console.log(\"\\n\\n\\n\\ncontroller changed. Page is now refreshed\", \"\\n\\n\\n\")\n  );\n};\n\nexport default registerServiceWorker;\n","import * as template from \"./show-refresh-ui.handlebars\";\n\nexport default (worker: ServiceWorker) => {\n  const ui = document.getElementById(\"insert-new-app-available-ui\");\n\n  if (ui) {\n    ui.innerHTML = template();\n  }\n\n  const container = document.getElementById(\"new-app-available-container\");\n\n  if (container) {\n    container.addEventListener(\n      \"click\",\n      () => {\n        worker.postMessage({ action: \"skipWaiting\" });\n        window.location.reload(true);\n      },\n      {\n        once: true\n      }\n    );\n  }\n};\n","import { AppSocket } from \"./socket\";\nimport AppInterface from \"./app_interface\";\nimport registerServiceWorker1 from \"./service-worker/register-service-worker1\";\n\ndeclare global {\n  interface Window {\n    appInterface: AppInterface;\n  }\n}\n\nconst socket = new AppSocket();\n\nexport const getSocket = () => socket;\n\nexport const docReady = (fn: () => void) =>\n  document.addEventListener(\"DOMContentLoaded\", fn);\n\nconst processSidebar = () => {\n  const sidebarAction = (sidebar: HTMLElement) => {\n    const containerEl = document.getElementById(\"app-container\");\n    const sidebarTriggerEl = document.getElementById(\"sidebar-trigger\");\n\n    if (containerEl && sidebarTriggerEl) {\n      containerEl.addEventListener(\"click\", evt => {\n        evt.stopPropagation();\n        sidebar.classList.remove(\"visible\");\n      });\n\n      sidebarTriggerEl.addEventListener(\"click\", evt => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        sidebar.classList[\n          sidebar.classList.contains(\"visible\") ? \"remove\" : \"add\"\n        ](\"visible\");\n      });\n    }\n  };\n\n  const sidebarEl = document.getElementById(\"app-sidebar\");\n\n  if (sidebarEl) {\n    sidebarAction(sidebarEl);\n  }\n};\n\ndocReady(processSidebar);\nregisterServiceWorker1();\n","import getArguments from 'argsarray';\nimport nextTick from 'immediate';\nimport { EventEmitter } from 'events';\nimport inherits from 'inherits';\nimport Md5 from 'spark-md5';\nimport uuidV4 from 'uuid';\nimport vuvuzela from 'vuvuzela';\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nvar hasLocal;\n\ntry {\n  localStorage.setItem('_pouch_check_localstorage', 1);\n  hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n} catch (e) {\n  hasLocal = false;\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\ninherits(Changes, EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (hasLocalStorage()) {\n    addEventListener(\"storage\", function (e) {\n      self.emit(e.key);\n    });\n  }\n}\n\nfunction Changes() {\n  EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary', 'return_docs'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        nextTick(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new Promise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction rev$$1(doc, deterministic_revs) {\n  var clonedDoc = clone(doc);\n  if (!deterministic_revs) {\n    return uuidV4.v4().replace(/-/g, '').toLowerCase();\n  }\n\n  delete clonedDoc._rev_tree;\n  return stringMd5(JSON.stringify(clonedDoc));\n}\n\nvar uuid = uuidV4.v4;\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$1, EventEmitter);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$1(db, opts, callback) {\n  EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$1.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$1.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$1.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev});\n    }\n    return rev;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys =  ('limit' in opts) ?\n    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      nextTick(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, EventEmitter);\n\nfunction AbstractPouchDB() {\n  EventEmitter.call(this);\n\n  // re-bind prototyped methods\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev$$1();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev) {\n      addToMissing(id, rev);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev) {\n      if (height[rev] > maxHeight) {\n        candidates.push(rev);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n        revs.push(rev);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev) {\n            return rev.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev) {\n          pos--;\n          return {\n            rev: pos + '-' + rev.id,\n            status: rev.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({limit: 0}, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n  opts.return_docs = ('return_docs' in opts) ? opts.return_docs : !opts.live;\n\n  return new Changes$1(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\n// AbortController was introduced quite a while after fetch and\n// isnt required for PouchDB to function so polyfill if needed\nvar a = (typeof AbortController !== 'undefined')\n    ? AbortController\n    : function () { return {abort: function () {}}; };\n\nvar f$1 = fetch;\nvar h = Headers;\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EventEmitter.prototype).forEach(function (key) {\n    if (typeof EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\nPouchDB.fetch = function (url, opts) {\n  return f$1(url, opts);\n};\n\n// managed automatically by set-version.js\nvar version = \"7.0.0\";\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        /* eslint-disable no-control-regex */\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n        /* eslint-enable no-control-regex */\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        /* eslint-disable no-control-regex */\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        /* eslint-enable no-control-regex */\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(applyChangesFilterPlugin);\n\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev) {\n  if (!/^\\d+-./.test(rev)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev.indexOf('-');\n  var left = rev.substring(0, idx);\n  var right = rev.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits, dbOpts) {\n  if (!dbOpts) {\n    dbOpts = {\n      deterministic_revs: true\n    };\n  }\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev$$1(doc, dbOpts.deterministic_revs);\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev) && !newEdits) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return Promise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return Promise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new Promise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits, dbOpts);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  if (batchSize === -1) {\n    batchSize = 1000;\n  }\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = new Array(keys.length);\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {key: key, error: 'not_found'};\n      }\n      count++;\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false; \n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange ; \n  var keyRangeError;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n    if (keyRangeError && \n      !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR,\n        keyRangeError.name, keyRangeError.message));\n    }\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  /* istanbul ignore if */\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) { \n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      } \n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  }\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result) || {};\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n    \n    /* istanbul ignore if */\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n    callback(null, returnVal);\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new Promise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    req.onerror = txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      nextTick(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return Promise.reject(filtered);\n      }\n\n      if (!filtered) {\n        return Promise.resolve();\n      }\n      numResults++;\n      if (opts.return_docs) {\n        results.push(change);\n      }\n      // process the attachment immediately\n      // for the benefit of live listeners\n      if (opts.attachments && opts.include_docs) {\n        return new Promise(function (resolve) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              resolve(change);\n            });\n          });\n        });\n      } else {\n        return Promise.resolve(change);\n      }\n    }\n\n    function onBatchDone() {\n      var promises = [];\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        promises.push(processMetadataAndWinningDoc(metadata, winningDoc));\n      }\n\n      Promise.all(promises).then(function (changes) {\n        for (var i = 0, len = changes.length; i < len; i++) {\n          if (changes[i]) {\n            opts.onChange(changes[i]);\n          }\n        }\n      }).catch(opts.complete);\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev;\n      if (!opts.rev) {\n        rev = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev = pos + '-' + revHash;\n        if (revs.indexOf(rev) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return nextTick(function () {\n      callback(null, api);\n    });\n  }\n\n  var req = indexedDB.open(dbName, ADAPTER_VERSION);\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n    txn.onabort = idbError(callback);\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Following #7085 buggy idb versions (typically Safari < 10.1) are\n  // considered valid.\n\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return typeof indexedDB !== 'undefined' && typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new Promise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return Promise.resolve();\n  }\n\n  return Promise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new Promise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n  var protocol = parseUri(opts.prefix).protocol;\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    // Ensure prefix has a trailing slash\n    var prefix = opts.prefix.replace(/\\/?$/, '/');\n    name = prefix + encodeURIComponent(dbName);\n  }\n\n  var uri = parseUri(name);\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\nfunction shouldCacheBust(opts) {\n  var ua = (typeof navigator !== 'undefined' && navigator.userAgent) ?\n      navigator.userAgent.toLowerCase() : '';\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n  var isGET = !('method' in opts) || opts.method === 'GET';\n  return (isIE || isTrident || isEdge) && isGET;\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n\n  var ourFetch = function (url, options) {\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    if (opts.auth || host.auth) {\n      var nAuth = opts.auth || host.auth;\n      var str = nAuth.username + ':' + nAuth.password;\n      var token = thisBtoa(unescape(encodeURIComponent(str)));\n      options.headers.set('Authorization', 'Basic ' + token);\n    }\n\n    var headers = opts.headers || {};\n    Object.keys(headers).forEach(function (key) {\n      options.headers.append(key, headers[key]);\n    });\n\n    /* istanbul ignore if */\n    if (shouldCacheBust(options)) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + '_nonce=' + Date.now();\n    }\n\n    var fetchFun = opts.fetch || f$1;\n    return fetchFun(url, options);\n  };\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    })).bind(api);\n  }\n\n  function fetchJSON(url, options, callback) {\n\n    var result = {};\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    if (!options.headers.get('Content-Type')) {\n      options.headers.set('Content-Type', 'application/json');\n    }\n    if (!options.headers.get('Accept')) {\n      options.headers.set('Accept', 'application/json');\n    }\n\n    return ourFetch(url, options).then(function (response) {\n      result.ok = response.ok;\n      result.status = response.status;\n      return response.json();\n    }).then(function (json) {\n      result.data = json;\n      if (!result.ok) {\n        result.data.status = result.status;\n        var err = generateErrorFromResponse(result.data);\n        if (callback) {\n          return callback(err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (Array.isArray(result.data)) {\n        result.data = result.data.map(function (v) {\n          if (v.error || v.missing) {\n            return generateErrorFromResponse(v);\n          } else {\n            return v;\n          }\n        });\n      }\n\n      if (callback) {\n        callback(null, result.data);\n      } else {\n        return result;\n      }\n    });\n  }\n\n  var setupPromise;\n\n  function setup() {\n    if (opts.skip_setup) {\n      return Promise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    setupPromise = fetchJSON(dbUrl).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return fetchJSON(dbUrl, {method: 'PUT'});\n      } else {\n        return Promise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return Promise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  nextTick(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ourFetch(genUrl(host, '')).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      var uuid$$1 = (result && result.uuid) ?\n          (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    }).catch(function (err) {\n      callback(err);\n    });\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    fetchJSON(genDBUrl(host, '_compact'), {method: 'POST'}).then(function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      fetchJSON(genDBUrl(host, '_bulk_get' + paramsToStr(params)), {\n        method: 'POST',\n        body: JSON.stringify({ docs: opts.docs})\n      }).then(function (result) {\n        if (opts.attachments && opts.binary) {\n          result.data.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n        cb(null, result.data);\n      }).catch(cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      return ourFetch(genDBUrl(host, ''));\n    }).then(function (response) {\n      return response.json();\n    }).then(function (info) {\n      info.host = genDBUrl(host, '');\n      callback(null, info);\n    }).catch(callback);\n  };\n\n  api.fetch = function (path, options) {\n    return setup().then(function () {\n      return ourFetch(genDBUrl(host, path), options);\n    });\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n\n    id = encodeDocId(id);\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetchData(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n            '?rev=' + doc._rev;\n        return ourFetch(genDBUrl(host, path)).then(function (response) {\n          if (typeof process !== 'undefined' && !process.browser) {\n            return response.buffer();\n          } else {\n            /* istanbul ignore next */\n            return response.blob();\n          }\n        }).then(function (blob) {\n          if (opts.binary) {\n            // TODO: Can we remove this?\n            if (typeof process !== 'undefined' && !process.browser) {\n              blob.type = att.content_type;\n            }\n            return blob;\n          }\n          return new Promise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetchData(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return Promise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    var url = genDBUrl(host, id + paramsToStr(params));\n    fetchJSON(url).then(function (res) {\n      return Promise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res.data);\n        }\n      }).then(function () {\n        callback(null, res.data);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove', function (docOrId, optsOrRev, opts, cb) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        cb = optsOrRev;\n        opts = {};\n      } else {\n        cb = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev = (doc._rev || opts.rev);\n    var url = genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev;\n\n    fetchJSON(url, {method: 'DELETE'}, cb).catch(cb);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment = adapterFun$$1('getAttachment', function (docId, attachmentId,\n                                                            opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n        encodeAttachmentId(attachmentId) + params;\n    var contentType;\n    ourFetch(url, {method: 'GET'}).then(function (response) {\n      contentType = response.headers.get('content-type');\n      if (!response.ok) {\n        throw response;\n      } else {\n        if (typeof process !== 'undefined' && !process.browser) {\n          return response.buffer();\n        } else {\n          /* istanbul ignore next */\n          return response.blob();\n        }\n      }\n    }).then(function (blob) {\n      // TODO: also remove\n      if (typeof process !== 'undefined' && !process.browser) {\n        blob.type = contentType;\n      }\n      callback(null, blob);\n    }).catch(function (err) {\n      callback(err);\n    });\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =  adapterFun$$1('removeAttachment', function (docId,\n                                                                   attachmentId,\n                                                                   rev,\n                                                                   callback) {\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n                       encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n    fetchJSON(url, {method: 'DELETE'}, callback).catch(callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment = adapterFun$$1('putAttachment', function (docId, attachmentId,\n                                                            rev, blob,\n                                                            type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev;\n      rev = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev) {\n      url += '?rev=' + rev;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    // Add the attachment\n    fetchJSON(url, {\n      headers: new h({'Content-Type': type}),\n      method: 'PUT',\n      body: blob\n    }, callback).catch(callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return Promise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      return fetchJSON(genDBUrl(host, '_bulk_docs'), {\n        method: 'POST',\n        body: JSON.stringify(req)\n      }, callback);\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      return fetchJSON(genDBUrl(host, encodeDocId(doc._id)), {\n        method: 'PUT',\n        body: JSON.stringify(doc)\n      });\n    }).then(function (result) {\n      callback(null, result.data);\n    }).catch(function (err) {\n      err.docId = doc && doc._id;\n      callback(err);\n    });\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    fetchJSON(genDBUrl(host, '_all_docs' + paramStr), {\n       method: method,\n      body: JSON.stringify(body)\n    }).then(function (result) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        result.data.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, result.data);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout : 30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    /* istanbul ignore if */\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n    \n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var controller = new a();\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetchData = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Cloudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var url = genDBUrl(host, '_changes' + paramsToStr(params));\n      var fetchOpts = {\n        signal: controller.signal,\n        method: method,\n        body: JSON.stringify(body)\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        return fetchJSON(url, fetchOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null;\n        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n        /* istanbul ignore if */\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        }\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (opts.return_docs) {\n              results.results.push(c);\n            }\n            opts.onChange(c, pending, lastSeq);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        nextTick(function () { fetchData(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetchData(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        controller.abort();\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    fetchJSON(genDBUrl(host, '_revs_diff'), {\n      method: 'POST',\n      body: JSON.stringify(req)\n    }, callback).catch(callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    fetchJSON(genDBUrl(host, ''), {method: 'DELETE'}).then(function (json) {\n      callback(null, json);\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status === 404) {\n        callback(null, {ok: true});\n      } else {\n        callback(err);\n      }\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$1() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n    var ok, status;\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.fetch('_design/' + parts[0] + '/_view/' + parts[1] + params, {\n        headers: new h({'Content-Type': 'application/json'}),\n        method: method,\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n        return response.json();\n      }).then(function (result) {\n        if (!ok) {\n          result.status = status;\n          throw generateErrorFromResponse(result);\n        }\n        // fail the entire request if the result contains an error\n        result.rows.forEach(function (row) {\n          /* istanbul ignore if */\n          if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n            throw new Error(row.reason);\n          }\n        });\n        return result;\n      }).then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n\n    return db.fetch('_temp_view' + params, {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n      return response.json();\n    }).then(function (result) {\n      if (!ok) {\n        result.status = status;\n        throw generateErrorFromResponse(result);\n      }\n      return result;\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return Promise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$1();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$1();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        return_docs: true,\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.fetch('_view_cleanup', {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              nextTick(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev) {\n  return /^1-/.test(rev);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return Promise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return Promise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return Promise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return Promise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return Promise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.opts.writeSourceCheckpoint = false;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return LOWEST_SEQ;\n    });\n  }\n\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  /* istanbul ignore if */\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return Promise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new Promise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date().toISOString(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return Promise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n          var errorName = (error.name || '').toLowerCase();\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n      /* istanbul ignore if */\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date().toISOString();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n      var errorName = (fatalError.name || '').toLowerCase();\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n    /* istanbul ignore if */\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    nextTick(function () {\n      processPendingBatch(batches.length === 0 && changesOpts.live);\n    });\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.results[changes.results.length - 1].seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, EventEmitter);\nfunction Replication() {\n  EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new Promise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, EventEmitter);\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = Promise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n      return this.replicateMethods;\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\nexport default PouchDB;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","import gql from \"graphql-tag\";\n\nexport const shiftFragment = gql`\n  fragment ShiftFragment on Shift {\n    id\n    _id\n    date\n    startTime\n    endTime\n    hoursGross\n    normalHours\n    normalPay\n    nightHours\n    nightSupplPay\n    sundayHours\n    sundaySupplPay\n    totalPay\n    meta {\n      id\n    }\n    typename__\n  }\n`;\n\nexport default shiftFragment;\n","function mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\nexport { ExportedSet as Set, ExportedMap as Map };\n","import inherits from 'inherits';\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nexport { UNAUTHORIZED, MISSING_BULK_DOCS, MISSING_DOC, REV_CONFLICT, INVALID_ID, MISSING_ID, RESERVED_ID, NOT_OPEN, UNKNOWN_ERROR, BAD_ARG, INVALID_REQUEST, QUERY_PARSE_ERROR, DOC_VALIDATION, BAD_REQUEST, NOT_AN_OBJECT, DB_MISSING, WSQ_ERROR, LDB_ERROR, FORBIDDEN, INVALID_REV, FILE_EXISTS, MISSING_STUB, IDB_ERROR, INVALID_URL, createError, generateErrorFromResponse };\n","import getArguments from 'argsarray';\nimport { Map } from 'pouchdb-collections';\nimport immediate from 'immediate';\nimport { EventEmitter } from 'events';\nimport inherits from 'inherits';\nimport { createError, BAD_REQUEST, INVALID_ID, MISSING_ID, RESERVED_ID } from 'pouchdb-errors';\nimport uuidV4 from 'uuid';\nimport { stringMd5 } from 'pouchdb-md5';\nimport { clone } from 'pouchdb-utils';\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone$1(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone$1(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone$1(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone$1(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new Map();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nvar hasLocal;\n\ntry {\n  localStorage.setItem('_pouch_check_localstorage', 1);\n  hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n} catch (e) {\n  hasLocal = false;\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\ninherits(Changes, EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (hasLocalStorage()) {\n    addEventListener(\"storage\", function (e) {\n      self.emit(e.key);\n    });\n  }\n}\n\nfunction Changes() {\n  EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary', 'return_docs'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        immediate(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar assign$1 = assign;\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n// for browsers that don't support it like IE\n\n/* istanbul ignore next */\nfunction f() {}\n\nvar hasName = f.name;\nvar res;\n\n// We dont run coverage in IE\n/* istanbul ignore else */\nif (hasName) {\n  res = function (fun) {\n    return fun.name;\n  };\n} else {\n  res = function (fun) {\n    var match = fun.toString().match(/^\\s*function\\s*(?:(\\S+)\\s*)?\\(/);\n    if (match && match[1]) {\n      return match[1];\n    }\n    else {\n      return '';\n    }\n  };\n}\n\nvar res$1 = res;\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new Promise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nfunction rev(doc, deterministic_revs) {\n  var clonedDoc = clone(doc);\n  if (!deterministic_revs) {\n    return uuidV4.v4().replace(/-/g, '').toLowerCase();\n  }\n\n  delete clonedDoc._rev_tree;\n  return stringMd5(JSON.stringify(clonedDoc));\n}\n\nvar uuid = uuidV4.v4;\n\nexport { adapterFun, assign$1 as assign, bulkGet as bulkGetShim, Changes as changesHandler, clone$1 as clone, defaultBackOff, explainError, filterChange, flatten, res$1 as functionName, guardedConsole, hasLocalStorage, invalidIdError, isRemote, listenerCount, immediate as nextTick, normalizeDesignDocFunctionName as normalizeDdocFunctionName, once, parseDesignDocFunctionName as parseDdocFunctionName, parseUri, pick, rev, scopeEval, toPromise, upsert, uuid };\n","// AbortController was introduced quite a while after fetch and\n// isnt required for PouchDB to function so polyfill if needed\nvar a = (typeof AbortController !== 'undefined')\n    ? AbortController\n    : function () { return {abort: function () {}}; };\n\nvar f = fetch;\nvar h = Headers;\n\nexport { f as fetch, h as Headers, a as AbortController };\n","function pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        /* eslint-disable no-control-regex */\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n        /* eslint-enable no-control-regex */\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        /* eslint-disable no-control-regex */\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        /* eslint-enable no-control-regex */\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\nexport { collate, normalizeKey, toIndexableString, parseIndexableString };\n","import { clone } from 'pouchdb-utils';\nimport { collate } from 'pouchdb-collate';\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction setFieldInDoc(doc, parsedField, value) {\n  for (var i = 0, len = parsedField.length; i < len-1; i++) {\n    var elem = parsedField[i];\n    doc = doc[elem] = {};\n  }\n  doc[parsedField[len-1]] = value;\n}\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nexport { massageSelector, matchesSelector, filterInMemoryFields, createFieldSorter, rowFilter, isCombinationalField, getKey, getValue, getFieldFromDoc, setFieldInDoc, compare, parseField };\n","import inherits from 'inherits';\nimport { Set } from 'pouchdb-collections';\nimport argsarray from 'argsarray';\nimport { nextTick } from 'pouchdb-utils';\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return argsarray(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new Set(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nexport { uniq, sequentialize, fin, callbackify, promisedCallback, mapToKeysArray, QueryParseError, NotFoundError, BuiltInError };\n","import { upsert, flatten, guardedConsole, nextTick, isRemote } from 'pouchdb-utils';\nimport { stringMd5 } from 'pouchdb-md5';\nimport { Set, Map } from 'pouchdb-collections';\nimport { base64StringToBlobOrBuffer } from 'pouchdb-binary-utils';\nimport { collate, toIndexableString, normalizeKey, parseIndexableString } from 'pouchdb-collate';\nimport { generateErrorFromResponse } from 'pouchdb-errors';\nimport { Headers } from 'pouchdb-fetch';\nimport { callbackify, sequentialize, uniq, fin, promisedCallback, mapToKeysArray, QueryParseError, NotFoundError, BuiltInError } from 'pouchdb-mapreduce-utils';\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue();\nvar CHANGES_BATCH_SIZE = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = base64StringToBlobOrBuffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n    var ok, status;\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.fetch('_design/' + parts[0] + '/_view/' + parts[1] + params, {\n        headers: new Headers({'Content-Type': 'application/json'}),\n        method: method,\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n        return response.json();\n      }).then(function (result) {\n        if (!ok) {\n          result.status = status;\n          throw generateErrorFromResponse(result);\n        }\n        // fail the entire request if the result contains an error\n        result.rows.forEach(function (row) {\n          /* istanbul ignore if */\n          if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n            throw new Error(row.reason);\n          }\n        });\n        return result;\n      }).then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n\n    return db.fetch('_temp_view' + params, {\n      headers: new Headers({'Content-Type': 'application/json'}),\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n      return response.json();\n    }).then(function (result) {\n      if (!ok) {\n        result.status = status;\n        throw generateErrorFromResponse(result);\n      }\n      return result;\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new Set();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return Promise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        return_docs: true,\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new Map();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new Map();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new Map();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.fetch('_view_cleanup', {\n      headers: new Headers({'Content-Type': 'application/json'}),\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new Map();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new Set();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              nextTick(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nexport default createAbstractMapReduce;\n","import { clone, assign, nextTick, upsert, toPromise, isRemote } from 'pouchdb-utils';\nimport { generateErrorFromResponse } from 'pouchdb-errors';\nimport { Headers } from 'pouchdb-fetch';\nimport { getFieldFromDoc, setFieldInDoc, parseField, getKey, getValue, compare, massageSelector, filterInMemoryFields } from 'pouchdb-selector-core';\nimport abstractMapReduce from 'pouchdb-abstract-mapreduce';\nimport { collate } from 'pouchdb-collate';\nimport { stringMd5 } from 'pouchdb-md5';\n\n// we restucture the supplied JSON considerably, because the official\n// Mango API is very particular about a lot of this stuff, but we like\n// to be liberal with what we accept in order to prevent mental\n// breakdowns in our users\nfunction massageCreateIndexRequest(requestDef) {\n  requestDef = clone(requestDef);\n\n  if (!requestDef.index) {\n    requestDef.index = {};\n  }\n\n  ['type', 'name', 'ddoc'].forEach(function (key) {\n    if (requestDef.index[key]) {\n      requestDef[key] = requestDef.index[key];\n      delete requestDef.index[key];\n    }\n  });\n\n  if (requestDef.fields) {\n    requestDef.index.fields = requestDef.fields;\n    delete requestDef.fields;\n  }\n\n  if (!requestDef.type) {\n    requestDef.type = 'json';\n  }\n  return requestDef;\n}\n\nfunction dbFetch(db, path, opts, callback) {\n  var status, ok;\n  opts.headers = new Headers({'Content-type': 'application/json'});\n  db.fetch(path, opts).then(function (response) {\n    status = response.status;\n    ok = response.ok;\n    return response.json();\n  }).then(function (json) {\n    if (!ok) {\n      json.status = status;\n      var err = generateErrorFromResponse(json);\n      callback(err);\n    } else {\n      callback(null, json);\n    }\n  }).catch(callback);\n}\n\nfunction createIndex(db, requestDef, callback) {\n  requestDef = massageCreateIndexRequest(requestDef);\n  dbFetch(db, '_index', {\n    method: 'POST',\n    body: JSON.stringify(requestDef)\n  }, callback);\n}\n\nfunction find(db, requestDef, callback) {\n  dbFetch(db, '_find', {\n    method: 'POST',\n    body: JSON.stringify(requestDef)\n  }, callback);\n}\n\nfunction explain(db, requestDef, callback) {\n  dbFetch(db, '_explain', {\n    method: 'POST',\n    body: JSON.stringify(requestDef)\n  }, callback);\n}\n\nfunction getIndexes(db, callback) {\n  dbFetch(db, '_index', {\n    method: 'GET'\n  }, callback);\n}\n\nfunction deleteIndex(db, indexDef, callback) {\n\n\n  var ddoc = indexDef.ddoc;\n  var type = indexDef.type || 'json';\n  var name = indexDef.name;\n\n  if (!ddoc) {\n    return callback(new Error('you must provide an index\\'s ddoc'));\n  }\n\n  if (!name) {\n    return callback(new Error('you must provide an index\\'s name'));\n  }\n\n  var url = '_index/' + [ddoc, type, name].map(encodeURIComponent).join('/');\n\n  dbFetch(db, url, {method: 'DELETE'}, callback);\n}\n\nfunction getArguments(fun) {\n  return function () {\n    var len = arguments.length;\n    var args = new Array(len);\n    var i = -1;\n    while (++i < len) {\n      args[i] = arguments[i];\n    }\n    return fun.call(this, args);\n  };\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    promisedCallback(promise, cb);\n    return promise;\n  });\n}\n\nfunction promisedCallback(promise, callback) {\n  promise.then(function (res) {\n    nextTick(function () {\n      callback(null, res);\n    });\n  }, function (reason) {\n    nextTick(function () {\n      callback(reason);\n    });\n  });\n  return promise;\n}\n\nvar flatten = getArguments(function (args) {\n  var res = [];\n  for (var i = 0, len = args.length; i < len; i++) {\n    var subArr = args[i];\n    if (Array.isArray(subArr)) {\n      res = res.concat(flatten.apply(null, subArr));\n    } else {\n      res.push(subArr);\n    }\n  }\n  return res;\n});\n\nfunction mergeObjects(arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res = assign(res, arr[i]);\n  }\n  return res;\n}\n\n// Selects a list of fields defined in dot notation from one doc\n// and copies them to a new doc. Like underscore _.pick but supports nesting.\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var parsedField = parseField(arr[i]);\n    var value = getFieldFromDoc(obj, parsedField);\n    if (typeof value !== 'undefined') {\n      setFieldInDoc(res, parsedField, value);\n    }\n  }\n  return res;\n}\n\n// e.g. ['a'], ['a', 'b'] is true, but ['b'], ['a', 'b'] is false\nfunction oneArrayIsSubArrayOfOther(left, right) {\n\n  for (var i = 0, len = Math.min(left.length, right.length); i < len; i++) {\n    if (left[i] !== right[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// e.g.['a', 'b', 'c'], ['a', 'b'] is false\nfunction oneArrayIsStrictSubArrayOfOther(left, right) {\n\n  if (left.length > right.length) {\n    return false;\n  }\n\n  return oneArrayIsSubArrayOfOther(left, right);\n}\n\n// same as above, but treat the left array as an unordered set\n// e.g. ['b', 'a'], ['a', 'b', 'c'] is true, but ['c'], ['a', 'b', 'c'] is false\nfunction oneSetIsSubArrayOfOther(left, right) {\n  left = left.slice();\n  for (var i = 0, len = right.length; i < len; i++) {\n    var field = right[i];\n    if (!left.length) {\n      break;\n    }\n    var leftIdx = left.indexOf(field);\n    if (leftIdx === -1) {\n      return false;\n    } else {\n      left.splice(leftIdx, 1);\n    }\n  }\n  return true;\n}\n\nfunction arrayToObject(arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res[arr[i]] = true;\n  }\n  return res;\n}\n\nfunction max(arr, fun) {\n  var max = null;\n  var maxScore = -1;\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var element = arr[i];\n    var score = fun(element);\n    if (score > maxScore) {\n      maxScore = score;\n      max = element;\n    }\n  }\n  return max;\n}\n\nfunction arrayEquals(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (var i = 0, len = arr1.length; i < len; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction uniq(arr) {\n  var obj = {};\n  for (var i = 0; i < arr.length; i++) {\n    obj['$' + arr[i]] = true;\n  }\n  return Object.keys(obj).map(function (key) {\n    return key.substring(1);\n  });\n}\n\n//\n// One thing about these mappers:\n//\n// Per the advice of John-David Dalton (http://youtu.be/NthmeLEhDDM),\n// what you want to do in this case is optimize for the smallest possible\n// function, since that's the thing that gets run over and over again.\n//\n// This code would be a lot simpler if all the if/elses were inside\n// the function, but it would also be a lot less performant.\n//\n\n\nfunction createDeepMultiMapper(fields, emit) {\n  return function (doc) {\n    var toEmit = [];\n    for (var i = 0, iLen = fields.length; i < iLen; i++) {\n      var parsedField = parseField(fields[i]);\n      var value = doc;\n      for (var j = 0, jLen = parsedField.length; j < jLen; j++) {\n        var key = parsedField[j];\n        value = value[key];\n        if (typeof value === 'undefined') {\n          return; // don't emit\n        }\n      }\n      toEmit.push(value);\n    }\n    emit(toEmit);\n  };\n}\n\nfunction createDeepSingleMapper(field, emit) {\n  var parsedField = parseField(field);\n  return function (doc) {\n    var value = doc;\n    for (var i = 0, len = parsedField.length; i < len; i++) {\n      var key = parsedField[i];\n      value = value[key];\n      if (typeof value === 'undefined') {\n        return; // do nothing\n      }\n    }\n    emit(value);\n  };\n}\n\nfunction createShallowSingleMapper(field, emit) {\n  return function (doc) {\n    emit(doc[field]);\n  };\n}\n\nfunction createShallowMultiMapper(fields, emit) {\n  return function (doc) {\n    var toEmit = [];\n    for (var i = 0, len = fields.length; i < len; i++) {\n      toEmit.push(doc[fields[i]]);\n    }\n    emit(toEmit);\n  };\n}\n\nfunction checkShallow(fields) {\n  for (var i = 0, len = fields.length; i < len; i++) {\n    var field = fields[i];\n    if (field.indexOf('.') !== -1) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createMapper(fields, emit) {\n  var isShallow = checkShallow(fields);\n  var isSingle = fields.length === 1;\n\n  // notice we try to optimize for the most common case,\n  // i.e. single shallow indexes\n  if (isShallow) {\n    if (isSingle) {\n      return createShallowSingleMapper(fields[0], emit);\n    } else { // multi\n      return createShallowMultiMapper(fields, emit);\n    }\n  } else { // deep\n    if (isSingle) {\n      return createDeepSingleMapper(fields[0], emit);\n    } else { // multi\n      return createDeepMultiMapper(fields, emit);\n    }\n  }\n}\n\nfunction mapper(mapFunDef, emit) {\n  // mapFunDef is a list of fields\n\n  var fields = Object.keys(mapFunDef.fields);\n\n  return createMapper(fields, emit);\n}\n\n/* istanbul ignore next */\nfunction reducer(/*reduceFunDef*/) {\n  throw new Error('reduce not supported');\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var view = ddoc.views[viewName];\n  // This doesn't actually need to be here apparently, but\n  // I feel safer keeping it.\n  /* istanbul ignore if */\n  if (!view.map || !view.map.fields) {\n    throw new Error('ddoc ' + ddoc._id +' with view ' + viewName +\n      ' doesn\\'t have map.fields defined. ' +\n      'maybe it wasn\\'t created by this plugin?');\n  }\n}\n\nvar abstractMapper = abstractMapReduce(\n  /* localDocName */ 'indexes',\n  mapper,\n  reducer,\n  ddocValidator\n);\n\n// normalize the \"sort\" value\nfunction massageSort(sort) {\n  if (!Array.isArray(sort)) {\n    throw new Error('invalid sort json - should be an array');\n  }\n  return sort.map(function (sorting) {\n    if (typeof sorting === 'string') {\n      var obj = {};\n      obj[sorting] = 'asc';\n      return obj;\n    } else {\n      return sorting;\n    }\n  });\n}\n\nfunction massageUseIndex(useIndex) {\n  var cleanedUseIndex = [];\n  if (typeof useIndex === 'string') {\n    cleanedUseIndex.push(useIndex);\n  } else {\n    cleanedUseIndex = useIndex;\n  }\n\n  return cleanedUseIndex.map(function (name) {\n    return name.replace('_design/', '');\n  });\n}\n\nfunction massageIndexDef(indexDef) {\n  indexDef.fields = indexDef.fields.map(function (field) {\n    if (typeof field === 'string') {\n      var obj = {};\n      obj[field] = 'asc';\n      return obj;\n    }\n    return field;\n  });\n  return indexDef;\n}\n\nfunction getKeyFromDoc(doc, index) {\n  var res = [];\n  for (var i = 0; i < index.def.fields.length; i++) {\n    var field = getKey(index.def.fields[i]);\n    res.push(doc[field]);\n  }\n  return res;\n}\n\n// have to do this manually because REASONS. I don't know why\n// CouchDB didn't implement inclusive_start\nfunction filterInclusiveStart(rows, targetValue, index) {\n  var indexFields = index.def.fields;\n  for (var i = 0, len = rows.length; i < len; i++) {\n    var row = rows[i];\n\n    // shave off any docs at the beginning that are <= the\n    // target value\n\n    var docKey = getKeyFromDoc(row.doc, index);\n    if (indexFields.length === 1) {\n      docKey = docKey[0]; // only one field, not multi-field\n    } else { // more than one field in index\n      // in the case where e.g. the user is searching {$gt: {a: 1}}\n      // but the index is [a, b], then we need to shorten the doc key\n      while (docKey.length > targetValue.length) {\n        docKey.pop();\n      }\n    }\n    //ABS as we just looking for values that don't match\n    if (Math.abs(collate(docKey, targetValue)) > 0) {\n      // no need to filter any further; we're past the key\n      break;\n    }\n  }\n  return i > 0 ? rows.slice(i) : rows;\n}\n\nfunction reverseOptions(opts) {\n  var newOpts = clone(opts);\n  delete newOpts.startkey;\n  delete newOpts.endkey;\n  delete newOpts.inclusive_start;\n  delete newOpts.inclusive_end;\n\n  if ('endkey' in opts) {\n    newOpts.startkey = opts.endkey;\n  }\n  if ('startkey' in opts) {\n    newOpts.endkey = opts.startkey;\n  }\n  if ('inclusive_start' in opts) {\n    newOpts.inclusive_end = opts.inclusive_start;\n  }\n  if ('inclusive_end' in opts) {\n    newOpts.inclusive_start = opts.inclusive_end;\n  }\n  return newOpts;\n}\n\nfunction validateIndex(index) {\n  var ascFields = index.fields.filter(function (field) {\n    return getValue(field) === 'asc';\n  });\n  if (ascFields.length !== 0 && ascFields.length !== index.fields.length) {\n    throw new Error('unsupported mixed sorting');\n  }\n}\n\nfunction validateSort(requestDef, index) {\n  if (index.defaultUsed && requestDef.sort) {\n    var noneIdSorts = requestDef.sort.filter(function (sortItem) {\n      return Object.keys(sortItem)[0] !== '_id';\n    }).map(function (sortItem) {\n      return Object.keys(sortItem)[0];\n    });\n\n    if (noneIdSorts.length > 0) {\n      throw new Error('Cannot sort on field(s) \"' + noneIdSorts.join(',') +\n      '\" when using the default index');\n    }\n  }\n\n  if (index.defaultUsed) {\n    return;\n  }\n}\n\nfunction validateFindRequest(requestDef) {\n  if (typeof requestDef.selector !== 'object') {\n    throw new Error('you must provide a selector when you find()');\n  }\n\n  /*var selectors = requestDef.selector['$and'] || [requestDef.selector];\n  for (var i = 0; i < selectors.length; i++) {\n    var selector = selectors[i];\n    var keys = Object.keys(selector);\n    if (keys.length === 0) {\n      throw new Error('invalid empty selector');\n    }\n    //var selection = selector[keys[0]];\n    /*if (Object.keys(selection).length !== 1) {\n      throw new Error('invalid selector: ' + JSON.stringify(selection) +\n        ' - it must have exactly one key/value');\n    }\n  }*/\n}\n\n// determine the maximum number of fields\n// we're going to need to query, e.g. if the user\n// has selection ['a'] and sorting ['a', 'b'], then we\n// need to use the longer of the two: ['a', 'b']\nfunction getUserFields(selector, sort) {\n  var selectorFields = Object.keys(selector);\n  var sortFields = sort? sort.map(getKey) : [];\n  var userFields;\n  if (selectorFields.length >= sortFields.length) {\n    userFields = selectorFields;\n  } else {\n    userFields = sortFields;\n  }\n\n  if (sortFields.length === 0) {\n    return {\n      fields: userFields\n    };\n  }\n\n  // sort according to the user's preferred sorting\n  userFields = userFields.sort(function (left, right) {\n    var leftIdx = sortFields.indexOf(left);\n    if (leftIdx === -1) {\n      leftIdx = Number.MAX_VALUE;\n    }\n    var rightIdx = sortFields.indexOf(right);\n    if (rightIdx === -1) {\n      rightIdx = Number.MAX_VALUE;\n    }\n    return leftIdx < rightIdx ? -1 : leftIdx > rightIdx ? 1 : 0;\n  });\n\n  return {\n    fields: userFields,\n    sortOrder: sort.map(getKey)\n  };\n}\n\nfunction createIndex$1(db, requestDef) {\n  requestDef = massageCreateIndexRequest(requestDef);\n  var originalIndexDef = clone(requestDef.index);\n  requestDef.index = massageIndexDef(requestDef.index);\n\n  validateIndex(requestDef.index);\n\n  // calculating md5 is expensive - memoize and only\n  // run if required\n  var md5;\n  function getMd5() {\n    return md5 || (md5 = stringMd5(JSON.stringify(requestDef)));\n  }\n\n  var viewName = requestDef.name || ('idx-' + getMd5());\n\n  var ddocName = requestDef.ddoc || ('idx-' + getMd5());\n  var ddocId = '_design/' + ddocName;\n\n  var hasInvalidLanguage = false;\n  var viewExists = false;\n\n  function updateDdoc(doc) {\n    if (doc._rev && doc.language !== 'query') {\n      hasInvalidLanguage = true;\n    }\n    doc.language = 'query';\n    doc.views = doc.views || {};\n\n    viewExists = !!doc.views[viewName];\n\n    if (viewExists) {\n      return false;\n    }\n\n    doc.views[viewName] = {\n      map: {\n        fields: mergeObjects(requestDef.index.fields)\n      },\n      reduce: '_count',\n      options: {\n        def: originalIndexDef\n      }\n    };\n\n    return doc;\n  }\n\n  db.constructor.emit('debug', ['find', 'creating index', ddocId]);\n\n  return upsert(db, ddocId, updateDdoc).then(function () {\n    if (hasInvalidLanguage) {\n      throw new Error('invalid language for ddoc with id \"' +\n      ddocId +\n      '\" (should be \"query\")');\n    }\n  }).then(function () {\n    // kick off a build\n    // TODO: abstract-pouchdb-mapreduce should support auto-updating\n    // TODO: should also use update_after, but pouchdb/pouchdb#3415 blocks me\n    var signature = ddocName + '/' + viewName;\n    return abstractMapper.query.call(db, signature, {\n      limit: 0,\n      reduce: false\n    }).then(function () {\n      return {\n        id: ddocId,\n        name: viewName,\n        result: viewExists ? 'exists' : 'created'\n      };\n    });\n  });\n}\n\nfunction getIndexes$1(db) {\n  // just search through all the design docs and filter in-memory.\n  // hopefully there aren't that many ddocs.\n  return db.allDocs({\n    startkey: '_design/',\n    endkey: '_design/\\uffff',\n    include_docs: true\n  }).then(function (allDocsRes) {\n    var res = {\n      indexes: [{\n        ddoc: null,\n        name: '_all_docs',\n        type: 'special',\n        def: {\n          fields: [{_id: 'asc'}]\n        }\n      }]\n    };\n\n    res.indexes = flatten(res.indexes, allDocsRes.rows.filter(function (row) {\n      return row.doc.language === 'query';\n    }).map(function (row) {\n      var viewNames = row.doc.views !== undefined ? Object.keys(row.doc.views) : [];\n\n      return viewNames.map(function (viewName) {\n        var view = row.doc.views[viewName];\n        return {\n          ddoc: row.id,\n          name: viewName,\n          type: 'json',\n          def: massageIndexDef(view.options.def)\n        };\n      });\n    }));\n\n    // these are sorted by view name for some reason\n    res.indexes.sort(function (left, right) {\n      return compare(left.name, right.name);\n    });\n    res.total_rows = res.indexes.length;\n    return res;\n  });\n}\n\n// couchdb lowest collation value\nvar COLLATE_LO = null;\n\n// couchdb highest collation value (TODO: well not really, but close enough amirite)\nvar COLLATE_HI = {\"\\uffff\": {}};\n\n// couchdb second-lowest collation value\n\nfunction checkFieldInIndex(index, field) {\n  var indexFields = index.def.fields.map(getKey);\n  for (var i = 0, len = indexFields.length; i < len; i++) {\n    var indexField = indexFields[i];\n    if (field === indexField) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// so when you do e.g. $eq/$eq, we can do it entirely in the database.\n// but when you do e.g. $gt/$eq, the first part can be done\n// in the database, but the second part has to be done in-memory,\n// because $gt has forced us to lose precision.\n// so that's what this determines\nfunction userOperatorLosesPrecision(selector, field) {\n  var matcher = selector[field];\n  var userOperator = getKey(matcher);\n\n  return userOperator !== '$eq';\n}\n\n// sort the user fields by their position in the index,\n// if they're in the index\nfunction sortFieldsByIndex(userFields, index) {\n  var indexFields = index.def.fields.map(getKey);\n\n  return userFields.slice().sort(function (a, b) {\n    var aIdx = indexFields.indexOf(a);\n    var bIdx = indexFields.indexOf(b);\n    if (aIdx === -1) {\n      aIdx = Number.MAX_VALUE;\n    }\n    if (bIdx === -1) {\n      bIdx = Number.MAX_VALUE;\n    }\n    return compare(aIdx, bIdx);\n  });\n}\n\n// first pass to try to find fields that will need to be sorted in-memory\nfunction getBasicInMemoryFields(index, selector, userFields) {\n\n  userFields = sortFieldsByIndex(userFields, index);\n\n  // check if any of the user selectors lose precision\n  var needToFilterInMemory = false;\n  for (var i = 0, len = userFields.length; i < len; i++) {\n    var field = userFields[i];\n    if (needToFilterInMemory || !checkFieldInIndex(index, field)) {\n      return userFields.slice(i);\n    }\n    if (i < len - 1 && userOperatorLosesPrecision(selector, field)) {\n      needToFilterInMemory = true;\n    }\n  }\n  return [];\n}\n\nfunction getInMemoryFieldsFromNe(selector) {\n  var fields = [];\n  Object.keys(selector).forEach(function (field) {\n    var matcher = selector[field];\n    Object.keys(matcher).forEach(function (operator) {\n      if (operator === '$ne') {\n        fields.push(field);\n      }\n    });\n  });\n  return fields;\n}\n\nfunction getInMemoryFields(coreInMemoryFields, index, selector, userFields) {\n  var result = flatten(\n    // in-memory fields reported as necessary by the query planner\n    coreInMemoryFields,\n    // combine with another pass that checks for any we may have missed\n    getBasicInMemoryFields(index, selector, userFields),\n    // combine with another pass that checks for $ne's\n    getInMemoryFieldsFromNe(selector)\n  );\n\n  return sortFieldsByIndex(uniq(result), index);\n}\n\n// check that at least one field in the user's query is represented\n// in the index. order matters in the case of sorts\nfunction checkIndexFieldsMatch(indexFields, sortOrder, fields) {\n  if (sortOrder) {\n    // array has to be a strict subarray of index array. furthermore,\n    // the sortOrder fields need to all be represented in the index\n    var sortMatches = oneArrayIsStrictSubArrayOfOther(sortOrder, indexFields);\n    var selectorMatches = oneArrayIsSubArrayOfOther(fields, indexFields);\n\n    return sortMatches && selectorMatches;\n  }\n\n  // all of the user's specified fields still need to be\n  // on the left side of the index array, although the order\n  // doesn't matter\n  return oneSetIsSubArrayOfOther(fields, indexFields);\n}\n\nvar logicalMatchers = ['$eq', '$gt', '$gte', '$lt', '$lte'];\nfunction isNonLogicalMatcher(matcher) {\n  return logicalMatchers.indexOf(matcher) === -1;\n}\n\n// check all the index fields for usages of '$ne'\n// e.g. if the user queries {foo: {$ne: 'foo'}, bar: {$eq: 'bar'}},\n// then we can neither use an index on ['foo'] nor an index on\n// ['foo', 'bar'], but we can use an index on ['bar'] or ['bar', 'foo']\nfunction checkFieldsLogicallySound(indexFields, selector) {\n  var firstField = indexFields[0];\n  var matcher = selector[firstField];\n\n  if (typeof matcher === 'undefined') {\n    /* istanbul ignore next */\n    return true;\n  }\n\n  var hasLogicalOperator = Object.keys(matcher).some(function (matcherKey) {\n    return !(isNonLogicalMatcher(matcherKey));\n  });\n\n  if (!hasLogicalOperator) {\n    return false;\n  }\n\n  var isInvalidNe = Object.keys(matcher).length === 1 &&\n    getKey(matcher) === '$ne';\n\n  return !isInvalidNe;\n}\n\nfunction checkIndexMatches(index, sortOrder, fields, selector) {\n\n  var indexFields = index.def.fields.map(getKey);\n\n  var fieldsMatch = checkIndexFieldsMatch(indexFields, sortOrder, fields);\n\n  if (!fieldsMatch) {\n    return false;\n  }\n\n  return checkFieldsLogicallySound(indexFields, selector);\n}\n\n//\n// the algorithm is very simple:\n// take all the fields the user supplies, and if those fields\n// are a strict subset of the fields in some index,\n// then use that index\n//\n//\nfunction findMatchingIndexes(selector, userFields, sortOrder, indexes) {\n\n  return indexes.reduce(function (res, index) {\n    var indexMatches = checkIndexMatches(index, sortOrder, userFields, selector);\n    if (indexMatches) {\n      res.push(index);\n    }\n    return res;\n  }, []);\n}\n\n// find the best index, i.e. the one that matches the most fields\n// in the user's query\nfunction findBestMatchingIndex(selector, userFields, sortOrder, indexes, useIndex) {\n\n  var matchingIndexes = findMatchingIndexes(selector, userFields, sortOrder, indexes);\n\n  if (matchingIndexes.length === 0) {\n    if (useIndex) {\n      throw {\n        error: \"no_usable_index\",\n        message: \"There is no index available for this selector.\"\n      };\n    }\n    //return `all_docs` as a default index;\n    //I'm assuming that _all_docs is always first\n    var defaultIndex = indexes[0];\n    defaultIndex.defaultUsed = true;\n    return defaultIndex;\n  }\n  if (matchingIndexes.length === 1 && !useIndex) {\n    return matchingIndexes[0];\n  }\n\n  var userFieldsMap = arrayToObject(userFields);\n\n  function scoreIndex(index) {\n    var indexFields = index.def.fields.map(getKey);\n    var score = 0;\n    for (var i = 0, len = indexFields.length; i < len; i++) {\n      var indexField = indexFields[i];\n      if (userFieldsMap[indexField]) {\n        score++;\n      }\n    }\n    return score;\n  }\n\n  if (useIndex) {\n    var useIndexDdoc = '_design/' + useIndex[0];\n    var useIndexName = useIndex.length === 2 ? useIndex[1] : false;\n    var index = matchingIndexes.find(function (index) {\n      if (useIndexName && index.ddoc === useIndexDdoc && useIndexName === index.name) {\n        return true;\n      }\n\n      if (index.ddoc === useIndexDdoc) {\n        /* istanbul ignore next */\n        return true;\n      }\n\n      return false;\n    });\n\n    if (!index) {\n      throw {\n        error: \"unknown_error\",\n        message: \"Could not find that index or could not use that index for the query\"\n      };\n    }\n    return index;\n  }\n\n  return max(matchingIndexes, scoreIndex);\n}\n\nfunction getSingleFieldQueryOptsFor(userOperator, userValue) {\n  switch (userOperator) {\n    case '$eq':\n      return {key: userValue};\n    case '$lte':\n      return {endkey: userValue};\n    case '$gte':\n      return {startkey: userValue};\n    case '$lt':\n      return {\n        endkey: userValue,\n        inclusive_end: false\n      };\n    case '$gt':\n      return {\n        startkey: userValue,\n        inclusive_start: false\n      };\n  }\n}\n\nfunction getSingleFieldCoreQueryPlan(selector, index) {\n  var field = getKey(index.def.fields[0]);\n  //ignoring this because the test to exercise the branch is skipped at the moment\n  /* istanbul ignore next */\n  var matcher = selector[field] || {};\n  var inMemoryFields = [];\n\n  var userOperators = Object.keys(matcher);\n\n  var combinedOpts;\n\n  userOperators.forEach(function (userOperator) {\n\n    if (isNonLogicalMatcher(userOperator)) {\n      inMemoryFields.push(field);\n      return;\n    }\n\n    var userValue = matcher[userOperator];\n\n    var newQueryOpts = getSingleFieldQueryOptsFor(userOperator, userValue);\n\n    if (combinedOpts) {\n      combinedOpts = mergeObjects([combinedOpts, newQueryOpts]);\n    } else {\n      combinedOpts = newQueryOpts;\n    }\n  });\n\n  return {\n    queryOpts: combinedOpts,\n    inMemoryFields: inMemoryFields\n  };\n}\n\nfunction getMultiFieldCoreQueryPlan(userOperator, userValue) {\n  switch (userOperator) {\n    case '$eq':\n      return {\n        startkey: userValue,\n        endkey: userValue\n      };\n    case '$lte':\n      return {\n        endkey: userValue\n      };\n    case '$gte':\n      return {\n        startkey: userValue\n      };\n    case '$lt':\n      return {\n        endkey: userValue,\n        inclusive_end: false\n      };\n    case '$gt':\n      return {\n        startkey: userValue,\n        inclusive_start: false\n      };\n  }\n}\n\nfunction getMultiFieldQueryOpts(selector, index) {\n\n  var indexFields = index.def.fields.map(getKey);\n\n  var inMemoryFields = [];\n  var startkey = [];\n  var endkey = [];\n  var inclusiveStart;\n  var inclusiveEnd;\n\n\n  function finish(i) {\n\n    if (inclusiveStart !== false) {\n      startkey.push(COLLATE_LO);\n    }\n    if (inclusiveEnd !== false) {\n      endkey.push(COLLATE_HI);\n    }\n    // keep track of the fields where we lost specificity,\n    // and therefore need to filter in-memory\n    inMemoryFields = indexFields.slice(i);\n  }\n\n  for (var i = 0, len = indexFields.length; i < len; i++) {\n    var indexField = indexFields[i];\n\n    var matcher = selector[indexField];\n\n    if (!matcher || !Object.keys(matcher).length) { // fewer fields in user query than in index\n      finish(i);\n      break;\n    } else if (i > 0) {\n      if (Object.keys(matcher).some(isNonLogicalMatcher)) { // non-logical are ignored\n        finish(i);\n        break;\n      }\n      var usingGtlt = (\n        '$gt' in matcher || '$gte' in matcher ||\n        '$lt' in matcher || '$lte' in matcher);\n      var previousKeys = Object.keys(selector[indexFields[i - 1]]);\n      var previousWasEq = arrayEquals(previousKeys, ['$eq']);\n      var previousWasSame = arrayEquals(previousKeys, Object.keys(matcher));\n      var gtltLostSpecificity = usingGtlt && !previousWasEq && !previousWasSame;\n      if (gtltLostSpecificity) {\n        finish(i);\n        break;\n      }\n    }\n\n    var userOperators = Object.keys(matcher);\n\n    var combinedOpts = null;\n\n    for (var j = 0; j < userOperators.length; j++) {\n      var userOperator = userOperators[j];\n      var userValue = matcher[userOperator];\n\n      var newOpts = getMultiFieldCoreQueryPlan(userOperator, userValue);\n\n      if (combinedOpts) {\n        combinedOpts = mergeObjects([combinedOpts, newOpts]);\n      } else {\n        combinedOpts = newOpts;\n      }\n    }\n\n    startkey.push('startkey' in combinedOpts ? combinedOpts.startkey : COLLATE_LO);\n    endkey.push('endkey' in combinedOpts ? combinedOpts.endkey : COLLATE_HI);\n    if ('inclusive_start' in combinedOpts) {\n      inclusiveStart = combinedOpts.inclusive_start;\n    }\n    if ('inclusive_end' in combinedOpts) {\n      inclusiveEnd = combinedOpts.inclusive_end;\n    }\n  }\n\n  var res = {\n    startkey: startkey,\n    endkey: endkey\n  };\n\n  if (typeof inclusiveStart !== 'undefined') {\n    res.inclusive_start = inclusiveStart;\n  }\n  if (typeof inclusiveEnd !== 'undefined') {\n    res.inclusive_end = inclusiveEnd;\n  }\n\n  return {\n    queryOpts: res,\n    inMemoryFields: inMemoryFields\n  };\n}\n\nfunction getDefaultQueryPlan(selector) {\n  //using default index, so all fields need to be done in memory\n  return {\n    queryOpts: {startkey: null},\n    inMemoryFields: [Object.keys(selector)]\n  };\n}\n\nfunction getCoreQueryPlan(selector, index) {\n  if (index.defaultUsed) {\n    return getDefaultQueryPlan(selector, index);\n  }\n\n  if (index.def.fields.length === 1) {\n    // one field in index, so the value was indexed as a singleton\n    return getSingleFieldCoreQueryPlan(selector, index);\n  }\n  // else index has multiple fields, so the value was indexed as an array\n  return getMultiFieldQueryOpts(selector, index);\n}\n\nfunction planQuery(request, indexes) {\n\n  var selector = request.selector;\n  var sort = request.sort;\n\n  var userFieldsRes = getUserFields(selector, sort);\n\n  var userFields = userFieldsRes.fields;\n  var sortOrder = userFieldsRes.sortOrder;\n  var index = findBestMatchingIndex(selector, userFields, sortOrder, indexes, request.use_index);\n\n  var coreQueryPlan = getCoreQueryPlan(selector, index);\n  var queryOpts = coreQueryPlan.queryOpts;\n  var coreInMemoryFields = coreQueryPlan.inMemoryFields;\n\n  var inMemoryFields = getInMemoryFields(coreInMemoryFields, index, selector, userFields);\n\n  var res = {\n    queryOpts: queryOpts,\n    index: index,\n    inMemoryFields: inMemoryFields\n  };\n  return res;\n}\n\nfunction indexToSignature(index) {\n  // remove '_design/'\n  return index.ddoc.substring(8) + '/' + index.name;\n}\n\nfunction doAllDocs(db, originalOpts) {\n  var opts = clone(originalOpts);\n\n  // CouchDB responds in weird ways when you provide a non-string to _id;\n  // we mimic the behavior for consistency. See issue66 tests for details.\n\n  if (opts.descending) {\n    if ('endkey' in opts && typeof opts.endkey !== 'string') {\n      opts.endkey = '';\n    }\n    if ('startkey' in opts && typeof opts.startkey !== 'string') {\n      opts.limit = 0;\n    }\n  } else {\n    if ('startkey' in opts && typeof opts.startkey !== 'string') {\n      opts.startkey = '';\n    }\n    if ('endkey' in opts && typeof opts.endkey !== 'string') {\n      opts.limit = 0;\n    }\n  }\n  if ('key' in opts && typeof opts.key !== 'string') {\n    opts.limit = 0;\n  }\n\n  return db.allDocs(opts)\n  .then(function (res) {\n    // filter out any design docs that _all_docs might return\n    res.rows = res.rows.filter(function (row) {\n      return !/^_design\\//.test(row.id);\n    });\n    return res;\n  });\n}\n\nfunction find$1(db, requestDef, explain) {\n  if (requestDef.selector) {\n    requestDef.selector = massageSelector(requestDef.selector);\n  }\n\n  if (requestDef.sort) {\n    requestDef.sort = massageSort(requestDef.sort);\n  }\n\n  if (requestDef.use_index) {\n    requestDef.use_index = massageUseIndex(requestDef.use_index);\n  }\n\n  validateFindRequest(requestDef);\n\n  return getIndexes$1(db).then(function (getIndexesRes) {\n\n    db.constructor.emit('debug', ['find', 'planning query', requestDef]);\n    var queryPlan = planQuery(requestDef, getIndexesRes.indexes);\n    db.constructor.emit('debug', ['find', 'query plan', queryPlan]);\n\n    var indexToUse = queryPlan.index;\n\n    validateSort(requestDef, indexToUse);\n\n    var opts = assign({\n      include_docs: true,\n      reduce: false\n    }, queryPlan.queryOpts);\n\n    if ('startkey' in opts && 'endkey' in opts &&\n        collate(opts.startkey, opts.endkey) > 0) {\n      // can't possibly return any results, startkey > endkey\n      /* istanbul ignore next */\n      return {docs: []};\n    }\n\n    var isDescending = requestDef.sort &&\n      typeof requestDef.sort[0] !== 'string' &&\n      getValue(requestDef.sort[0]) === 'desc';\n\n    if (isDescending) {\n      // either all descending or all ascending\n      opts.descending = true;\n      opts = reverseOptions(opts);\n    }\n\n    if (!queryPlan.inMemoryFields.length) {\n      // no in-memory filtering necessary, so we can let the\n      // database do the limit/skip for us\n      if ('limit' in requestDef) {\n        opts.limit = requestDef.limit;\n      }\n      if ('skip' in requestDef) {\n        opts.skip = requestDef.skip;\n      }\n    }\n\n    if (explain) {\n      return Promise.resolve(queryPlan, opts);\n    }\n\n    return Promise.resolve().then(function () {\n      if (indexToUse.name === '_all_docs') {\n        return doAllDocs(db, opts);\n      } else {\n        var signature = indexToSignature(indexToUse);\n        return abstractMapper.query.call(db, signature, opts);\n      }\n    }).then(function (res) {\n      if (opts.inclusive_start === false) {\n        // may have to manually filter the first one,\n        // since couchdb has no true inclusive_start option\n        res.rows = filterInclusiveStart(res.rows, opts.startkey, indexToUse);\n      }\n\n      if (queryPlan.inMemoryFields.length) {\n        // need to filter some stuff in-memory\n        res.rows = filterInMemoryFields(res.rows, requestDef, queryPlan.inMemoryFields);\n      }\n\n      var resp = {\n        docs: res.rows.map(function (row) {\n          var doc = row.doc;\n          if (requestDef.fields) {\n            return pick(doc, requestDef.fields);\n          }\n          return doc;\n        })\n      };\n\n      if (indexToUse.defaultUsed) {\n        resp.warning = 'no matching index found, create an index to optimize query time';\n      }\n\n      return resp;\n    });\n  });\n}\n\nfunction explain$1(db, requestDef) {\n  return find$1(db, requestDef, true)\n  .then(function (queryPlan) {\n    return {\n      dbname: db.name,\n      index: queryPlan.index,\n      selector: requestDef.selector,\n      range: {\n        start_key: queryPlan.queryOpts.startkey,\n        end_key: queryPlan.queryOpts.endkey,\n      },\n      opts: {\n        use_index: requestDef.use_index || [],\n        bookmark: \"nil\", //hardcoded to match CouchDB since its not supported,\n        limit: requestDef.limit,\n        skip: requestDef.skip,\n        sort: requestDef.sort || {},\n        fields: requestDef.fields,\n        conflicts: false, //hardcoded to match CouchDB since its not supported,\n        r: [49], // hardcoded to match CouchDB since its not support\n      },\n      limit: requestDef.limit,\n      skip: requestDef.skip || 0,\n      fields: requestDef.fields,\n    };\n  });\n}\n\nfunction deleteIndex$1(db, index) {\n\n  if (!index.ddoc) {\n    throw new Error('you must supply an index.ddoc when deleting');\n  }\n\n  if (!index.name) {\n    throw new Error('you must supply an index.name when deleting');\n  }\n\n  var docId = index.ddoc;\n  var viewName = index.name;\n\n  function deltaFun(doc) {\n    if (Object.keys(doc.views).length === 1 && doc.views[viewName]) {\n      // only one view in this ddoc, delete the whole ddoc\n      return {_id: docId, _deleted: true};\n    }\n    // more than one view here, just remove the view\n    delete doc.views[viewName];\n    return doc;\n  }\n\n  return upsert(db, docId, deltaFun).then(function () {\n    return abstractMapper.viewCleanup.apply(db);\n  }).then(function () {\n    return {ok: true};\n  });\n}\n\nvar createIndexAsCallback = callbackify(createIndex$1);\nvar findAsCallback = callbackify(find$1);\nvar explainAsCallback = callbackify(explain$1);\nvar getIndexesAsCallback = callbackify(getIndexes$1);\nvar deleteIndexAsCallback = callbackify(deleteIndex$1);\n\nvar plugin = {};\nplugin.createIndex = toPromise(function (requestDef, callback) {\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide an index to create'));\n  }\n\n  var createIndex$$1 = isRemote(this) ?\n    createIndex : createIndexAsCallback;\n  createIndex$$1(this, requestDef, callback);\n});\n\nplugin.find = toPromise(function (requestDef, callback) {\n\n  if (typeof callback === 'undefined') {\n    callback = requestDef;\n    requestDef = undefined;\n  }\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide search parameters to find()'));\n  }\n\n  var find$$1 = isRemote(this) ? find : findAsCallback;\n  find$$1(this, requestDef, callback);\n});\n\nplugin.explain = toPromise(function (requestDef, callback) {\n\n  if (typeof callback === 'undefined') {\n    callback = requestDef;\n    requestDef = undefined;\n  }\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide search parameters to explain()'));\n  }\n\n  var find$$1 = isRemote(this) ? explain : explainAsCallback;\n  find$$1(this, requestDef, callback);\n});\n\nplugin.getIndexes = toPromise(function (callback) {\n\n  var getIndexes$$1 = isRemote(this) ? getIndexes : getIndexesAsCallback;\n  getIndexes$$1(this, callback);\n});\n\nplugin.deleteIndex = toPromise(function (indexDef, callback) {\n\n  if (typeof indexDef !== 'object') {\n    return callback(new Error('you must provide an index to delete'));\n  }\n\n  var deleteIndex$$1 = isRemote(this) ?\n    deleteIndex : deleteIndexAsCallback;\n  deleteIndex$$1(this, indexDef, callback);\n});\n\nexport default plugin;\n","import PouchDB from \"pouchdb-browser\";\nimport PouchDBFind from \"pouchdb-find\";\n\nPouchDB.plugin(PouchDBFind);\n\nclass Database {\n  db = new PouchDB(\"WORKER-WAGES-maneptha\");\n\n  constructor() {\n    this.db.createIndex({\n      index: { fields: [\"typename__\"] }\n    });\n  }\n\n  genId = () => new Date().toJSON().slice(0, -1) + \"000Z\";\n}\n\nconst db = new Database();\n\nexport const getDb = () => db;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","'use strict';\n\nexports.__esModule = true;\nexports.HandlebarsEnvironment = HandlebarsEnvironment;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = require('./utils');\n\nvar _exception = require('./exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _helpers = require('./helpers');\n\nvar _decorators = require('./decorators');\n\nvar _logger = require('./logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar VERSION = '4.0.11';\nexports.VERSION = VERSION;\nvar COMPILER_REVISION = 7;\n\nexports.COMPILER_REVISION = COMPILER_REVISION;\nvar REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0'\n};\n\nexports.REVISION_CHANGES = REVISION_CHANGES;\nvar objectType = '[object Object]';\n\nfunction HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  _helpers.registerDefaultHelpers(this);\n  _decorators.registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: _logger2['default'],\n  log: _logger2['default'].log,\n\n  registerHelper: function registerHelper(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple helpers');\n      }\n      _utils.extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function unregisterHelper(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function registerPartial(name, partial) {\n    if (_utils.toString.call(name) === objectType) {\n      _utils.extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new _exception2['default']('Attempting to register a partial called \"' + name + '\" as undefined');\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function unregisterPartial(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function registerDecorator(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple decorators');\n      }\n      _utils.extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function unregisterDecorator(name) {\n    delete this.decorators[name];\n  }\n};\n\nvar log = _logger2['default'].log;\n\nexports.log = log;\nexports.createFrame = _utils.createFrame;\nexports.logger = _logger2['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7cUJBQTRDLFNBQVM7O3lCQUMvQixhQUFhOzs7O3VCQUNFLFdBQVc7OzBCQUNSLGNBQWM7O3NCQUNuQyxVQUFVOzs7O0FBRXRCLElBQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQzs7QUFDekIsSUFBTSxpQkFBaUIsR0FBRyxDQUFDLENBQUM7OztBQUU1QixJQUFNLGdCQUFnQixHQUFHO0FBQzlCLEdBQUMsRUFBRSxhQUFhO0FBQ2hCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxVQUFVO0FBQ2IsR0FBQyxFQUFFLGtCQUFrQjtBQUNyQixHQUFDLEVBQUUsaUJBQWlCO0FBQ3BCLEdBQUMsRUFBRSxVQUFVO0NBQ2QsQ0FBQzs7O0FBRUYsSUFBTSxVQUFVLEdBQUcsaUJBQWlCLENBQUM7O0FBRTlCLFNBQVMscUJBQXFCLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUU7QUFDbkUsTUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLElBQUksRUFBRSxDQUFDO0FBQzdCLE1BQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxJQUFJLEVBQUUsQ0FBQztBQUMvQixNQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsSUFBSSxFQUFFLENBQUM7O0FBRW5DLGtDQUF1QixJQUFJLENBQUMsQ0FBQztBQUM3Qix3Q0FBMEIsSUFBSSxDQUFDLENBQUM7Q0FDakM7O0FBRUQscUJBQXFCLENBQUMsU0FBUyxHQUFHO0FBQ2hDLGFBQVcsRUFBRSxxQkFBcUI7O0FBRWxDLFFBQU0scUJBQVE7QUFDZCxLQUFHLEVBQUUsb0JBQU8sR0FBRzs7QUFFZixnQkFBYyxFQUFFLHdCQUFTLElBQUksRUFBRSxFQUFFLEVBQUU7QUFDakMsUUFBSSxnQkFBUyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFO0FBQ3RDLFVBQUksRUFBRSxFQUFFO0FBQUUsY0FBTSwyQkFBYyx5Q0FBeUMsQ0FBQyxDQUFDO09BQUU7QUFDM0Usb0JBQU8sSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztLQUM1QixNQUFNO0FBQ0wsVUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7S0FDekI7R0FDRjtBQUNELGtCQUFnQixFQUFFLDBCQUFTLElBQUksRUFBRTtBQUMvQixXQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDM0I7O0FBRUQsaUJBQWUsRUFBRSx5QkFBUyxJQUFJLEVBQUUsT0FBTyxFQUFFO0FBQ3ZDLFFBQUksZ0JBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLFVBQVUsRUFBRTtBQUN0QyxvQkFBTyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQzdCLE1BQU07QUFDTCxVQUFJLE9BQU8sT0FBTyxLQUFLLFdBQVcsRUFBRTtBQUNsQyxjQUFNLHlFQUEwRCxJQUFJLG9CQUFpQixDQUFDO09BQ3ZGO0FBQ0QsVUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUM7S0FDL0I7R0FDRjtBQUNELG1CQUFpQixFQUFFLDJCQUFTLElBQUksRUFBRTtBQUNoQyxXQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDNUI7O0FBRUQsbUJBQWlCLEVBQUUsMkJBQVMsSUFBSSxFQUFFLEVBQUUsRUFBRTtBQUNwQyxRQUFJLGdCQUFTLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxVQUFVLEVBQUU7QUFDdEMsVUFBSSxFQUFFLEVBQUU7QUFBRSxjQUFNLDJCQUFjLDRDQUE0QyxDQUFDLENBQUM7T0FBRTtBQUM5RSxvQkFBTyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQy9CLE1BQU07QUFDTCxVQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUM1QjtHQUNGO0FBQ0QscUJBQW1CLEVBQUUsNkJBQVMsSUFBSSxFQUFFO0FBQ2xDLFdBQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUM5QjtDQUNGLENBQUM7O0FBRUssSUFBSSxHQUFHLEdBQUcsb0JBQU8sR0FBRyxDQUFDOzs7UUFFcEIsV0FBVztRQUFFLE1BQU0iLCJmaWxlIjoiYmFzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y3JlYXRlRnJhbWUsIGV4dGVuZCwgdG9TdHJpbmd9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuL2V4Y2VwdGlvbic7XG5pbXBvcnQge3JlZ2lzdGVyRGVmYXVsdEhlbHBlcnN9IGZyb20gJy4vaGVscGVycyc7XG5pbXBvcnQge3JlZ2lzdGVyRGVmYXVsdERlY29yYXRvcnN9IGZyb20gJy4vZGVjb3JhdG9ycyc7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcblxuZXhwb3J0IGNvbnN0IFZFUlNJT04gPSAnNC4wLjExJztcbmV4cG9ydCBjb25zdCBDT01QSUxFUl9SRVZJU0lPTiA9IDc7XG5cbmV4cG9ydCBjb25zdCBSRVZJU0lPTl9DSEFOR0VTID0ge1xuICAxOiAnPD0gMS4wLnJjLjInLCAvLyAxLjAucmMuMiBpcyBhY3R1YWxseSByZXYyIGJ1dCBkb2Vzbid0IHJlcG9ydCBpdFxuICAyOiAnPT0gMS4wLjAtcmMuMycsXG4gIDM6ICc9PSAxLjAuMC1yYy40JyxcbiAgNDogJz09IDEueC54JyxcbiAgNTogJz09IDIuMC4wLWFscGhhLngnLFxuICA2OiAnPj0gMi4wLjAtYmV0YS4xJyxcbiAgNzogJz49IDQuMC4wJ1xufTtcblxuY29uc3Qgb2JqZWN0VHlwZSA9ICdbb2JqZWN0IE9iamVjdF0nO1xuXG5leHBvcnQgZnVuY3Rpb24gSGFuZGxlYmFyc0Vudmlyb25tZW50KGhlbHBlcnMsIHBhcnRpYWxzLCBkZWNvcmF0b3JzKSB7XG4gIHRoaXMuaGVscGVycyA9IGhlbHBlcnMgfHwge307XG4gIHRoaXMucGFydGlhbHMgPSBwYXJ0aWFscyB8fCB7fTtcbiAgdGhpcy5kZWNvcmF0b3JzID0gZGVjb3JhdG9ycyB8fCB7fTtcblxuICByZWdpc3RlckRlZmF1bHRIZWxwZXJzKHRoaXMpO1xuICByZWdpc3RlckRlZmF1bHREZWNvcmF0b3JzKHRoaXMpO1xufVxuXG5IYW5kbGViYXJzRW52aXJvbm1lbnQucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogSGFuZGxlYmFyc0Vudmlyb25tZW50LFxuXG4gIGxvZ2dlcjogbG9nZ2VyLFxuICBsb2c6IGxvZ2dlci5sb2csXG5cbiAgcmVnaXN0ZXJIZWxwZXI6IGZ1bmN0aW9uKG5hbWUsIGZuKSB7XG4gICAgaWYgKHRvU3RyaW5nLmNhbGwobmFtZSkgPT09IG9iamVjdFR5cGUpIHtcbiAgICAgIGlmIChmbikgeyB0aHJvdyBuZXcgRXhjZXB0aW9uKCdBcmcgbm90IHN1cHBvcnRlZCB3aXRoIG11bHRpcGxlIGhlbHBlcnMnKTsgfVxuICAgICAgZXh0ZW5kKHRoaXMuaGVscGVycywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaGVscGVyc1tuYW1lXSA9IGZuO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlckhlbHBlcjogZnVuY3Rpb24obmFtZSkge1xuICAgIGRlbGV0ZSB0aGlzLmhlbHBlcnNbbmFtZV07XG4gIH0sXG5cbiAgcmVnaXN0ZXJQYXJ0aWFsOiBmdW5jdGlvbihuYW1lLCBwYXJ0aWFsKSB7XG4gICAgaWYgKHRvU3RyaW5nLmNhbGwobmFtZSkgPT09IG9iamVjdFR5cGUpIHtcbiAgICAgIGV4dGVuZCh0aGlzLnBhcnRpYWxzLCBuYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHR5cGVvZiBwYXJ0aWFsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKGBBdHRlbXB0aW5nIHRvIHJlZ2lzdGVyIGEgcGFydGlhbCBjYWxsZWQgXCIke25hbWV9XCIgYXMgdW5kZWZpbmVkYCk7XG4gICAgICB9XG4gICAgICB0aGlzLnBhcnRpYWxzW25hbWVdID0gcGFydGlhbDtcbiAgICB9XG4gIH0sXG4gIHVucmVnaXN0ZXJQYXJ0aWFsOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgZGVsZXRlIHRoaXMucGFydGlhbHNbbmFtZV07XG4gIH0sXG5cbiAgcmVnaXN0ZXJEZWNvcmF0b3I6IGZ1bmN0aW9uKG5hbWUsIGZuKSB7XG4gICAgaWYgKHRvU3RyaW5nLmNhbGwobmFtZSkgPT09IG9iamVjdFR5cGUpIHtcbiAgICAgIGlmIChmbikgeyB0aHJvdyBuZXcgRXhjZXB0aW9uKCdBcmcgbm90IHN1cHBvcnRlZCB3aXRoIG11bHRpcGxlIGRlY29yYXRvcnMnKTsgfVxuICAgICAgZXh0ZW5kKHRoaXMuZGVjb3JhdG9ycywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGVjb3JhdG9yc1tuYW1lXSA9IGZuO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24obmFtZSkge1xuICAgIGRlbGV0ZSB0aGlzLmRlY29yYXRvcnNbbmFtZV07XG4gIH1cbn07XG5cbmV4cG9ydCBsZXQgbG9nID0gbG9nZ2VyLmxvZztcblxuZXhwb3J0IHtjcmVhdGVGcmFtZSwgbG9nZ2VyfTtcbiJdfQ==\n","(function (global, factory) {\ntypeof exports === 'object' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\nfactory(global.Phoenix = global.Phoenix || {});\n}(this, (function (exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Phoenix Channels JavaScript client\n *\n * ## Socket Connection\n *\n * A single connection is established to the server and\n * channels are multiplexed over the connection.\n * Connect to the server using the `Socket` class:\n *\n * ```javascript\n *     let socket = new Socket(\"/socket\", {params: {userToken: \"123\"}})\n *     socket.connect()\n * ```\n *\n * The `Socket` constructor takes the mount point of the socket,\n * the authentication params, as well as options that can be found in\n * the Socket docs, such as configuring the `LongPoll` transport, and\n * heartbeat.\n *\n * ## Channels\n *\n * Channels are isolated, concurrent processes on the server that\n * subscribe to topics and broker events between the client and server.\n * To join a channel, you must provide the topic, and channel params for\n * authorization. Here's an example chat room example where `\"new_msg\"`\n * events are listened for, messages are pushed to the server, and\n * the channel is joined with ok/error/timeout matches:\n *\n * ```javascript\n *     let channel = socket.channel(\"room:123\", {token: roomToken})\n *     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n *     $input.onEnter( e => {\n *       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n *        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n *        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n *        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n *     })\n *     channel.join()\n *       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n *       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n *       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n *```\n *\n * ## Joining\n *\n * Creating a channel with `socket.channel(topic, params)`, binds the params to\n * `channel.params`, which are sent up on `channel.join()`.\n * Subsequent rejoins will send up the modified params for\n * updating authorization params, or passing up last_message_id information.\n * Successful joins receive an \"ok\" status, while unsuccessful joins\n * receive \"error\".\n *\n * ## Duplicate Join Subscriptions\n *\n * While the client may join any number of topics on any number of channels,\n * the client may only hold a single subscription for each unique topic at any\n * given time. When attempting to create a duplicate subscription,\n * the server will close the existing channel, log a warning, and\n * spawn a new channel for the topic. The client will have their\n * `channel.onClose` callbacks fired for the existing channel, and the new\n * channel join will have its receive hooks processed as normal.\n *\n * ## Pushing Messages\n *\n * From the previous example, we can see that pushing messages to the server\n * can be done with `channel.push(eventName, payload)` and we can optionally\n * receive responses from the push. Additionally, we can use\n * `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n *  and take action after some period of waiting. The default timeout is 5000ms.\n *\n *\n * ## Socket Hooks\n *\n * Lifecycle events of the multiplexed connection can be hooked into via\n * `socket.onError()` and `socket.onClose()` events, ie:\n *\n * ```javascript\n *     socket.onError( () => console.log(\"there was an error with the connection!\") )\n *     socket.onClose( () => console.log(\"the connection dropped\") )\n * ```\n *\n *\n * ## Channel Hooks\n *\n * For each joined channel, you can bind to `onError` and `onClose` events\n * to monitor the channel lifecycle, ie:\n *\n * ```javascript\n *     channel.onError( () => console.log(\"there was an error!\") )\n *     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n * ```\n *\n * ### onError hooks\n *\n * `onError` hooks are invoked if the socket connection drops, or the channel\n * crashes on the server. In either case, a channel rejoin is attempted\n * automatically in an exponential backoff manner.\n *\n * ### onClose hooks\n *\n * `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n * closed on the server, or 2). The client explicitly closed, by calling\n * `channel.leave()`\n *\n *\n * ## Presence\n *\n * The `Presence` object provides features for syncing presence information\n * from the server with the client and handling presences joining and leaving.\n *\n * ### Syncing initial state from the server\n *\n * `Presence.syncState` is used to sync the list of presences on the server\n * with the client's state. An optional `onJoin` and `onLeave` callback can\n * be provided to react to changes in the client's local presences across\n * disconnects and reconnects with the server.\n *\n * `Presence.syncDiff` is used to sync a diff of presence join and leave\n * events from the server, as they happen. Like `syncState`, `syncDiff`\n * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n * joining or leaving from a device.\n *\n * ### Listing Presences\n *\n * `Presence.list` is used to return a list of presence information\n * based on the local state of metadata. By default, all presence\n * metadata is returned, but a `listBy` function can be supplied to\n * allow the client to select which metadata to use for a given presence.\n * For example, you may have a user online from different devices with\n * a metadata status of \"online\", but they have set themselves to \"away\"\n * on another device. In this case, the app may choose to use the \"away\"\n * status for what appears on the UI. The example below defines a `listBy`\n * function which prioritizes the first metadata which was registered for\n * each user. This could be the first tab they opened, or the first device\n * they came online from:\n *\n * ```javascript\n *     let state = {}\n *     state = Presence.syncState(state, stateFromServer)\n *     let listBy = (id, {metas: [first, ...rest]}) => {\n *       first.count = rest.length + 1 // count of this user's presences\n *       first.id = id\n *       return first\n *     }\n *     let onlineUsers = Presence.list(state, listBy)\n * ```\n *\n *\n * ### Example Usage\n *```javascript\n *     // detect if user has joined for the 1st time or from another tab/device\n *     let onJoin = (id, current, newPres) => {\n *       if(!current){\n *         console.log(\"user has entered for the first time\", newPres)\n *       } else {\n *         console.log(\"user additional presence\", newPres)\n *       }\n *     }\n *     // detect if user has left from all tabs/devices, or is still present\n *     let onLeave = (id, current, leftPres) => {\n *       if(current.metas.length === 0){\n *         console.log(\"user has left from all devices\", leftPres)\n *       } else {\n *         console.log(\"user left from a device\", leftPres)\n *       }\n *     }\n *     let presences = {} // client's initial empty presence state\n *     // receive initial presence data from server, sent after join\n *     myChannel.on(\"presence_state\", state => {\n *       presences = Presence.syncState(presences, state, onJoin, onLeave)\n *       displayUsers(Presence.list(presences))\n *     })\n *     // receive \"presence_diff\" from server, containing join/leave events\n *     myChannel.on(\"presence_diff\", diff => {\n *       presences = Presence.syncDiff(presences, diff, onJoin, onLeave)\n *       this.setState({users: Presence.list(room.presences, listBy)})\n *     })\n * ```\n * @module phoenix\n */\n\nvar VSN = \"2.0.0\";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 10000;\nvar WS_CLOSE_NORMAL = 1000;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar CHANNEL_LIFECYCLE_EVENTS = [CHANNEL_EVENTS.close, CHANNEL_EVENTS.error, CHANNEL_EVENTS.join, CHANNEL_EVENTS.reply, CHANNEL_EVENTS.leave];\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\n\n/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\n\nvar Push = function () {\n  function Push(channel, event, payload, timeout) {\n    _classCallCheck(this, Push);\n\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || {};\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n\n\n  _createClass(Push, [{\n    key: \"resend\",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n      this.reset();\n      this.send();\n    }\n\n    /**\n     *\n     */\n\n  }, {\n    key: \"send\",\n    value: function send() {\n      if (this.hasReceived(\"timeout\")) {\n        return;\n      }\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref,\n        join_ref: this.channel.joinRef()\n      });\n    }\n\n    /**\n     *\n     * @param {*} status\n     * @param {*} callback\n     */\n\n  }, {\n    key: \"receive\",\n    value: function receive(status, callback) {\n      if (this.hasReceived(status)) {\n        callback(this.receivedResp.response);\n      }\n\n      this.recHooks.push({ status: status, callback: callback });\n      return this;\n    }\n\n    // private\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.cancelRefEvent();\n      this.ref = null;\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n    }\n  }, {\n    key: \"matchReceive\",\n    value: function matchReceive(_ref) {\n      var status = _ref.status,\n          response = _ref.response,\n          ref = _ref.ref;\n\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: \"cancelRefEvent\",\n    value: function cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: \"cancelTimeout\",\n    value: function cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n  }, {\n    key: \"startTimeout\",\n    value: function startTimeout() {\n      var _this = this;\n\n      if (this.timeoutTimer) {\n        this.cancelTimeout();\n      }\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n\n      this.channel.on(this.refEvent, function (payload) {\n        _this.cancelRefEvent();\n        _this.cancelTimeout();\n        _this.receivedResp = payload;\n        _this.matchReceive(payload);\n      });\n\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger(\"timeout\", {});\n      }, this.timeout);\n    }\n  }, {\n    key: \"hasReceived\",\n    value: function hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(status, response) {\n      this.channel.trigger(this.refEvent, { status: status, response: response });\n    }\n  }]);\n\n  return Push;\n}();\n\n/**\n *\n * @param {string} topic\n * @param {Object} params\n * @param {Socket} socket\n */\n\n\nvar Channel = exports.Channel = function () {\n  function Channel(topic, params, socket) {\n    var _this2 = this;\n\n    _classCallCheck(this, Channel);\n\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = params || {};\n    this.socket = socket;\n    this.bindings = [];\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.rejoinTimer = new Timer(function () {\n      return _this2.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive(\"ok\", function () {\n      _this2.state = CHANNEL_STATES.joined;\n      _this2.rejoinTimer.reset();\n      _this2.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n      _this2.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this2.rejoinTimer.reset();\n      _this2.socket.log(\"channel\", \"close \" + _this2.topic + \" \" + _this2.joinRef());\n      _this2.state = CHANNEL_STATES.closed;\n      _this2.socket.remove(_this2);\n    });\n    this.onError(function (reason) {\n      if (_this2.isLeaving() || _this2.isClosed()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"error \" + _this2.topic, reason);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive(\"timeout\", function () {\n      if (!_this2.isJoining()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"timeout \" + _this2.topic + \" (\" + _this2.joinRef() + \")\", _this2.joinPush.timeout);\n      var leavePush = new Push(_this2, CHANNEL_EVENTS.leave, {}, _this2.timeout);\n      leavePush.send();\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.joinPush.reset();\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this2.trigger(_this2.replyEventName(ref), payload);\n    });\n  }\n\n  _createClass(Channel, [{\n    key: \"rejoinUntilConnected\",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: \"join\",\n    value: function join() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n\n      if (this.joinedOnce) {\n        throw \"tried to join multiple times. 'join' can only be called a single time per channel instance\";\n      } else {\n        this.joinedOnce = true;\n        this.rejoin(timeout);\n        return this.joinPush;\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.bindings.push({ event: event, callback: callback });\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: \"canPush\",\n    value: function canPush() {\n      return this.socket.isConnected() && this.isJoined();\n    }\n  }, {\n    key: \"push\",\n    value: function push(event, payload) {\n      var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.timeout;\n\n      if (!this.joinedOnce) {\n        throw \"tried to push '\" + event + \"' to '\" + this.topic + \"' before joining. Use channel.join() before pushing events\";\n      }\n      var pushEvent = new Push(this, event, payload, timeout);\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n\n      return pushEvent;\n    }\n\n    /** Leaves the channel\n     *\n     * Unsubscribes from server events, and\n     * instructs channel to terminate on server\n     *\n     * Triggers onClose() hooks\n     *\n     * To receive leave acknowledgements, use the a `receive`\n     * hook to bind to the server ack, ie:\n     *\n     * ```javascript\n     *     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n     * ```\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      var _this3 = this;\n\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n\n      this.state = CHANNEL_STATES.leaving;\n      var onClose = function onClose() {\n        _this3.socket.log(\"channel\", \"leave \" + _this3.topic);\n        _this3.trigger(CHANNEL_EVENTS.close, \"leave\");\n      };\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive(\"ok\", function () {\n        return onClose();\n      }).receive(\"timeout\", function () {\n        return onClose();\n      });\n      leavePush.send();\n      if (!this.canPush()) {\n        leavePush.trigger(\"ok\", {});\n      }\n\n      return leavePush;\n    }\n\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling\n     * before dispatching to the channel callbacks.\n     *\n     * Must return the payload, modified or unmodified\n     */\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event, payload, ref) {\n      return payload;\n    }\n\n    // private\n\n  }, {\n    key: \"isMember\",\n    value: function isMember(topic, event, payload, joinRef) {\n      if (this.topic !== topic) {\n        return false;\n      }\n      var isLifecycleEvent = CHANNEL_LIFECYCLE_EVENTS.indexOf(event) >= 0;\n\n      if (joinRef && isLifecycleEvent && joinRef !== this.joinRef()) {\n        this.socket.log(\"channel\", \"dropping outdated message\", { topic: topic, event: event, payload: payload, joinRef: joinRef });\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"joinRef\",\n    value: function joinRef() {\n      return this.joinPush.ref;\n    }\n  }, {\n    key: \"sendJoin\",\n    value: function sendJoin(timeout) {\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: \"rejoin\",\n    value: function rejoin() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n      if (this.isLeaving()) {\n        return;\n      }\n      this.sendJoin(timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(event, payload, ref, joinRef) {\n      var _this4 = this;\n\n      var handledPayload = this.onMessage(event, payload, ref, joinRef);\n      if (payload && !handledPayload) {\n        throw \"channel onMessage callbacks must return the payload, modified or unmodified\";\n      }\n\n      this.bindings.filter(function (bind) {\n        return bind.event === event;\n      }).map(function (bind) {\n        return bind.callback(handledPayload, ref, joinRef || _this4.joinRef());\n      });\n    }\n  }, {\n    key: \"replyEventName\",\n    value: function replyEventName(ref) {\n      return \"chan_reply_\" + ref;\n    }\n  }, {\n    key: \"isClosed\",\n    value: function isClosed() {\n      return this.state === CHANNEL_STATES.closed;\n    }\n  }, {\n    key: \"isErrored\",\n    value: function isErrored() {\n      return this.state === CHANNEL_STATES.errored;\n    }\n  }, {\n    key: \"isJoined\",\n    value: function isJoined() {\n      return this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: \"isJoining\",\n    value: function isJoining() {\n      return this.state === CHANNEL_STATES.joining;\n    }\n  }, {\n    key: \"isLeaving\",\n    value: function isLeaving() {\n      return this.state === CHANNEL_STATES.leaving;\n    }\n  }]);\n\n  return Channel;\n}();\n\nvar Serializer = {\n  encode: function encode(msg, callback) {\n    var payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload];\n    return callback(JSON.stringify(payload));\n  },\n  decode: function decode(rawPayload, callback) {\n    var _JSON$parse = JSON.parse(rawPayload),\n        _JSON$parse2 = _slicedToArray(_JSON$parse, 5),\n        join_ref = _JSON$parse2[0],\n        ref = _JSON$parse2[1],\n        topic = _JSON$parse2[2],\n        event = _JSON$parse2[3],\n        payload = _JSON$parse2[4];\n\n    return callback({ join_ref: join_ref, ref: ref, topic: topic, event: event, payload: payload });\n  }\n};\n\n/** Initializes the Socket\n *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} opts - Optional configuration\n * @param {string} opts.transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback.\n * @param {Function} opts.encode - The function to encode outgoing messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.stringify(payload))\n * ```\n *\n * @param {Function} opts.decode - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} opts.timeout - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} opts.heartbeatIntervalMs - The millisec interval to send a heartbeat message\n * @param {number} opts.reconnectAfterMs - The optional function that returns the millsec reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n *  function(tries){\n *    return [1000, 5000, 10000][tries - 1] || 10000\n *  }\n * ```\n * @param {Function} opts.logger - The optional function for specialized logging, ie:\n * ```javascript\n * logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n * ```\n *\n * @param {number}  opts.longpollerTimeout - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {Object}  opts.params - The optional params to pass when connecting\n *\n *\n*/\n\nvar Socket = exports.Socket = function () {\n  function Socket(endPoint) {\n    var _this5 = this;\n\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Socket);\n\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || window.WebSocket || LongPoll;\n    this.defaultEncoder = Serializer.encode;\n    this.defaultDecoder = Serializer.decode;\n    if (this.transport !== LongPoll) {\n      this.encode = opts.encode || this.defaultEncoder;\n      this.decode = opts.decode || this.defaultDecoder;\n    } else {\n      this.encode = this.defaultEncoder;\n      this.decode = this.defaultDecoder;\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.logger = opts.logger || function () {}; // noop\n    this.longpollerTimeout = opts.longpollerTimeout || 20000;\n    this.params = opts.params || {};\n    this.endPoint = endPoint + \"/\" + TRANSPORTS.websocket;\n    this.heartbeatTimer = null;\n    this.pendingHeartbeatRef = null;\n    this.reconnectTimer = new Timer(function () {\n      _this5.disconnect(function () {\n        return _this5.connect();\n      });\n    }, this.reconnectAfterMs);\n  }\n\n  _createClass(Socket, [{\n    key: \"protocol\",\n    value: function protocol() {\n      return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n    }\n  }, {\n    key: \"endPointURL\",\n    value: function endPointURL() {\n      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });\n      if (uri.charAt(0) !== \"/\") {\n        return uri;\n      }\n      if (uri.charAt(1) === \"/\") {\n        return this.protocol() + \":\" + uri;\n      }\n\n      return this.protocol() + \"://\" + location.host + uri;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(callback, code, reason) {\n      if (this.conn) {\n        this.conn.onclose = function () {}; // noop\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n        this.conn = null;\n      }\n      callback && callback();\n    }\n\n    /**\n     *\n     * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect(params) {\n      var _this6 = this;\n\n      if (params) {\n        console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n        this.params = params;\n      }\n      if (this.conn) {\n        return;\n      }\n\n      this.conn = new this.transport(this.endPointURL());\n      this.conn.timeout = this.longpollerTimeout;\n      this.conn.onopen = function () {\n        return _this6.onConnOpen();\n      };\n      this.conn.onerror = function (error) {\n        return _this6.onConnError(error);\n      };\n      this.conn.onmessage = function (event) {\n        return _this6.onConnMessage(event);\n      };\n      this.conn.onclose = function (event) {\n        return _this6.onConnClose(event);\n      };\n    }\n\n    /**\n     * Logs the message. Override `this.logger` for specialized logging. noops by default\n     * @param {string} kind\n     * @param {string} msg\n     * @param {Object} data\n     */\n\n  }, {\n    key: \"log\",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n\n    // Registers callbacks for connection state change events\n    //\n    // Examples\n    //\n    //    socket.onError(function(error){ alert(\"An error occurred\") })\n    //\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n  }, {\n    key: \"onConnOpen\",\n    value: function onConnOpen() {\n      var _this7 = this;\n\n      this.log(\"transport\", \"connected to \" + this.endPointURL());\n      this.flushSendBuffer();\n      this.reconnectTimer.reset();\n      if (!this.conn.skipHeartbeat) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(function () {\n          return _this7.sendHeartbeat();\n        }, this.heartbeatIntervalMs);\n      }\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"onConnClose\",\n    value: function onConnClose(event) {\n      this.log(\"transport\", \"close\", event);\n      this.triggerChanError();\n      clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: \"onConnError\",\n    value: function onConnError(error) {\n      this.log(\"transport\", error);\n      this.triggerChanError();\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: \"triggerChanError\",\n    value: function triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: \"connectionState\",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return \"connecting\";\n        case SOCKET_STATES.open:\n          return \"open\";\n        case SOCKET_STATES.closing:\n          return \"closing\";\n        default:\n          return \"closed\";\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this.connectionState() === \"open\";\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return c.joinRef() !== channel.joinRef();\n      });\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(topic) {\n      var chanParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var chan = new Channel(topic, chanParams, this);\n      this.channels.push(chan);\n      return chan;\n    }\n  }, {\n    key: \"push\",\n    value: function push(data) {\n      var _this8 = this;\n\n      var topic = data.topic,\n          event = data.event,\n          payload = data.payload,\n          ref = data.ref,\n          join_ref = data.join_ref;\n\n      var callback = function callback() {\n        _this8.encode(data, function (result) {\n          _this8.conn.send(result);\n        });\n      };\n      this.log(\"push\", topic + \" \" + event + \" (\" + join_ref + \", \" + ref + \")\", payload);\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n\n  }, {\n    key: \"makeRef\",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n\n      return this.ref.toString();\n    }\n  }, {\n    key: \"sendHeartbeat\",\n    value: function sendHeartbeat() {\n      if (!this.isConnected()) {\n        return;\n      }\n      if (this.pendingHeartbeatRef) {\n        this.pendingHeartbeatRef = null;\n        this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\");\n        this.conn.close(WS_CLOSE_NORMAL, \"hearbeat timeout\");\n        return;\n      }\n      this.pendingHeartbeatRef = this.makeRef();\n      this.push({ topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef });\n    }\n  }, {\n    key: \"flushSendBuffer\",\n    value: function flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: \"onConnMessage\",\n    value: function onConnMessage(rawMessage) {\n      var _this9 = this;\n\n      this.decode(rawMessage.data, function (msg) {\n        var topic = msg.topic,\n            event = msg.event,\n            payload = msg.payload,\n            ref = msg.ref,\n            join_ref = msg.join_ref;\n\n        if (ref && ref === _this9.pendingHeartbeatRef) {\n          _this9.pendingHeartbeatRef = null;\n        }\n\n        _this9.log(\"receive\", (payload.status || \"\") + \" \" + topic + \" \" + event + \" \" + (ref && \"(\" + ref + \")\" || \"\"), payload);\n        _this9.channels.filter(function (channel) {\n          return channel.isMember(topic, event, payload, join_ref);\n        }).forEach(function (channel) {\n          return channel.trigger(event, payload, ref, join_ref);\n        });\n        _this9.stateChangeCallbacks.message.forEach(function (callback) {\n          return callback(msg);\n        });\n      });\n    }\n  }]);\n\n  return Socket;\n}();\n\nvar LongPoll = exports.LongPoll = function () {\n  function LongPoll(endPoint) {\n    _classCallCheck(this, LongPoll);\n\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function () {}; // noop\n    this.onerror = function () {}; // noop\n    this.onmessage = function () {}; // noop\n    this.onclose = function () {}; // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n\n    this.poll();\n  }\n\n  _createClass(LongPoll, [{\n    key: \"normalizeEndpoint\",\n    value: function normalizeEndpoint(endPoint) {\n      return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n    }\n  }, {\n    key: \"endpointURL\",\n    value: function endpointURL() {\n      return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n    }\n  }, {\n    key: \"closeAndRetry\",\n    value: function closeAndRetry() {\n      this.close();\n      this.readyState = SOCKET_STATES.connecting;\n    }\n  }, {\n    key: \"ontimeout\",\n    value: function ontimeout() {\n      this.onerror(\"timeout\");\n      this.closeAndRetry();\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      var _this10 = this;\n\n      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n        return;\n      }\n\n      Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n        if (resp) {\n          var status = resp.status,\n              token = resp.token,\n              messages = resp.messages;\n\n          _this10.token = token;\n        } else {\n          var status = 0;\n        }\n\n        switch (status) {\n          case 200:\n            messages.forEach(function (msg) {\n              return _this10.onmessage({ data: msg });\n            });\n            _this10.poll();\n            break;\n          case 204:\n            _this10.poll();\n            break;\n          case 410:\n            _this10.readyState = SOCKET_STATES.open;\n            _this10.onopen();\n            _this10.poll();\n            break;\n          case 0:\n          case 500:\n            _this10.onerror();\n            _this10.closeAndRetry();\n            break;\n          default:\n            throw \"unhandled poll status \" + status;\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(body) {\n      var _this11 = this;\n\n      Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), function (resp) {\n        if (!resp || resp.status !== 200) {\n          _this11.onerror(resp && resp.status);\n          _this11.closeAndRetry();\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.readyState = SOCKET_STATES.closed;\n      this.onclose();\n    }\n  }]);\n\n  return LongPoll;\n}();\n\nvar Ajax = exports.Ajax = function () {\n  function Ajax() {\n    _classCallCheck(this, Ajax);\n  }\n\n  _createClass(Ajax, null, [{\n    key: \"request\",\n    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n      if (window.XDomainRequest) {\n        var req = new XDomainRequest(); // IE8, IE9\n        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n      } else {\n        var _req = window.XMLHttpRequest ? new window.XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n        new ActiveXObject(\"Microsoft.XMLHTTP\"); // IE6, IE5\n        this.xhrRequest(_req, method, endPoint, accept, body, timeout, ontimeout, callback);\n      }\n    }\n  }, {\n    key: \"xdomainRequest\",\n    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n      var _this12 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint);\n      req.onload = function () {\n        var response = _this12.parseJSON(req.responseText);\n        callback && callback(response);\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      // Work around bug in IE9 that requires an attached onprogress handler\n      req.onprogress = function () {};\n\n      req.send(body);\n    }\n  }, {\n    key: \"xhrRequest\",\n    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n      var _this13 = this;\n\n      req.open(method, endPoint, true);\n      req.timeout = timeout;\n      req.setRequestHeader(\"Content-Type\", accept);\n      req.onerror = function () {\n        callback && callback(null);\n      };\n      req.onreadystatechange = function () {\n        if (req.readyState === _this13.states.complete && callback) {\n          var response = _this13.parseJSON(req.responseText);\n          callback(response);\n        }\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      req.send(body);\n    }\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(resp) {\n      if (!resp || resp === \"\") {\n        return null;\n      }\n\n      try {\n        return JSON.parse(resp);\n      } catch (e) {\n        console && console.log(\"failed to parse JSON response\", resp);\n        return null;\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(obj, parentKey) {\n      var queryStr = [];\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        var paramKey = parentKey ? parentKey + \"[\" + key + \"]\" : key;\n        var paramVal = obj[key];\n        if ((typeof paramVal === \"undefined\" ? \"undefined\" : _typeof(paramVal)) === \"object\") {\n          queryStr.push(this.serialize(paramVal, paramKey));\n        } else {\n          queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n        }\n      }\n      return queryStr.join(\"&\");\n    }\n  }, {\n    key: \"appendParams\",\n    value: function appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n\n      var prefix = url.match(/\\?/) ? \"&\" : \"?\";\n      return \"\" + url + prefix + this.serialize(params);\n    }\n  }]);\n\n  return Ajax;\n}();\n\nAjax.states = { complete: 4 };\n\nvar Presence = exports.Presence = {\n  syncState: function syncState(currentState, newState, onJoin, onLeave) {\n    var _this14 = this;\n\n    var state = this.clone(currentState);\n    var joins = {};\n    var leaves = {};\n\n    this.map(state, function (key, presence) {\n      if (!newState[key]) {\n        leaves[key] = presence;\n      }\n    });\n    this.map(newState, function (key, newPresence) {\n      var currentPresence = state[key];\n      if (currentPresence) {\n        var newRefs = newPresence.metas.map(function (m) {\n          return m.phx_ref;\n        });\n        var curRefs = currentPresence.metas.map(function (m) {\n          return m.phx_ref;\n        });\n        var joinedMetas = newPresence.metas.filter(function (m) {\n          return curRefs.indexOf(m.phx_ref) < 0;\n        });\n        var leftMetas = currentPresence.metas.filter(function (m) {\n          return newRefs.indexOf(m.phx_ref) < 0;\n        });\n        if (joinedMetas.length > 0) {\n          joins[key] = newPresence;\n          joins[key].metas = joinedMetas;\n        }\n        if (leftMetas.length > 0) {\n          leaves[key] = _this14.clone(currentPresence);\n          leaves[key].metas = leftMetas;\n        }\n      } else {\n        joins[key] = newPresence;\n      }\n    });\n    return this.syncDiff(state, { joins: joins, leaves: leaves }, onJoin, onLeave);\n  },\n  syncDiff: function syncDiff(currentState, _ref2, onJoin, onLeave) {\n    var joins = _ref2.joins,\n        leaves = _ref2.leaves;\n\n    var state = this.clone(currentState);\n    if (!onJoin) {\n      onJoin = function onJoin() {};\n    }\n    if (!onLeave) {\n      onLeave = function onLeave() {};\n    }\n\n    this.map(joins, function (key, newPresence) {\n      var currentPresence = state[key];\n      state[key] = newPresence;\n      if (currentPresence) {\n        var _state$key$metas;\n\n        (_state$key$metas = state[key].metas).unshift.apply(_state$key$metas, _toConsumableArray(currentPresence.metas));\n      }\n      onJoin(key, currentPresence, newPresence);\n    });\n    this.map(leaves, function (key, leftPresence) {\n      var currentPresence = state[key];\n      if (!currentPresence) {\n        return;\n      }\n      var refsToRemove = leftPresence.metas.map(function (m) {\n        return m.phx_ref;\n      });\n      currentPresence.metas = currentPresence.metas.filter(function (p) {\n        return refsToRemove.indexOf(p.phx_ref) < 0;\n      });\n      onLeave(key, currentPresence, leftPresence);\n      if (currentPresence.metas.length === 0) {\n        delete state[key];\n      }\n    });\n    return state;\n  },\n  list: function list(presences, chooser) {\n    if (!chooser) {\n      chooser = function chooser(key, pres) {\n        return pres;\n      };\n    }\n\n    return this.map(presences, function (key, presence) {\n      return chooser(key, presence);\n    });\n  },\n\n\n  // private\n\n  map: function map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map(function (key) {\n      return func(key, obj[key]);\n    });\n  },\n  clone: function clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n};\n\n/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * ## Examples\n *\n * ```javascript\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n * ```\n * @param {Function} callback\n * @param {Function} timerCalc\n */\n\nvar Timer = function () {\n  function Timer(callback, timerCalc) {\n    _classCallCheck(this, Timer);\n\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n\n  _createClass(Timer, [{\n    key: \"reset\",\n    value: function reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n    }\n\n    /**\n     * Cancels any previous scheduleTimeout and schedules callback\n     */\n\n  }, {\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var _this15 = this;\n\n      clearTimeout(this.timer);\n\n      this.timer = setTimeout(function () {\n        _this15.tries = _this15.tries + 1;\n        _this15.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }]);\n\n  return Timer;\n}();\n\n})));\n","var Handlebars = require(\"c:\\\\Users\\\\maneptha\\\\Desktop\\\\foss\\\\burda\\\\front-end\\\\node_modules\\\\handlebars\\\\runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<div>\\n  <style>\\n    .new-app-available {\\n      border: 1px solid #b7b7b7;\\n      padding: 10px;\\n      border-radius: 3px;\\n      color: #ffffffe6;\\n    }\\n\\n    .new-app-available-container {\\n      cursor: pointer;\\n      height: 100%;\\n      width: 100%;\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      opacity: 1;\\n      background: #fdfdfdc2;\\n      display: flex;\\n      justify-content: center;\\n      align-items: flex-end;\\n    }\\n\\n  </style>\\n\\n  <div id=\\\"new-app-available-container\\\" class=\\\"new-app-available-container\\\">\\n    <div class=\\\"ui green inverted menu new-app-available\\\">\\n      New content is available; please click to refresh.\\n    </div>\\n  </div>\\n</div>\\n\";\n},\"useData\":true});","// Create a simple path alias to allow browserify to resolve\n// the runtime on a supported path.\nmodule.exports = require('./dist/cjs/handlebars.runtime')['default'];\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _handlebarsBase = require('./handlebars/base');\n\nvar base = _interopRequireWildcard(_handlebarsBase);\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\n\nvar _handlebarsSafeString = require('./handlebars/safe-string');\n\nvar _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);\n\nvar _handlebarsException = require('./handlebars/exception');\n\nvar _handlebarsException2 = _interopRequireDefault(_handlebarsException);\n\nvar _handlebarsUtils = require('./handlebars/utils');\n\nvar Utils = _interopRequireWildcard(_handlebarsUtils);\n\nvar _handlebarsRuntime = require('./handlebars/runtime');\n\nvar runtime = _interopRequireWildcard(_handlebarsRuntime);\n\nvar _handlebarsNoConflict = require('./handlebars/no-conflict');\n\nvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  var hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = _handlebarsSafeString2['default'];\n  hb.Exception = _handlebarsException2['default'];\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function (spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nvar inst = create();\ninst.create = create;\n\n_handlebarsNoConflict2['default'](inst);\n\ninst['default'] = inst;\n\nexports['default'] = inst;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLnJ1bnRpbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OEJBQXNCLG1CQUFtQjs7SUFBN0IsSUFBSTs7Ozs7b0NBSU8sMEJBQTBCOzs7O21DQUMzQix3QkFBd0I7Ozs7K0JBQ3ZCLG9CQUFvQjs7SUFBL0IsS0FBSzs7aUNBQ1Esc0JBQXNCOztJQUFuQyxPQUFPOztvQ0FFSSwwQkFBMEI7Ozs7O0FBR2pELFNBQVMsTUFBTSxHQUFHO0FBQ2hCLE1BQUksRUFBRSxHQUFHLElBQUksSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7O0FBRTFDLE9BQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3ZCLElBQUUsQ0FBQyxVQUFVLG9DQUFhLENBQUM7QUFDM0IsSUFBRSxDQUFDLFNBQVMsbUNBQVksQ0FBQztBQUN6QixJQUFFLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUNqQixJQUFFLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDLGdCQUFnQixDQUFDOztBQUU3QyxJQUFFLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztBQUNoQixJQUFFLENBQUMsUUFBUSxHQUFHLFVBQVMsSUFBSSxFQUFFO0FBQzNCLFdBQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7R0FDbkMsQ0FBQzs7QUFFRixTQUFPLEVBQUUsQ0FBQztDQUNYOztBQUVELElBQUksSUFBSSxHQUFHLE1BQU0sRUFBRSxDQUFDO0FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDOztBQUVyQixrQ0FBVyxJQUFJLENBQUMsQ0FBQzs7QUFFakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQzs7cUJBRVIsSUFBSSIsImZpbGUiOiJoYW5kbGViYXJzLnJ1bnRpbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBiYXNlIGZyb20gJy4vaGFuZGxlYmFycy9iYXNlJztcblxuLy8gRWFjaCBvZiB0aGVzZSBhdWdtZW50IHRoZSBIYW5kbGViYXJzIG9iamVjdC4gTm8gbmVlZCB0byBzZXR1cCBoZXJlLlxuLy8gKFRoaXMgaXMgZG9uZSB0byBlYXNpbHkgc2hhcmUgY29kZSBiZXR3ZWVuIGNvbW1vbmpzIGFuZCBicm93c2UgZW52cylcbmltcG9ydCBTYWZlU3RyaW5nIGZyb20gJy4vaGFuZGxlYmFycy9zYWZlLXN0cmluZyc7XG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4vaGFuZGxlYmFycy9leGNlcHRpb24nO1xuaW1wb3J0ICogYXMgVXRpbHMgZnJvbSAnLi9oYW5kbGViYXJzL3V0aWxzJztcbmltcG9ydCAqIGFzIHJ1bnRpbWUgZnJvbSAnLi9oYW5kbGViYXJzL3J1bnRpbWUnO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG4vLyBGb3IgY29tcGF0aWJpbGl0eSBhbmQgdXNhZ2Ugb3V0c2lkZSBvZiBtb2R1bGUgc3lzdGVtcywgbWFrZSB0aGUgSGFuZGxlYmFycyBvYmplY3QgYSBuYW1lc3BhY2VcbmZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgbGV0IGhiID0gbmV3IGJhc2UuSGFuZGxlYmFyc0Vudmlyb25tZW50KCk7XG5cbiAgVXRpbHMuZXh0ZW5kKGhiLCBiYXNlKTtcbiAgaGIuU2FmZVN0cmluZyA9IFNhZmVTdHJpbmc7XG4gIGhiLkV4Y2VwdGlvbiA9IEV4Y2VwdGlvbjtcbiAgaGIuVXRpbHMgPSBVdGlscztcbiAgaGIuZXNjYXBlRXhwcmVzc2lvbiA9IFV0aWxzLmVzY2FwZUV4cHJlc3Npb247XG5cbiAgaGIuVk0gPSBydW50aW1lO1xuICBoYi50ZW1wbGF0ZSA9IGZ1bmN0aW9uKHNwZWMpIHtcbiAgICByZXR1cm4gcnVudGltZS50ZW1wbGF0ZShzcGVjLCBoYik7XG4gIH07XG5cbiAgcmV0dXJuIGhiO1xufVxuXG5sZXQgaW5zdCA9IGNyZWF0ZSgpO1xuaW5zdC5jcmVhdGUgPSBjcmVhdGU7XG5cbm5vQ29uZmxpY3QoaW5zdCk7XG5cbmluc3RbJ2RlZmF1bHQnXSA9IGluc3Q7XG5cbmV4cG9ydCBkZWZhdWx0IGluc3Q7XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\nexports.registerDefaultHelpers = registerDefaultHelpers;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _helpersBlockHelperMissing = require('./helpers/block-helper-missing');\n\nvar _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);\n\nvar _helpersEach = require('./helpers/each');\n\nvar _helpersEach2 = _interopRequireDefault(_helpersEach);\n\nvar _helpersHelperMissing = require('./helpers/helper-missing');\n\nvar _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);\n\nvar _helpersIf = require('./helpers/if');\n\nvar _helpersIf2 = _interopRequireDefault(_helpersIf);\n\nvar _helpersLog = require('./helpers/log');\n\nvar _helpersLog2 = _interopRequireDefault(_helpersLog);\n\nvar _helpersLookup = require('./helpers/lookup');\n\nvar _helpersLookup2 = _interopRequireDefault(_helpersLookup);\n\nvar _helpersWith = require('./helpers/with');\n\nvar _helpersWith2 = _interopRequireDefault(_helpersWith);\n\nfunction registerDefaultHelpers(instance) {\n  _helpersBlockHelperMissing2['default'](instance);\n  _helpersEach2['default'](instance);\n  _helpersHelperMissing2['default'](instance);\n  _helpersIf2['default'](instance);\n  _helpersLog2['default'](instance);\n  _helpersLookup2['default'](instance);\n  _helpersWith2['default'](instance);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7eUNBQXVDLGdDQUFnQzs7OzsyQkFDOUMsZ0JBQWdCOzs7O29DQUNQLDBCQUEwQjs7Ozt5QkFDckMsY0FBYzs7OzswQkFDYixlQUFlOzs7OzZCQUNaLGtCQUFrQjs7OzsyQkFDcEIsZ0JBQWdCOzs7O0FBRWxDLFNBQVMsc0JBQXNCLENBQUMsUUFBUSxFQUFFO0FBQy9DLHlDQUEyQixRQUFRLENBQUMsQ0FBQztBQUNyQywyQkFBYSxRQUFRLENBQUMsQ0FBQztBQUN2QixvQ0FBc0IsUUFBUSxDQUFDLENBQUM7QUFDaEMseUJBQVcsUUFBUSxDQUFDLENBQUM7QUFDckIsMEJBQVksUUFBUSxDQUFDLENBQUM7QUFDdEIsNkJBQWUsUUFBUSxDQUFDLENBQUM7QUFDekIsMkJBQWEsUUFBUSxDQUFDLENBQUM7Q0FDeEIiLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZWdpc3RlckJsb2NrSGVscGVyTWlzc2luZyBmcm9tICcuL2hlbHBlcnMvYmxvY2staGVscGVyLW1pc3NpbmcnO1xuaW1wb3J0IHJlZ2lzdGVyRWFjaCBmcm9tICcuL2hlbHBlcnMvZWFjaCc7XG5pbXBvcnQgcmVnaXN0ZXJIZWxwZXJNaXNzaW5nIGZyb20gJy4vaGVscGVycy9oZWxwZXItbWlzc2luZyc7XG5pbXBvcnQgcmVnaXN0ZXJJZiBmcm9tICcuL2hlbHBlcnMvaWYnO1xuaW1wb3J0IHJlZ2lzdGVyTG9nIGZyb20gJy4vaGVscGVycy9sb2cnO1xuaW1wb3J0IHJlZ2lzdGVyTG9va3VwIGZyb20gJy4vaGVscGVycy9sb29rdXAnO1xuaW1wb3J0IHJlZ2lzdGVyV2l0aCBmcm9tICcuL2hlbHBlcnMvd2l0aCc7XG5cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlckRlZmF1bHRIZWxwZXJzKGluc3RhbmNlKSB7XG4gIHJlZ2lzdGVyQmxvY2tIZWxwZXJNaXNzaW5nKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJFYWNoKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJIZWxwZXJNaXNzaW5nKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJJZihpbnN0YW5jZSk7XG4gIHJlZ2lzdGVyTG9nKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJMb29rdXAoaW5zdGFuY2UpO1xuICByZWdpc3RlcldpdGgoaW5zdGFuY2UpO1xufVxuIl19\n","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nexports['default'] = function (instance) {\n  instance.registerHelper('blockHelperMissing', function (context, options) {\n    var inverse = options.inverse,\n        fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (_utils.isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        var data = _utils.createFrame(options.data);\n        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvYmxvY2staGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztxQkFBc0QsVUFBVTs7cUJBRWpELFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsb0JBQW9CLEVBQUUsVUFBUyxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ3ZFLFFBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPO1FBQ3pCLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUVwQixRQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7QUFDcEIsYUFBTyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDakIsTUFBTSxJQUFJLE9BQU8sS0FBSyxLQUFLLElBQUksT0FBTyxJQUFJLElBQUksRUFBRTtBQUMvQyxhQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN0QixNQUFNLElBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUMzQixVQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0FBQ3RCLFlBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUNmLGlCQUFPLENBQUMsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzlCOztBQUVELGVBQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO09BQ2hELE1BQU07QUFDTCxlQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztPQUN0QjtLQUNGLE1BQU07QUFDTCxVQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixZQUFJLElBQUksR0FBRyxtQkFBWSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDckMsWUFBSSxDQUFDLFdBQVcsR0FBRyx5QkFBa0IsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzdFLGVBQU8sR0FBRyxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUMsQ0FBQztPQUN4Qjs7QUFFRCxhQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDN0I7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJibG9jay1oZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YXBwZW5kQ29udGV4dFBhdGgsIGNyZWF0ZUZyYW1lLCBpc0FycmF5fSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdibG9ja0hlbHBlck1pc3NpbmcnLCBmdW5jdGlvbihjb250ZXh0LCBvcHRpb25zKSB7XG4gICAgbGV0IGludmVyc2UgPSBvcHRpb25zLmludmVyc2UsXG4gICAgICAgIGZuID0gb3B0aW9ucy5mbjtcblxuICAgIGlmIChjb250ZXh0ID09PSB0cnVlKSB7XG4gICAgICByZXR1cm4gZm4odGhpcyk7XG4gICAgfSBlbHNlIGlmIChjb250ZXh0ID09PSBmYWxzZSB8fCBjb250ZXh0ID09IG51bGwpIHtcbiAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheShjb250ZXh0KSkge1xuICAgICAgaWYgKGNvbnRleHQubGVuZ3RoID4gMCkge1xuICAgICAgICBpZiAob3B0aW9ucy5pZHMpIHtcbiAgICAgICAgICBvcHRpb25zLmlkcyA9IFtvcHRpb25zLm5hbWVdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGluc3RhbmNlLmhlbHBlcnMuZWFjaChjb250ZXh0LCBvcHRpb25zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuaWRzKSB7XG4gICAgICAgIGxldCBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCwgb3B0aW9ucy5uYW1lKTtcbiAgICAgICAgb3B0aW9ucyA9IHtkYXRhOiBkYXRhfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZuKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgIH1cbiAgfSk7XG59XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = require('../utils');\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('each', function (context, options) {\n    if (!options) {\n      throw new _exception2['default']('Must pass iterator to #each');\n    }\n\n    var fn = options.fn,\n        inverse = options.inverse,\n        i = 0,\n        ret = '',\n        data = undefined,\n        contextPath = undefined;\n\n    if (options.data && options.ids) {\n      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (_utils.isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = _utils.createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret = ret + fn(context[field], {\n        data: data,\n        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])\n      });\n    }\n\n    if (context && typeof context === 'object') {\n      if (_utils.isArray(context)) {\n        for (var j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else {\n        var priorKey = undefined;\n\n        for (var key in context) {\n          if (context.hasOwnProperty(key)) {\n            // We're running the iterations one step out of sync so we can detect\n            // the last iteration without have to scan the object twice and create\n            // an itermediate keys array.\n            if (priorKey !== undefined) {\n              execIteration(priorKey, i - 1);\n            }\n            priorKey = key;\n            i++;\n          }\n        }\n        if (priorKey !== undefined) {\n          execIteration(priorKey, i - 1, true);\n        }\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvZWFjaC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQUErRSxVQUFVOzt5QkFDbkUsY0FBYzs7OztxQkFFckIsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsVUFBUyxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ3pELFFBQUksQ0FBQyxPQUFPLEVBQUU7QUFDWixZQUFNLDJCQUFjLDZCQUE2QixDQUFDLENBQUM7S0FDcEQ7O0FBRUQsUUFBSSxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUU7UUFDZixPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU87UUFDekIsQ0FBQyxHQUFHLENBQUM7UUFDTCxHQUFHLEdBQUcsRUFBRTtRQUNSLElBQUksWUFBQTtRQUNKLFdBQVcsWUFBQSxDQUFDOztBQUVoQixRQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixpQkFBVyxHQUFHLHlCQUFrQixPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO0tBQ2pGOztBQUVELFFBQUksa0JBQVcsT0FBTyxDQUFDLEVBQUU7QUFBRSxhQUFPLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUFFOztBQUUxRCxRQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUU7QUFDaEIsVUFBSSxHQUFHLG1CQUFZLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNsQzs7QUFFRCxhQUFTLGFBQWEsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtBQUN6QyxVQUFJLElBQUksRUFBRTtBQUNSLFlBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDO0FBQ2pCLFlBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBQ25CLFlBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxLQUFLLENBQUMsQ0FBQztBQUN6QixZQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7O0FBRW5CLFlBQUksV0FBVyxFQUFFO0FBQ2YsY0FBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLEdBQUcsS0FBSyxDQUFDO1NBQ3hDO09BQ0Y7O0FBRUQsU0FBRyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQzdCLFlBQUksRUFBRSxJQUFJO0FBQ1YsbUJBQVcsRUFBRSxtQkFBWSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxLQUFLLENBQUMsRUFBRSxDQUFDLFdBQVcsR0FBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7T0FDL0UsQ0FBQyxDQUFDO0tBQ0o7O0FBRUQsUUFBSSxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO0FBQzFDLFVBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUNwQixhQUFLLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN2QyxjQUFJLENBQUMsSUFBSSxPQUFPLEVBQUU7QUFDaEIseUJBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1dBQy9DO1NBQ0Y7T0FDRixNQUFNO0FBQ0wsWUFBSSxRQUFRLFlBQUEsQ0FBQzs7QUFFYixhQUFLLElBQUksR0FBRyxJQUFJLE9BQU8sRUFBRTtBQUN2QixjQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUU7Ozs7QUFJL0IsZ0JBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtBQUMxQiwyQkFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDaEM7QUFDRCxvQkFBUSxHQUFHLEdBQUcsQ0FBQztBQUNmLGFBQUMsRUFBRSxDQUFDO1dBQ0w7U0FDRjtBQUNELFlBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtBQUMxQix1QkFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3RDO09BQ0Y7S0FDRjs7QUFFRCxRQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDWCxTQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3JCOztBQUVELFdBQU8sR0FBRyxDQUFDO0dBQ1osQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoiZWFjaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YXBwZW5kQ29udGV4dFBhdGgsIGJsb2NrUGFyYW1zLCBjcmVhdGVGcmFtZSwgaXNBcnJheSwgaXNGdW5jdGlvbn0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuLi9leGNlcHRpb24nO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignZWFjaCcsIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ011c3QgcGFzcyBpdGVyYXRvciB0byAjZWFjaCcpO1xuICAgIH1cblxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm4sXG4gICAgICAgIGludmVyc2UgPSBvcHRpb25zLmludmVyc2UsXG4gICAgICAgIGkgPSAwLFxuICAgICAgICByZXQgPSAnJyxcbiAgICAgICAgZGF0YSxcbiAgICAgICAgY29udGV4dFBhdGg7XG5cbiAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuaWRzKSB7XG4gICAgICBjb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCwgb3B0aW9ucy5pZHNbMF0pICsgJy4nO1xuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uKGNvbnRleHQpKSB7IGNvbnRleHQgPSBjb250ZXh0LmNhbGwodGhpcyk7IH1cblxuICAgIGlmIChvcHRpb25zLmRhdGEpIHtcbiAgICAgIGRhdGEgPSBjcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGV4ZWNJdGVyYXRpb24oZmllbGQsIGluZGV4LCBsYXN0KSB7XG4gICAgICBpZiAoZGF0YSkge1xuICAgICAgICBkYXRhLmtleSA9IGZpZWxkO1xuICAgICAgICBkYXRhLmluZGV4ID0gaW5kZXg7XG4gICAgICAgIGRhdGEuZmlyc3QgPSBpbmRleCA9PT0gMDtcbiAgICAgICAgZGF0YS5sYXN0ID0gISFsYXN0O1xuXG4gICAgICAgIGlmIChjb250ZXh0UGF0aCkge1xuICAgICAgICAgIGRhdGEuY29udGV4dFBhdGggPSBjb250ZXh0UGF0aCArIGZpZWxkO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldCA9IHJldCArIGZuKGNvbnRleHRbZmllbGRdLCB7XG4gICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgIGJsb2NrUGFyYW1zOiBibG9ja1BhcmFtcyhbY29udGV4dFtmaWVsZF0sIGZpZWxkXSwgW2NvbnRleHRQYXRoICsgZmllbGQsIG51bGxdKVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKGNvbnRleHQgJiYgdHlwZW9mIGNvbnRleHQgPT09ICdvYmplY3QnKSB7XG4gICAgICBpZiAoaXNBcnJheShjb250ZXh0KSkge1xuICAgICAgICBmb3IgKGxldCBqID0gY29udGV4dC5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgICBpZiAoaSBpbiBjb250ZXh0KSB7XG4gICAgICAgICAgICBleGVjSXRlcmF0aW9uKGksIGksIGkgPT09IGNvbnRleHQubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgcHJpb3JLZXk7XG5cbiAgICAgICAgZm9yIChsZXQga2V5IGluIGNvbnRleHQpIHtcbiAgICAgICAgICBpZiAoY29udGV4dC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAvLyBXZSdyZSBydW5uaW5nIHRoZSBpdGVyYXRpb25zIG9uZSBzdGVwIG91dCBvZiBzeW5jIHNvIHdlIGNhbiBkZXRlY3RcbiAgICAgICAgICAgIC8vIHRoZSBsYXN0IGl0ZXJhdGlvbiB3aXRob3V0IGhhdmUgdG8gc2NhbiB0aGUgb2JqZWN0IHR3aWNlIGFuZCBjcmVhdGVcbiAgICAgICAgICAgIC8vIGFuIGl0ZXJtZWRpYXRlIGtleXMgYXJyYXkuXG4gICAgICAgICAgICBpZiAocHJpb3JLZXkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICBleGVjSXRlcmF0aW9uKHByaW9yS2V5LCBpIC0gMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcmlvcktleSA9IGtleTtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByaW9yS2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBleGVjSXRlcmF0aW9uKHByaW9yS2V5LCBpIC0gMSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgcmV0ID0gaW52ZXJzZSh0aGlzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('helperMissing', function () /* [args, ]options */{\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new _exception2['default']('Missing helper: \"' + arguments[arguments.length - 1].name + '\"');\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozt5QkFBc0IsY0FBYzs7OztxQkFFckIsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLEVBQUUsaUNBQWdDO0FBQ3ZFLFFBQUksU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7O0FBRTFCLGFBQU8sU0FBUyxDQUFDO0tBQ2xCLE1BQU07O0FBRUwsWUFBTSwyQkFBYyxtQkFBbUIsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7S0FDdkY7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJoZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi4vZXhjZXB0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2hlbHBlck1pc3NpbmcnLCBmdW5jdGlvbigvKiBbYXJncywgXW9wdGlvbnMgKi8pIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgLy8gQSBtaXNzaW5nIGZpZWxkIGluIGEge3tmb299fSBjb25zdHJ1Y3QuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTb21lb25lIGlzIGFjdHVhbGx5IHRyeWluZyB0byBjYWxsIHNvbWV0aGluZywgYmxvdyB1cC5cbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ01pc3NpbmcgaGVscGVyOiBcIicgKyBhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdLm5hbWUgKyAnXCInKTtcbiAgICB9XG4gIH0pO1xufVxuIl19\n","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nexports['default'] = function (instance) {\n  instance.registerHelper('if', function (conditional, options) {\n    if (_utils.isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function (conditional, options) {\n    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaWYuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztxQkFBa0MsVUFBVTs7cUJBRTdCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLFVBQVMsV0FBVyxFQUFFLE9BQU8sRUFBRTtBQUMzRCxRQUFJLGtCQUFXLFdBQVcsQ0FBQyxFQUFFO0FBQUUsaUJBQVcsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQUU7Ozs7O0FBS3RFLFFBQUksQUFBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsV0FBVyxJQUFLLGVBQVEsV0FBVyxDQUFDLEVBQUU7QUFDdkUsYUFBTyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCLE1BQU07QUFDTCxhQUFPLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDekI7R0FDRixDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxXQUFXLEVBQUUsT0FBTyxFQUFFO0FBQy9ELFdBQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFdBQVcsRUFBRSxFQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSSxFQUFDLENBQUMsQ0FBQztHQUN2SCxDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJpZi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aXNFbXB0eSwgaXNGdW5jdGlvbn0gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignaWYnLCBmdW5jdGlvbihjb25kaXRpb25hbCwgb3B0aW9ucykge1xuICAgIGlmIChpc0Z1bmN0aW9uKGNvbmRpdGlvbmFsKSkgeyBjb25kaXRpb25hbCA9IGNvbmRpdGlvbmFsLmNhbGwodGhpcyk7IH1cblxuICAgIC8vIERlZmF1bHQgYmVoYXZpb3IgaXMgdG8gcmVuZGVyIHRoZSBwb3NpdGl2ZSBwYXRoIGlmIHRoZSB2YWx1ZSBpcyB0cnV0aHkgYW5kIG5vdCBlbXB0eS5cbiAgICAvLyBUaGUgYGluY2x1ZGVaZXJvYCBvcHRpb24gbWF5IGJlIHNldCB0byB0cmVhdCB0aGUgY29uZHRpb25hbCBhcyBwdXJlbHkgbm90IGVtcHR5IGJhc2VkIG9uIHRoZVxuICAgIC8vIGJlaGF2aW9yIG9mIGlzRW1wdHkuIEVmZmVjdGl2ZWx5IHRoaXMgZGV0ZXJtaW5lcyBpZiAwIGlzIGhhbmRsZWQgYnkgdGhlIHBvc2l0aXZlIHBhdGggb3IgbmVnYXRpdmUuXG4gICAgaWYgKCghb3B0aW9ucy5oYXNoLmluY2x1ZGVaZXJvICYmICFjb25kaXRpb25hbCkgfHwgaXNFbXB0eShjb25kaXRpb25hbCkpIHtcbiAgICAgIHJldHVybiBvcHRpb25zLmludmVyc2UodGhpcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBvcHRpb25zLmZuKHRoaXMpO1xuICAgIH1cbiAgfSk7XG5cbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ3VubGVzcycsIGZ1bmN0aW9uKGNvbmRpdGlvbmFsLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGluc3RhbmNlLmhlbHBlcnNbJ2lmJ10uY2FsbCh0aGlzLCBjb25kaXRpb25hbCwge2ZuOiBvcHRpb25zLmludmVyc2UsIGludmVyc2U6IG9wdGlvbnMuZm4sIGhhc2g6IG9wdGlvbnMuaGFzaH0pO1xuICB9KTtcbn1cbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (instance) {\n  instance.registerHelper('log', function () /* message, options */{\n    var args = [undefined],\n        options = arguments[arguments.length - 1];\n    for (var i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    var level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log.apply(instance, args);\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsa0NBQWlDO0FBQzlELFFBQUksSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDO1FBQ2xCLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM5QyxTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDN0MsVUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN6Qjs7QUFFRCxRQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7QUFDZCxRQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksRUFBRTtBQUM5QixXQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7S0FDNUIsTUFBTSxJQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFO0FBQ3JELFdBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztLQUM1QjtBQUNELFFBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7O0FBRWhCLFlBQVEsQ0FBQyxHQUFHLE1BQUEsQ0FBWixRQUFRLEVBQVMsSUFBSSxDQUFDLENBQUM7R0FDeEIsQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoibG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2xvZycsIGZ1bmN0aW9uKC8qIG1lc3NhZ2UsIG9wdGlvbnMgKi8pIHtcbiAgICBsZXQgYXJncyA9IFt1bmRlZmluZWRdLFxuICAgICAgICBvcHRpb25zID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgIGFyZ3MucHVzaChhcmd1bWVudHNbaV0pO1xuICAgIH1cblxuICAgIGxldCBsZXZlbCA9IDE7XG4gICAgaWYgKG9wdGlvbnMuaGFzaC5sZXZlbCAhPSBudWxsKSB7XG4gICAgICBsZXZlbCA9IG9wdGlvbnMuaGFzaC5sZXZlbDtcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMuZGF0YSAmJiBvcHRpb25zLmRhdGEubGV2ZWwgIT0gbnVsbCkge1xuICAgICAgbGV2ZWwgPSBvcHRpb25zLmRhdGEubGV2ZWw7XG4gICAgfVxuICAgIGFyZ3NbMF0gPSBsZXZlbDtcblxuICAgIGluc3RhbmNlLmxvZyguLi4gYXJncyk7XG4gIH0pO1xufVxuIl19\n","'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (instance) {\n  instance.registerHelper('lookup', function (obj, field) {\n    return obj && obj[field];\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9va3VwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxHQUFHLEVBQUUsS0FBSyxFQUFFO0FBQ3JELFdBQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztHQUMxQixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJsb29rdXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignbG9va3VwJywgZnVuY3Rpb24ob2JqLCBmaWVsZCkge1xuICAgIHJldHVybiBvYmogJiYgb2JqW2ZpZWxkXTtcbiAgfSk7XG59XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nexports['default'] = function (instance) {\n  instance.registerHelper('with', function (context, options) {\n    if (_utils.isFunction(context)) {\n      context = context.call(this);\n    }\n\n    var fn = options.fn;\n\n    if (!_utils.isEmpty(context)) {\n      var data = options.data;\n      if (options.data && options.ids) {\n        data = _utils.createFrame(options.data);\n        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: _utils.blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvd2l0aC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O3FCQUErRSxVQUFVOztxQkFFMUUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsVUFBUyxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ3pELFFBQUksa0JBQVcsT0FBTyxDQUFDLEVBQUU7QUFBRSxhQUFPLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUFFOztBQUUxRCxRQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUVwQixRQUFJLENBQUMsZUFBUSxPQUFPLENBQUMsRUFBRTtBQUNyQixVQUFJLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO0FBQ3hCLFVBQUksT0FBTyxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsR0FBRyxFQUFFO0FBQy9CLFlBQUksR0FBRyxtQkFBWSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDakMsWUFBSSxDQUFDLFdBQVcsR0FBRyx5QkFBa0IsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO09BQ2hGOztBQUVELGFBQU8sRUFBRSxDQUFDLE9BQU8sRUFBRTtBQUNqQixZQUFJLEVBQUUsSUFBSTtBQUNWLG1CQUFXLEVBQUUsbUJBQVksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7T0FDaEUsQ0FBQyxDQUFDO0tBQ0osTUFBTTtBQUNMLGFBQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUM5QjtHQUNGLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6IndpdGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2FwcGVuZENvbnRleHRQYXRoLCBibG9ja1BhcmFtcywgY3JlYXRlRnJhbWUsIGlzRW1wdHksIGlzRnVuY3Rpb259IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ3dpdGgnLCBmdW5jdGlvbihjb250ZXh0LCBvcHRpb25zKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24oY29udGV4dCkpIHsgY29udGV4dCA9IGNvbnRleHQuY2FsbCh0aGlzKTsgfVxuXG4gICAgbGV0IGZuID0gb3B0aW9ucy5mbjtcblxuICAgIGlmICghaXNFbXB0eShjb250ZXh0KSkge1xuICAgICAgbGV0IGRhdGEgPSBvcHRpb25zLmRhdGE7XG4gICAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuaWRzKSB7XG4gICAgICAgIGRhdGEgPSBjcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO1xuICAgICAgICBkYXRhLmNvbnRleHRQYXRoID0gYXBwZW5kQ29udGV4dFBhdGgob3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoLCBvcHRpb25zLmlkc1swXSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmbihjb250ZXh0LCB7XG4gICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgIGJsb2NrUGFyYW1zOiBibG9ja1BhcmFtcyhbY29udGV4dF0sIFtkYXRhICYmIGRhdGEuY29udGV4dFBhdGhdKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBvcHRpb25zLmludmVyc2UodGhpcyk7XG4gICAgfVxuICB9KTtcbn1cbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\nexports.registerDefaultDecorators = registerDefaultDecorators;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _decoratorsInline = require('./decorators/inline');\n\nvar _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);\n\nfunction registerDefaultDecorators(instance) {\n  _decoratorsInline2['default'](instance);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Z0NBQTJCLHFCQUFxQjs7OztBQUV6QyxTQUFTLHlCQUF5QixDQUFDLFFBQVEsRUFBRTtBQUNsRCxnQ0FBZSxRQUFRLENBQUMsQ0FBQztDQUMxQiIsImZpbGUiOiJkZWNvcmF0b3JzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2lzdGVySW5saW5lIGZyb20gJy4vZGVjb3JhdG9ycy9pbmxpbmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJEZWZhdWx0RGVjb3JhdG9ycyhpbnN0YW5jZSkge1xuICByZWdpc3RlcklubGluZShpbnN0YW5jZSk7XG59XG5cbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nexports['default'] = function (instance) {\n  instance.registerDecorator('inline', function (fn, props, container, options) {\n    var ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function (context, options) {\n        // Create a new partials stack frame prior to exec.\n        var original = container.partials;\n        container.partials = _utils.extend({}, original, props.partials);\n        var ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMvaW5saW5lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQXFCLFVBQVU7O3FCQUVoQixVQUFTLFFBQVEsRUFBRTtBQUNoQyxVQUFRLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFVBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFO0FBQzNFLFFBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQztBQUNiLFFBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO0FBQ25CLFdBQUssQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0FBQ3BCLFNBQUcsR0FBRyxVQUFTLE9BQU8sRUFBRSxPQUFPLEVBQUU7O0FBRS9CLFlBQUksUUFBUSxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUM7QUFDbEMsaUJBQVMsQ0FBQyxRQUFRLEdBQUcsY0FBTyxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxRCxZQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQy9CLGlCQUFTLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUM5QixlQUFPLEdBQUcsQ0FBQztPQUNaLENBQUM7S0FDSDs7QUFFRCxTQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUU3QyxXQUFPLEdBQUcsQ0FBQztHQUNaLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6ImlubGluZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZXh0ZW5kfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVyRGVjb3JhdG9yKCdpbmxpbmUnLCBmdW5jdGlvbihmbiwgcHJvcHMsIGNvbnRhaW5lciwgb3B0aW9ucykge1xuICAgIGxldCByZXQgPSBmbjtcbiAgICBpZiAoIXByb3BzLnBhcnRpYWxzKSB7XG4gICAgICBwcm9wcy5wYXJ0aWFscyA9IHt9O1xuICAgICAgcmV0ID0gZnVuY3Rpb24oY29udGV4dCwgb3B0aW9ucykge1xuICAgICAgICAvLyBDcmVhdGUgYSBuZXcgcGFydGlhbHMgc3RhY2sgZnJhbWUgcHJpb3IgdG8gZXhlYy5cbiAgICAgICAgbGV0IG9yaWdpbmFsID0gY29udGFpbmVyLnBhcnRpYWxzO1xuICAgICAgICBjb250YWluZXIucGFydGlhbHMgPSBleHRlbmQoe30sIG9yaWdpbmFsLCBwcm9wcy5wYXJ0aWFscyk7XG4gICAgICAgIGxldCByZXQgPSBmbihjb250ZXh0LCBvcHRpb25zKTtcbiAgICAgICAgY29udGFpbmVyLnBhcnRpYWxzID0gb3JpZ2luYWw7XG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgICB9O1xuICAgIH1cblxuICAgIHByb3BzLnBhcnRpYWxzW29wdGlvbnMuYXJnc1swXV0gPSBvcHRpb25zLmZuO1xuXG4gICAgcmV0dXJuIHJldDtcbiAgfSk7XG59XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('./utils');\n\nvar logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function lookupLevel(level) {\n    if (typeof level === 'string') {\n      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function log(level) {\n    level = logger.lookupLevel(level);\n\n    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {\n      var method = logger.methodMap[level];\n      if (!console[method]) {\n        // eslint-disable-line no-console\n        method = 'log';\n      }\n\n      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        message[_key - 1] = arguments[_key];\n      }\n\n      console[method].apply(console, message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexports['default'] = logger;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2xvZ2dlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O3FCQUFzQixTQUFTOztBQUUvQixJQUFJLE1BQU0sR0FBRztBQUNYLFdBQVMsRUFBRSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQztBQUM3QyxPQUFLLEVBQUUsTUFBTTs7O0FBR2IsYUFBVyxFQUFFLHFCQUFTLEtBQUssRUFBRTtBQUMzQixRQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtBQUM3QixVQUFJLFFBQVEsR0FBRyxlQUFRLE1BQU0sQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDOUQsVUFBSSxRQUFRLElBQUksQ0FBQyxFQUFFO0FBQ2pCLGFBQUssR0FBRyxRQUFRLENBQUM7T0FDbEIsTUFBTTtBQUNMLGFBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO09BQzdCO0tBQ0Y7O0FBRUQsV0FBTyxLQUFLLENBQUM7R0FDZDs7O0FBR0QsS0FBRyxFQUFFLGFBQVMsS0FBSyxFQUFjO0FBQy9CLFNBQUssR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDOztBQUVsQyxRQUFJLE9BQU8sT0FBTyxLQUFLLFdBQVcsSUFBSSxNQUFNLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLEVBQUU7QUFDL0UsVUFBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNyQyxVQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFOztBQUNwQixjQUFNLEdBQUcsS0FBSyxDQUFDO09BQ2hCOzt3Q0FQbUIsT0FBTztBQUFQLGVBQU87OztBQVEzQixhQUFPLENBQUMsTUFBTSxPQUFDLENBQWYsT0FBTyxFQUFZLE9BQU8sQ0FBQyxDQUFDO0tBQzdCO0dBQ0Y7Q0FDRixDQUFDOztxQkFFYSxNQUFNIiwiZmlsZSI6ImxvZ2dlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aW5kZXhPZn0gZnJvbSAnLi91dGlscyc7XG5cbmxldCBsb2dnZXIgPSB7XG4gIG1ldGhvZE1hcDogWydkZWJ1ZycsICdpbmZvJywgJ3dhcm4nLCAnZXJyb3InXSxcbiAgbGV2ZWw6ICdpbmZvJyxcblxuICAvLyBNYXBzIGEgZ2l2ZW4gbGV2ZWwgdmFsdWUgdG8gdGhlIGBtZXRob2RNYXBgIGluZGV4ZXMgYWJvdmUuXG4gIGxvb2t1cExldmVsOiBmdW5jdGlvbihsZXZlbCkge1xuICAgIGlmICh0eXBlb2YgbGV2ZWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICBsZXQgbGV2ZWxNYXAgPSBpbmRleE9mKGxvZ2dlci5tZXRob2RNYXAsIGxldmVsLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgaWYgKGxldmVsTWFwID49IDApIHtcbiAgICAgICAgbGV2ZWwgPSBsZXZlbE1hcDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldmVsID0gcGFyc2VJbnQobGV2ZWwsIDEwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbGV2ZWw7XG4gIH0sXG5cbiAgLy8gQ2FuIGJlIG92ZXJyaWRkZW4gaW4gdGhlIGhvc3QgZW52aXJvbm1lbnRcbiAgbG9nOiBmdW5jdGlvbihsZXZlbCwgLi4ubWVzc2FnZSkge1xuICAgIGxldmVsID0gbG9nZ2VyLmxvb2t1cExldmVsKGxldmVsKTtcblxuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbG9nZ2VyLmxvb2t1cExldmVsKGxvZ2dlci5sZXZlbCkgPD0gbGV2ZWwpIHtcbiAgICAgIGxldCBtZXRob2QgPSBsb2dnZXIubWV0aG9kTWFwW2xldmVsXTtcbiAgICAgIGlmICghY29uc29sZVttZXRob2RdKSB7ICAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgICAgIG1ldGhvZCA9ICdsb2cnO1xuICAgICAgfVxuICAgICAgY29uc29sZVttZXRob2RdKC4uLm1lc3NhZ2UpOyAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGxvZ2dlcjtcbiJdfQ==\n","// Build out our basic SafeString type\n'use strict';\n\nexports.__esModule = true;\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function () {\n  return '' + this.string;\n};\n\nexports['default'] = SafeString;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3NhZmUtc3RyaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxTQUFTLFVBQVUsQ0FBQyxNQUFNLEVBQUU7QUFDMUIsTUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7Q0FDdEI7O0FBRUQsVUFBVSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsWUFBVztBQUN2RSxTQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0NBQ3pCLENBQUM7O3FCQUVhLFVBQVUiLCJmaWxlIjoic2FmZS1zdHJpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCdWlsZCBvdXQgb3VyIGJhc2ljIFNhZmVTdHJpbmcgdHlwZVxuZnVuY3Rpb24gU2FmZVN0cmluZyhzdHJpbmcpIHtcbiAgdGhpcy5zdHJpbmcgPSBzdHJpbmc7XG59XG5cblNhZmVTdHJpbmcucHJvdG90eXBlLnRvU3RyaW5nID0gU2FmZVN0cmluZy5wcm90b3R5cGUudG9IVE1MID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAnJyArIHRoaXMuc3RyaW5nO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2FmZVN0cmluZztcbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\nexports.checkRevision = checkRevision;\nexports.template = template;\nexports.wrapProgram = wrapProgram;\nexports.resolvePartial = resolvePartial;\nexports.invokePartial = invokePartial;\nexports.noop = noop;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _utils = require('./utils');\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _exception = require('./exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _base = require('./base');\n\nfunction checkRevision(compilerInfo) {\n  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n      currentRevision = _base.COMPILER_REVISION;\n\n  if (compilerRevision !== currentRevision) {\n    if (compilerRevision < currentRevision) {\n      var runtimeVersions = _base.REVISION_CHANGES[currentRevision],\n          compilerVersions = _base.REVISION_CHANGES[compilerRevision];\n      throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n    } else {\n      // Use the embedded version info since the runtime doesn't know about this revision yet\n      throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n    }\n  }\n}\n\nfunction template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new _exception2['default']('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as psuedo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n    var result = env.VM.invokePartial.call(this, partial, context, options);\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n      result = options.partials[options.name](context, options);\n    }\n    if (result != null) {\n      if (options.indent) {\n        var lines = result.split('\\n');\n        for (var i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n    }\n  }\n\n  // Just add water\n  var container = {\n    strict: function strict(obj, name) {\n      if (!(name in obj)) {\n        throw new _exception2['default']('\"' + name + '\" not defined in ' + obj);\n      }\n      return obj[name];\n    },\n    lookup: function lookup(depths, name) {\n      var len = depths.length;\n      for (var i = 0; i < len; i++) {\n        if (depths[i] && depths[i][name] != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function lambda(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function fn(i) {\n      var ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n      var programWrapper = this.programs[i],\n          fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function data(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    merge: function merge(param, common) {\n      var obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    var depths = undefined,\n        blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n    }\n    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n    return main(context, options);\n  }\n  ret.isTop = true;\n\n  ret._setup = function (options) {\n    if (!options.partial) {\n      container.helpers = container.merge(options.helpers, env.helpers);\n\n      if (templateSpec.usePartial) {\n        container.partials = container.merge(options.partials, env.partials);\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = container.merge(options.decorators, env.decorators);\n      }\n    } else {\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n    }\n  };\n\n  ret._child = function (i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new _exception2['default']('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new _exception2['default']('must pass parent depths');\n    }\n\n    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n  function prog(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var currentDepths = depths;\n    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\nfunction resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nfunction invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  var currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  var partialBlock = undefined;\n  if (options.fn && options.fn !== noop) {\n    (function () {\n      options.data = _base.createFrame(options.data);\n      // Wrapper function to get access to currentPartialBlock from the closure\n      var fn = options.fn;\n      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {\n        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n        // Restore the partial-block from the closure for the execution of the block\n        // i.e. the part inside the block of the partial call.\n        options.data = _base.createFrame(options.data);\n        options.data['partial-block'] = currentPartialBlock;\n        return fn(context, options);\n      };\n      if (fn.partials) {\n        options.partials = Utils.extend({}, options.partials, fn.partials);\n      }\n    })();\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new _exception2['default']('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nfunction noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? _base.createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    var props = {};\n    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/* global window */\n'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (Handlebars) {\n  /* istanbul ignore next */\n  var root = typeof global !== 'undefined' ? global : window,\n      $Handlebars = root.Handlebars;\n  /* istanbul ignore next */\n  Handlebars.noConflict = function () {\n    if (root.Handlebars === Handlebars) {\n      root.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL25vLWNvbmZsaWN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O3FCQUNlLFVBQVMsVUFBVSxFQUFFOztBQUVsQyxNQUFJLElBQUksR0FBRyxPQUFPLE1BQU0sS0FBSyxXQUFXLEdBQUcsTUFBTSxHQUFHLE1BQU07TUFDdEQsV0FBVyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7O0FBRWxDLFlBQVUsQ0FBQyxVQUFVLEdBQUcsWUFBVztBQUNqQyxRQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssVUFBVSxFQUFFO0FBQ2xDLFVBQUksQ0FBQyxVQUFVLEdBQUcsV0FBVyxDQUFDO0tBQy9CO0FBQ0QsV0FBTyxVQUFVLENBQUM7R0FDbkIsQ0FBQztDQUNIIiwiZmlsZSI6Im5vLWNvbmZsaWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIHdpbmRvdyAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oSGFuZGxlYmFycykge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBsZXQgcm9vdCA9IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDogd2luZG93LFxuICAgICAgJEhhbmRsZWJhcnMgPSByb290LkhhbmRsZWJhcnM7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIEhhbmRsZWJhcnMubm9Db25mbGljdCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmIChyb290LkhhbmRsZWJhcnMgPT09IEhhbmRsZWJhcnMpIHtcbiAgICAgIHJvb3QuSGFuZGxlYmFycyA9ICRIYW5kbGViYXJzO1xuICAgIH1cbiAgICByZXR1cm4gSGFuZGxlYmFycztcbiAgfTtcbn1cbiJdfQ==\n","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport default function invariant(condition, message) {\n  /* istanbul ignore else */\n  if (!condition) {\n    throw new Error(message);\n  }\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport invariant from '../jsutils/invariant';\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = function Source(body, name, locationOffset) {\n  _classCallCheck(this, Source);\n\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || { line: 1, column: 1 };\n  !(this.locationOffset.line > 0) ? invariant(0, 'line in locationOffset is 1-indexed and must be positive') : void 0;\n  !(this.locationOffset.column > 0) ? invariant(0, 'column in locationOffset is 1-indexed and must be positive') : void 0;\n};","\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match = void 0;\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n  return { line: line, column: column };\n}\n\n/**\n * Represents a location in a Source.\n */","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { getLocation } from '../language/location';\n\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\nexport function printError(error) {\n  var printedLocations = [];\n  if (error.nodes) {\n    error.nodes.forEach(function (node) {\n      if (node.loc) {\n        printedLocations.push(highlightSourceAtLocation(node.loc.source, getLocation(node.loc.source, node.loc.start)));\n      }\n    });\n  } else if (error.source && error.locations) {\n    var source = error.source;\n    error.locations.forEach(function (location) {\n      printedLocations.push(highlightSourceAtLocation(source, location));\n    });\n  }\n  return printedLocations.length === 0 ? error.message : [error.message].concat(printedLocations).join('\\n\\n') + '\\n';\n}\n\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\nfunction highlightSourceAtLocation(source, location) {\n  var line = location.line;\n  var lineOffset = source.locationOffset.line - 1;\n  var columnOffset = getColumnOffset(source, location);\n  var contextLine = line + lineOffset;\n  var contextColumn = location.column + columnOffset;\n  var prevLineNum = (contextLine - 1).toString();\n  var lineNum = contextLine.toString();\n  var nextLineNum = (contextLine + 1).toString();\n  var padLen = nextLineNum.length;\n  var lines = source.body.split(/\\r\\n|[\\n\\r]/g);\n  lines[0] = whitespace(source.locationOffset.column - 1) + lines[0];\n  var outputLines = [source.name + ' (' + contextLine + ':' + contextColumn + ')', line >= 2 && lpad(padLen, prevLineNum) + ': ' + lines[line - 2], lpad(padLen, lineNum) + ': ' + lines[line - 1], whitespace(2 + padLen + contextColumn - 1) + '^', line < lines.length && lpad(padLen, nextLineNum) + ': ' + lines[line]];\n  return outputLines.filter(Boolean).join('\\n');\n}\n\nfunction getColumnOffset(source, location) {\n  return location.line === 1 ? source.locationOffset.column - 1 : 0;\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { printError } from './printError';\nimport { getLocation } from '../language/location';\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined;\n\n  // Compute locations in the source for the given nodes/positions.\n  var _source = source;\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n      return list;\n    }, []);\n  }\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations = void 0;\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n      return list;\n    }, []);\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      value: extensions || originalError && originalError.extensions\n    }\n  });\n\n  // Include (non-enumerable) stack trace.\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: { value: GraphQLError },\n  name: { value: 'GraphQLError' },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});","\nimport { GraphQLError } from './GraphQLError';\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError('Syntax Error: ' + description, undefined, source, [position]);\n}","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport invariant from '../jsutils/invariant';\n\n\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n */\nexport function formatError(error) {\n  !error ? invariant(0, 'Received null or undefined error.') : void 0;\n  return _extends({}, error.extensions, {\n    message: error.message || 'An unknown error occurred.',\n    locations: error.locations,\n    path: error.path\n  });\n}","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * Coffeescript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nexport default function blockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n\n  // Remove common indentation from all lines but first.\n  var commonIndent = null;\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n    if (indent < line.length && (commonIndent === null || indent < commonIndent)) {\n      commonIndent = indent;\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  if (commonIndent) {\n    for (var _i = 1; _i < lines.length; _i++) {\n      lines[_i] = lines[_i].slice(commonIndent);\n    }\n  }\n\n  // Remove leading and trailing blank lines.\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  }\n\n  // Return a string of the lines joined with U+000A.\n  return lines.join('\\n');\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { syntaxError } from '../error';\nimport blockStringValue from './blockStringValue';\n\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nexport function createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n  return token;\n}\n\n/**\n * The return type of createLexer.\n */\n\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n\n/**\n * The enum type representing the token kinds values.\n */\n\n\n/**\n * A helper function to describe a token as a string for debugging\n */\nexport function getTokenDesc(token) {\n  var value = token.value;\n  return value ? token.kind + ' \"' + value + '\"' : token.kind;\n}\n\nvar charCodeAt = String.prototype.charCodeAt;\nvar slice = String.prototype.slice;\n\n/**\n * Helper function for constructing the Token object.\n */\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nTok.prototype.toJSON = Tok.prototype.inspect = function toJSON() {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n};\n\nfunction printCharCode(code) {\n  return (\n    // NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    '\"\\\\u' + ('00' + code.toString(16).toUpperCase()).slice(-4) + '\"'\n  );\n}\n\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace and comments until it finds the next lexable\n * token, then lexes punctuators immediately or calls the appropriate helper\n * function for more complicated tokens.\n */\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = charCodeAt.call(body, pos);\n\n  // SourceCharacter\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    throw syntaxError(source, pos, 'Cannot contain the invalid character ' + printCharCode(code) + '.');\n  }\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n    case 46:\n      if (charCodeAt.call(body, pos + 1) === 46 && charCodeAt.call(body, pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n      break;\n    // :\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n    case 34:\n      if (charCodeAt.call(body, pos + 1) === 34 && charCodeAt.call(body, pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev);\n      }\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n\n/**\n * Report a message that an unexpected character was encountered.\n */\nfunction unexpectedCharacterMessage(code) {\n  if (code === 39) {\n    // '\n    return \"Unexpected single quote character ('), did you mean to use \" + 'a double quote (\")?';\n  }\n\n  return 'Cannot parse the unexpected character ' + printCharCode(code) + '.';\n}\n\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * or commented character, then returns the position of that character for\n * lexing.\n */\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n  while (position < bodyLength) {\n    var code = charCodeAt.call(body, position);\n    // tab | space | comma | BOM\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (charCodeAt.call(body, position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n  return position;\n}\n\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code = void 0;\n  var position = start;\n\n  do {\n    code = charCodeAt.call(body, ++position);\n  } while (code !== null && (\n  // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, slice.call(body, start + 1, position));\n}\n\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = charCodeAt.call(body, ++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = charCodeAt.call(body, ++position);\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, 'Invalid number, unexpected digit after 0: ' + printCharCode(code) + '.');\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    if (code === 43 || code === 45) {\n      // + -\n      code = charCodeAt.call(body, ++position);\n    }\n    position = readDigits(source, position, code);\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, slice.call(body, start, position));\n}\n\n/**\n * Returns the new position in the source after reading digits.\n */\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = charCodeAt.call(body, ++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n    return position;\n  }\n  throw syntaxError(source, position, 'Invalid number, expected digit but got: ' + printCharCode(code) + '.');\n}\n\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null &&\n  // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += slice.call(body, chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    ++position;\n    if (code === 92) {\n      // \\\n      value += slice.call(body, chunkStart, position - 1);\n      code = charCodeAt.call(body, position);\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n        case 47:\n          value += '/';\n          break;\n        case 92:\n          value += '\\\\';\n          break;\n        case 98:\n          value += '\\b';\n          break;\n        case 102:\n          value += '\\f';\n          break;\n        case 110:\n          value += '\\n';\n          break;\n        case 114:\n          value += '\\r';\n          break;\n        case 116:\n          value += '\\t';\n          break;\n        case 117:\n          // u\n          var charCode = uniCharCode(charCodeAt.call(body, position + 1), charCodeAt.call(body, position + 2), charCodeAt.call(body, position + 3), charCodeAt.call(body, position + 4));\n          if (charCode < 0) {\n            throw syntaxError(source, position, 'Invalid character escape sequence: ' + ('\\\\u' + body.slice(position + 1, position + 5) + '.'));\n          }\n          value += String.fromCharCode(charCode);\n          position += 4;\n          break;\n        default:\n          throw syntaxError(source, position, 'Invalid character escape sequence: \\\\' + String.fromCharCode(code) + '.');\n      }\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\nfunction readBlockString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34) {\n      rawValue += slice.call(body, chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, blockStringValue(rawValue));\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    // Escape Triple-Quote (\\\"\"\")\n    if (code === 92 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34 && charCodeAt.call(body, position + 3) === 34) {\n      rawValue += slice.call(body, chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n\n/**\n * Converts four hexidecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n  while (position !== bodyLength && (code = charCodeAt.call(body, position)) !== null && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, slice.call(body, start, position));\n}","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  VARIABLE: 'Variable',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n\n  // Values\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n\n  // Directives\n  DIRECTIVE: 'Directive',\n\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',\n\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition'\n});\n\n/**\n * The enum type representing the possible kind values of AST nodes.\n */","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n\n/**\n * The enum type representing the directive location values.\n */","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { Source } from './source';\nimport { syntaxError } from '../error';\n\nimport { createLexer, TokenKind, getTokenDesc } from './lexer';\n\n\nimport { Kind } from './kinds';\nimport { DirectiveLocation } from './directiveLocation';\n\n/**\n * Configuration options to control parser behavior\n */\n\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var sourceObj = typeof source === 'string' ? new Source(source) : source;\n  if (!(sourceObj instanceof Source)) {\n    throw new TypeError('Must provide Source. Received: ' + String(sourceObj));\n  }\n  var lexer = createLexer(sourceObj, options || {});\n  return parseDocument(lexer);\n}\n\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\nexport function parseValue(source, options) {\n  var sourceObj = typeof source === 'string' ? new Source(source) : source;\n  var lexer = createLexer(sourceObj, options || {});\n  expect(lexer, TokenKind.SOF);\n  var value = parseValueLiteral(lexer, false);\n  expect(lexer, TokenKind.EOF);\n  return value;\n}\n\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\nexport function parseType(source, options) {\n  var sourceObj = typeof source === 'string' ? new Source(source) : source;\n  var lexer = createLexer(sourceObj, options || {});\n  expect(lexer, TokenKind.SOF);\n  var type = parseTypeReference(lexer);\n  expect(lexer, TokenKind.EOF);\n  return type;\n}\n\n/**\n * Converts a name lex token into a name parse node.\n */\nfunction parseName(lexer) {\n  var token = expect(lexer, TokenKind.NAME);\n  return {\n    kind: Kind.NAME,\n    value: token.value,\n    loc: loc(lexer, token)\n  };\n}\n\n// Implements the parsing rules in the Document section.\n\n/**\n * Document : Definition+\n */\nfunction parseDocument(lexer) {\n  var start = lexer.token;\n  expect(lexer, TokenKind.SOF);\n  var definitions = [];\n  do {\n    definitions.push(parseDefinition(lexer));\n  } while (!skip(lexer, TokenKind.EOF));\n\n  return {\n    kind: Kind.DOCUMENT,\n    definitions: definitions,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Definition :\n *   - ExecutableDefinition\n *   - TypeSystemDefinition\n */\nfunction parseDefinition(lexer) {\n  if (peek(lexer, TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n      case 'fragment':\n        return parseExecutableDefinition(lexer);\n      case 'schema':\n      case 'scalar':\n      case 'type':\n      case 'interface':\n      case 'union':\n      case 'enum':\n      case 'input':\n      case 'extend':\n      case 'directive':\n        // Note: The schema definition language is an experimental addition.\n        return parseTypeSystemDefinition(lexer);\n    }\n  } else if (peek(lexer, TokenKind.BRACE_L)) {\n    return parseExecutableDefinition(lexer);\n  } else if (peekDescription(lexer)) {\n    // Note: The schema definition language is an experimental addition.\n    return parseTypeSystemDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n\n/**\n * ExecutableDefinition :\n *   - OperationDefinition\n *   - FragmentDefinition\n */\nfunction parseExecutableDefinition(lexer) {\n  if (peek(lexer, TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n        return parseOperationDefinition(lexer);\n\n      case 'fragment':\n        return parseFragmentDefinition(lexer);\n    }\n  } else if (peek(lexer, TokenKind.BRACE_L)) {\n    return parseOperationDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n\n// Implements the parsing rules in the Operations section.\n\n/**\n * OperationDefinition :\n *  - SelectionSet\n *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n */\nfunction parseOperationDefinition(lexer) {\n  var start = lexer.token;\n  if (peek(lexer, TokenKind.BRACE_L)) {\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: 'query',\n      name: undefined,\n      variableDefinitions: [],\n      directives: [],\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  var operation = parseOperationType(lexer);\n  var name = void 0;\n  if (peek(lexer, TokenKind.NAME)) {\n    name = parseName(lexer);\n  }\n  return {\n    kind: Kind.OPERATION_DEFINITION,\n    operation: operation,\n    name: name,\n    variableDefinitions: parseVariableDefinitions(lexer),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationType : one of query mutation subscription\n */\nfunction parseOperationType(lexer) {\n  var operationToken = expect(lexer, TokenKind.NAME);\n  switch (operationToken.value) {\n    case 'query':\n      return 'query';\n    case 'mutation':\n      return 'mutation';\n    case 'subscription':\n      return 'subscription';\n  }\n\n  throw unexpected(lexer, operationToken);\n}\n\n/**\n * VariableDefinitions : ( VariableDefinition+ )\n */\nfunction parseVariableDefinitions(lexer) {\n  return peek(lexer, TokenKind.PAREN_L) ? many(lexer, TokenKind.PAREN_L, parseVariableDefinition, TokenKind.PAREN_R) : [];\n}\n\n/**\n * VariableDefinition : Variable : Type DefaultValue?\n */\nfunction parseVariableDefinition(lexer) {\n  var start = lexer.token;\n  return {\n    kind: Kind.VARIABLE_DEFINITION,\n    variable: parseVariable(lexer),\n    type: (expect(lexer, TokenKind.COLON), parseTypeReference(lexer)),\n    defaultValue: skip(lexer, TokenKind.EQUALS) ? parseValueLiteral(lexer, true) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Variable : $ Name\n */\nfunction parseVariable(lexer) {\n  var start = lexer.token;\n  expect(lexer, TokenKind.DOLLAR);\n  return {\n    kind: Kind.VARIABLE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * SelectionSet : { Selection+ }\n */\nfunction parseSelectionSet(lexer) {\n  var start = lexer.token;\n  return {\n    kind: Kind.SELECTION_SET,\n    selections: many(lexer, TokenKind.BRACE_L, parseSelection, TokenKind.BRACE_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Selection :\n *   - Field\n *   - FragmentSpread\n *   - InlineFragment\n */\nfunction parseSelection(lexer) {\n  return peek(lexer, TokenKind.SPREAD) ? parseFragment(lexer) : parseField(lexer);\n}\n\n/**\n * Field : Alias? Name Arguments? Directives? SelectionSet?\n *\n * Alias : Name :\n */\nfunction parseField(lexer) {\n  var start = lexer.token;\n\n  var nameOrAlias = parseName(lexer);\n  var alias = void 0;\n  var name = void 0;\n  if (skip(lexer, TokenKind.COLON)) {\n    alias = nameOrAlias;\n    name = parseName(lexer);\n  } else {\n    name = nameOrAlias;\n  }\n\n  return {\n    kind: Kind.FIELD,\n    alias: alias,\n    name: name,\n    arguments: parseArguments(lexer, false),\n    directives: parseDirectives(lexer, false),\n    selectionSet: peek(lexer, TokenKind.BRACE_L) ? parseSelectionSet(lexer) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Arguments[Const] : ( Argument[?Const]+ )\n */\nfunction parseArguments(lexer, isConst) {\n  var item = isConst ? parseConstArgument : parseArgument;\n  return peek(lexer, TokenKind.PAREN_L) ? many(lexer, TokenKind.PAREN_L, item, TokenKind.PAREN_R) : [];\n}\n\n/**\n * Argument[Const] : Name : Value[?Const]\n */\nfunction parseArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: Kind.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, TokenKind.COLON), parseValueLiteral(lexer, false)),\n    loc: loc(lexer, start)\n  };\n}\n\nfunction parseConstArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: Kind.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, TokenKind.COLON), parseConstValue(lexer)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Fragments section.\n\n/**\n * Corresponds to both FragmentSpread and InlineFragment in the spec.\n *\n * FragmentSpread : ... FragmentName Directives?\n *\n * InlineFragment : ... TypeCondition? Directives? SelectionSet\n */\nfunction parseFragment(lexer) {\n  var start = lexer.token;\n  expect(lexer, TokenKind.SPREAD);\n  if (peek(lexer, TokenKind.NAME) && lexer.token.value !== 'on') {\n    return {\n      kind: Kind.FRAGMENT_SPREAD,\n      name: parseFragmentName(lexer),\n      directives: parseDirectives(lexer, false),\n      loc: loc(lexer, start)\n    };\n  }\n  var typeCondition = void 0;\n  if (lexer.token.value === 'on') {\n    lexer.advance();\n    typeCondition = parseNamedType(lexer);\n  }\n  return {\n    kind: Kind.INLINE_FRAGMENT,\n    typeCondition: typeCondition,\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentDefinition :\n *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n *\n * TypeCondition : NamedType\n */\nfunction parseFragmentDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'fragment');\n  // Experimental support for defining variables within fragments changes\n  // the grammar of FragmentDefinition:\n  //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n  if (lexer.options.experimentalFragmentVariables) {\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: parseFragmentName(lexer),\n      variableDefinitions: parseVariableDefinitions(lexer),\n      typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n      directives: parseDirectives(lexer, false),\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  return {\n    kind: Kind.FRAGMENT_DEFINITION,\n    name: parseFragmentName(lexer),\n    typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentName : Name but not `on`\n */\nfunction parseFragmentName(lexer) {\n  if (lexer.token.value === 'on') {\n    throw unexpected(lexer);\n  }\n  return parseName(lexer);\n}\n\n// Implements the parsing rules in the Values section.\n\n/**\n * Value[Const] :\n *   - [~Const] Variable\n *   - IntValue\n *   - FloatValue\n *   - StringValue\n *   - BooleanValue\n *   - NullValue\n *   - EnumValue\n *   - ListValue[?Const]\n *   - ObjectValue[?Const]\n *\n * BooleanValue : one of `true` `false`\n *\n * NullValue : `null`\n *\n * EnumValue : Name but not `true`, `false` or `null`\n */\nfunction parseValueLiteral(lexer, isConst) {\n  var token = lexer.token;\n  switch (token.kind) {\n    case TokenKind.BRACKET_L:\n      return parseList(lexer, isConst);\n    case TokenKind.BRACE_L:\n      return parseObject(lexer, isConst);\n    case TokenKind.INT:\n      lexer.advance();\n      return {\n        kind: Kind.INT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case TokenKind.FLOAT:\n      lexer.advance();\n      return {\n        kind: Kind.FLOAT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case TokenKind.STRING:\n    case TokenKind.BLOCK_STRING:\n      return parseStringLiteral(lexer);\n    case TokenKind.NAME:\n      if (token.value === 'true' || token.value === 'false') {\n        lexer.advance();\n        return {\n          kind: Kind.BOOLEAN,\n          value: token.value === 'true',\n          loc: loc(lexer, token)\n        };\n      } else if (token.value === 'null') {\n        lexer.advance();\n        return {\n          kind: Kind.NULL,\n          loc: loc(lexer, token)\n        };\n      }\n      lexer.advance();\n      return {\n        kind: Kind.ENUM,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case TokenKind.DOLLAR:\n      if (!isConst) {\n        return parseVariable(lexer);\n      }\n      break;\n  }\n  throw unexpected(lexer);\n}\n\nfunction parseStringLiteral(lexer) {\n  var token = lexer.token;\n  lexer.advance();\n  return {\n    kind: Kind.STRING,\n    value: token.value,\n    block: token.kind === TokenKind.BLOCK_STRING,\n    loc: loc(lexer, token)\n  };\n}\n\nexport function parseConstValue(lexer) {\n  return parseValueLiteral(lexer, true);\n}\n\nfunction parseValueValue(lexer) {\n  return parseValueLiteral(lexer, false);\n}\n\n/**\n * ListValue[Const] :\n *   - [ ]\n *   - [ Value[?Const]+ ]\n */\nfunction parseList(lexer, isConst) {\n  var start = lexer.token;\n  var item = isConst ? parseConstValue : parseValueValue;\n  return {\n    kind: Kind.LIST,\n    values: any(lexer, TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectValue[Const] :\n *   - { }\n *   - { ObjectField[?Const]+ }\n */\nfunction parseObject(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, TokenKind.BRACE_L);\n  var fields = [];\n  while (!skip(lexer, TokenKind.BRACE_R)) {\n    fields.push(parseObjectField(lexer, isConst));\n  }\n  return {\n    kind: Kind.OBJECT,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectField[Const] : Name : Value[?Const]\n */\nfunction parseObjectField(lexer, isConst) {\n  var start = lexer.token;\n  return {\n    kind: Kind.OBJECT_FIELD,\n    name: parseName(lexer),\n    value: (expect(lexer, TokenKind.COLON), parseValueLiteral(lexer, isConst)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Directives section.\n\n/**\n * Directives[Const] : Directive[?Const]+\n */\nfunction parseDirectives(lexer, isConst) {\n  var directives = [];\n  while (peek(lexer, TokenKind.AT)) {\n    directives.push(parseDirective(lexer, isConst));\n  }\n  return directives;\n}\n\n/**\n * Directive[Const] : @ Name Arguments[?Const]?\n */\nfunction parseDirective(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, TokenKind.AT);\n  return {\n    kind: Kind.DIRECTIVE,\n    name: parseName(lexer),\n    arguments: parseArguments(lexer, isConst),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Types section.\n\n/**\n * Type :\n *   - NamedType\n *   - ListType\n *   - NonNullType\n */\nexport function parseTypeReference(lexer) {\n  var start = lexer.token;\n  var type = void 0;\n  if (skip(lexer, TokenKind.BRACKET_L)) {\n    type = parseTypeReference(lexer);\n    expect(lexer, TokenKind.BRACKET_R);\n    type = {\n      kind: Kind.LIST_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  } else {\n    type = parseNamedType(lexer);\n  }\n  if (skip(lexer, TokenKind.BANG)) {\n    return {\n      kind: Kind.NON_NULL_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  }\n  return type;\n}\n\n/**\n * NamedType : Name\n */\nexport function parseNamedType(lexer) {\n  var start = lexer.token;\n  return {\n    kind: Kind.NAMED_TYPE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Type Definition section.\n\n/**\n * TypeSystemDefinition :\n *   - SchemaDefinition\n *   - TypeDefinition\n *   - TypeExtension\n *   - DirectiveDefinition\n *\n * TypeDefinition :\n *   - ScalarTypeDefinition\n *   - ObjectTypeDefinition\n *   - InterfaceTypeDefinition\n *   - UnionTypeDefinition\n *   - EnumTypeDefinition\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeSystemDefinition(lexer) {\n  // Many definitions begin with a description and require a lookahead.\n  var keywordToken = peekDescription(lexer) ? lexer.lookahead() : lexer.token;\n\n  if (keywordToken.kind === TokenKind.NAME) {\n    switch (keywordToken.value) {\n      case 'schema':\n        return parseSchemaDefinition(lexer);\n      case 'scalar':\n        return parseScalarTypeDefinition(lexer);\n      case 'type':\n        return parseObjectTypeDefinition(lexer);\n      case 'interface':\n        return parseInterfaceTypeDefinition(lexer);\n      case 'union':\n        return parseUnionTypeDefinition(lexer);\n      case 'enum':\n        return parseEnumTypeDefinition(lexer);\n      case 'input':\n        return parseInputObjectTypeDefinition(lexer);\n      case 'extend':\n        return parseTypeExtension(lexer);\n      case 'directive':\n        return parseDirectiveDefinition(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\nfunction peekDescription(lexer) {\n  return peek(lexer, TokenKind.STRING) || peek(lexer, TokenKind.BLOCK_STRING);\n}\n\n/**\n * Description : StringValue\n */\nfunction parseDescription(lexer) {\n  if (peekDescription(lexer)) {\n    return parseStringLiteral(lexer);\n  }\n}\n\n/**\n * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n */\nfunction parseSchemaDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'schema');\n  var directives = parseDirectives(lexer, true);\n  var operationTypes = many(lexer, TokenKind.BRACE_L, parseOperationTypeDefinition, TokenKind.BRACE_R);\n  return {\n    kind: Kind.SCHEMA_DEFINITION,\n    directives: directives,\n    operationTypes: operationTypes,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationTypeDefinition : OperationType : NamedType\n */\nfunction parseOperationTypeDefinition(lexer) {\n  var start = lexer.token;\n  var operation = parseOperationType(lexer);\n  expect(lexer, TokenKind.COLON);\n  var type = parseNamedType(lexer);\n  return {\n    kind: Kind.OPERATION_TYPE_DEFINITION,\n    operation: operation,\n    type: type,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n */\nfunction parseScalarTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: Kind.SCALAR_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeDefinition :\n *   Description?\n *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n */\nfunction parseObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: Kind.OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ImplementsInterfaces :\n *   - implements `&`? NamedType\n *   - ImplementsInterfaces & NamedType\n */\nfunction parseImplementsInterfaces(lexer) {\n  var types = [];\n  if (lexer.token.value === 'implements') {\n    lexer.advance();\n    // Optional leading ampersand\n    skip(lexer, TokenKind.AMP);\n    do {\n      types.push(parseNamedType(lexer));\n    } while (skip(lexer, TokenKind.AMP) ||\n    // Legacy support for the SDL?\n    lexer.options.allowLegacySDLImplementsInterfaces && peek(lexer, TokenKind.NAME));\n  }\n  return types;\n}\n\n/**\n * FieldsDefinition : { FieldDefinition+ }\n */\nfunction parseFieldsDefinition(lexer) {\n  // Legacy support for the SDL?\n  if (lexer.options.allowLegacySDLEmptyFields && peek(lexer, TokenKind.BRACE_L) && lexer.lookahead().kind === TokenKind.BRACE_R) {\n    lexer.advance();\n    lexer.advance();\n    return [];\n  }\n  return peek(lexer, TokenKind.BRACE_L) ? many(lexer, TokenKind.BRACE_L, parseFieldDefinition, TokenKind.BRACE_R) : [];\n}\n\n/**\n * FieldDefinition :\n *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n */\nfunction parseFieldDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expect(lexer, TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: Kind.FIELD_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    type: type,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ArgumentsDefinition : ( InputValueDefinition+ )\n */\nfunction parseArgumentDefs(lexer) {\n  if (!peek(lexer, TokenKind.PAREN_L)) {\n    return [];\n  }\n  return many(lexer, TokenKind.PAREN_L, parseInputValueDef, TokenKind.PAREN_R);\n}\n\n/**\n * InputValueDefinition :\n *   - Description? Name : Type DefaultValue? Directives[Const]?\n */\nfunction parseInputValueDef(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  expect(lexer, TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var defaultValue = void 0;\n  if (skip(lexer, TokenKind.EQUALS)) {\n    defaultValue = parseConstValue(lexer);\n  }\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: Kind.INPUT_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    type: type,\n    defaultValue: defaultValue,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeDefinition :\n *   - Description? interface Name Directives[Const]? FieldsDefinition?\n */\nfunction parseInterfaceTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: Kind.INTERFACE_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeDefinition :\n *   - Description? union Name Directives[Const]? UnionMemberTypes?\n */\nfunction parseUnionTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseUnionMemberTypes(lexer);\n  return {\n    kind: Kind.UNION_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionMemberTypes :\n *   - = `|`? NamedType\n *   - UnionMemberTypes | NamedType\n */\nfunction parseUnionMemberTypes(lexer) {\n  var types = [];\n  if (skip(lexer, TokenKind.EQUALS)) {\n    // Optional leading pipe\n    skip(lexer, TokenKind.PIPE);\n    do {\n      types.push(parseNamedType(lexer));\n    } while (skip(lexer, TokenKind.PIPE));\n  }\n  return types;\n}\n\n/**\n * EnumTypeDefinition :\n *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n */\nfunction parseEnumTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  return {\n    kind: Kind.ENUM_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumValuesDefinition : { EnumValueDefinition+ }\n */\nfunction parseEnumValuesDefinition(lexer) {\n  return peek(lexer, TokenKind.BRACE_L) ? many(lexer, TokenKind.BRACE_L, parseEnumValueDefinition, TokenKind.BRACE_R) : [];\n}\n\n/**\n * EnumValueDefinition : Description? EnumValue Directives[Const]?\n *\n * EnumValue : Name\n */\nfunction parseEnumValueDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: Kind.ENUM_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeDefinition :\n *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n */\nfunction parseInputObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  return {\n    kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputFieldsDefinition : { InputValueDefinition+ }\n */\nfunction parseInputFieldsDefinition(lexer) {\n  return peek(lexer, TokenKind.BRACE_L) ? many(lexer, TokenKind.BRACE_L, parseInputValueDef, TokenKind.BRACE_R) : [];\n}\n\n/**\n * TypeExtension :\n *   - ScalarTypeExtension\n *   - ObjectTypeExtension\n *   - InterfaceTypeExtension\n *   - UnionTypeExtension\n *   - EnumTypeExtension\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeExtension(lexer) {\n  var keywordToken = lexer.lookahead();\n\n  if (keywordToken.kind === TokenKind.NAME) {\n    switch (keywordToken.value) {\n      case 'scalar':\n        return parseScalarTypeExtension(lexer);\n      case 'type':\n        return parseObjectTypeExtension(lexer);\n      case 'interface':\n        return parseInterfaceTypeExtension(lexer);\n      case 'union':\n        return parseUnionTypeExtension(lexer);\n      case 'enum':\n        return parseEnumTypeExtension(lexer);\n      case 'input':\n        return parseInputObjectTypeExtension(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\n/**\n * ScalarTypeExtension :\n *   - extend scalar Name Directives[Const]\n */\nfunction parseScalarTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  if (directives.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.SCALAR_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeExtension :\n *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n *  - extend type Name ImplementsInterfaces? Directives[Const]\n *  - extend type Name ImplementsInterfaces\n */\nfunction parseObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.OBJECT_TYPE_EXTENSION,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeExtension :\n *   - extend interface Name Directives[Const]? FieldsDefinition\n *   - extend interface Name Directives[Const]\n */\nfunction parseInterfaceTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.INTERFACE_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeExtension :\n *   - extend union Name Directives[Const]? UnionMemberTypes\n *   - extend union Name Directives[Const]\n */\nfunction parseUnionTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseUnionMemberTypes(lexer);\n  if (directives.length === 0 && types.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.UNION_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumTypeExtension :\n *   - extend enum Name Directives[Const]? EnumValuesDefinition\n *   - extend enum Name Directives[Const]\n */\nfunction parseEnumTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  if (directives.length === 0 && values.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.ENUM_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeExtension :\n *   - extend input Name Directives[Const]? InputFieldsDefinition\n *   - extend input Name Directives[Const]\n */\nfunction parseInputObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveDefinition :\n *   - Description? directive @ Name ArgumentsDefinition? on DirectiveLocations\n */\nfunction parseDirectiveDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'directive');\n  expect(lexer, TokenKind.AT);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expectKeyword(lexer, 'on');\n  var locations = parseDirectiveLocations(lexer);\n  return {\n    kind: Kind.DIRECTIVE_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    locations: locations,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveLocations :\n *   - `|`? DirectiveLocation\n *   - DirectiveLocations | DirectiveLocation\n */\nfunction parseDirectiveLocations(lexer) {\n  // Optional leading pipe\n  skip(lexer, TokenKind.PIPE);\n  var locations = [];\n  do {\n    locations.push(parseDirectiveLocation(lexer));\n  } while (skip(lexer, TokenKind.PIPE));\n  return locations;\n}\n\n/*\n * DirectiveLocation :\n *   - ExecutableDirectiveLocation\n *   - TypeSystemDirectiveLocation\n *\n * ExecutableDirectiveLocation : one of\n *   `QUERY`\n *   `MUTATION`\n *   `SUBSCRIPTION`\n *   `FIELD`\n *   `FRAGMENT_DEFINITION`\n *   `FRAGMENT_SPREAD`\n *   `INLINE_FRAGMENT`\n *\n * TypeSystemDirectiveLocation : one of\n *   `SCHEMA`\n *   `SCALAR`\n *   `OBJECT`\n *   `FIELD_DEFINITION`\n *   `ARGUMENT_DEFINITION`\n *   `INTERFACE`\n *   `UNION`\n *   `ENUM`\n *   `ENUM_VALUE`\n *   `INPUT_OBJECT`\n *   `INPUT_FIELD_DEFINITION`\n */\nfunction parseDirectiveLocation(lexer) {\n  var start = lexer.token;\n  var name = parseName(lexer);\n  if (DirectiveLocation.hasOwnProperty(name.value)) {\n    return name;\n  }\n  throw unexpected(lexer, start);\n}\n\n// Core parsing utility functions\n\n/**\n * Returns a location object, used to identify the place in\n * the source that created a given parsed object.\n */\nfunction loc(lexer, startToken) {\n  if (!lexer.options.noLocation) {\n    return new Loc(startToken, lexer.lastToken, lexer.source);\n  }\n}\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nLoc.prototype.toJSON = Loc.prototype.inspect = function toJSON() {\n  return { start: this.start, end: this.end };\n};\n\n/**\n * Determines if the next token is of a given kind\n */\nfunction peek(lexer, kind) {\n  return lexer.token.kind === kind;\n}\n\n/**\n * If the next token is of the given kind, return true after advancing\n * the lexer. Otherwise, do not change the parser state and return false.\n */\nfunction skip(lexer, kind) {\n  var match = lexer.token.kind === kind;\n  if (match) {\n    lexer.advance();\n  }\n  return match;\n}\n\n/**\n * If the next token is of the given kind, return that token after advancing\n * the lexer. Otherwise, do not change the parser state and throw an error.\n */\nfunction expect(lexer, kind) {\n  var token = lexer.token;\n  if (token.kind === kind) {\n    lexer.advance();\n    return token;\n  }\n  throw syntaxError(lexer.source, token.start, 'Expected ' + kind + ', found ' + getTokenDesc(token));\n}\n\n/**\n * If the next token is a keyword with the given value, return that token after\n * advancing the lexer. Otherwise, do not change the parser state and return\n * false.\n */\nfunction expectKeyword(lexer, value) {\n  var token = lexer.token;\n  if (token.kind === TokenKind.NAME && token.value === value) {\n    lexer.advance();\n    return token;\n  }\n  throw syntaxError(lexer.source, token.start, 'Expected \"' + value + '\", found ' + getTokenDesc(token));\n}\n\n/**\n * Helper function for creating an error when an unexpected lexed token\n * is encountered.\n */\nfunction unexpected(lexer, atToken) {\n  var token = atToken || lexer.token;\n  return syntaxError(lexer.source, token.start, 'Unexpected ' + getTokenDesc(token));\n}\n\n/**\n * Returns a possibly empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction any(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}\n\n/**\n * Returns a non-empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction many(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [parseFn(lexer)];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}"],"sourceRoot":""}